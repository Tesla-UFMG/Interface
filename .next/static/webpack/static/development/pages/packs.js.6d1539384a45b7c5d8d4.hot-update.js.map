{"version":3,"file":"static/webpack/static/development/pages/packs.js.6d1539384a45b7c5d8d4.hot-update.js","sources":["webpack:///./pages/packs.js"],"sourcesContent":["import React, { Component } from 'react'\nimport DataFetcher from '../components/data-fetcher.js'\n\nimport CountUpWrapper from '../components/countup-wrapper.js'\n\nimport {DelayContext} from '../components/contexts.js'\n\n\nconst DelayProvider = DelayContext.Provider;\n\nclass Packs extends DataFetcher {\n\n    constructor(props) {\n        super(props)\n\n        this.page = \"packs\"\n        this.delay = 1000;\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <DelayProvider value={this.delay}>\n                    <div className=\"row\">\n                        <div className=\"col-lg-3 col-6\">\n                            <PacksInformation title={\"TENSÃO TOTAL\"} value={((this.state.data || {}).bms || {}).totalVoltage/100 || 0} unit={\"V\"}></PacksInformation>\n                        </div>\n                        <div className=\"col-lg-3 col-6\">\n                            <PacksInformation title={\"CORRENTE MÉDIA\"} value={((this.state.data || {}).bms || {}).mediaCurrent/10 || 0} unit={\"A\"}></PacksInformation>\n                        </div>\n                        <div className=\"col-lg-3 col-6\">\n                            <PacksInformation title={\"TEMPERATURA MÁXIMA\"} value={((this.state.data || {}).bms || {}).maxTemperature/10 || 0} unit={\"ºC\"}></PacksInformation>\n                        </div>\n                        <div className=\"col-lg-3 col-6\">\n                            <PacksInformation title={\"TENSÃO MÍNIMA\"} value={((this.state.data || {}).bms || {}).minVoltage/10000 || 0} unit={\"V\"}></PacksInformation>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"row\">\n                                {(((this.state.data || {}).bms || {}).packs || []).map((pack, index) => <div className=\"col-12 col-lg-4 mt-3\"><Pack key={index} packIndex={index+1} {...pack}/></div>)}\n                            </div>\n                        </div>\n                    </div>\n                </DelayProvider>\n            </div>\n        )\n    }\n}\n\nfunction PacksInformation(props) {\n    return (\n        <div className=\"packs-information-container\">\n            <div className=\"packs-information-title\">\n                {props.title}\n            </div>\n            <div className=\"packs-information-value-wrapper\">\n                <CountUpWrapper end={props.value}>\n                    {\n                        ({countUpRef}) => (\n                            <div ref={countUpRef} className=\"packs-information-value\"/>\n                        )\n                    }\n                </CountUpWrapper>\n                <div className=\"packs-information-unit\">\n                    {props.unit}\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nfunction Pack(props) {\n    return (\n        <div className=\"pack-container\">\n            <div className=\"pack-title-wrapper\">\n                <div className=\"pack-title\">\n                    PACK {props.packIndex-1}\n                </div>\n            </div>\n            <div className=\"pack-content\">\n                <div className=\"pack-voltages\">\n                    <div className=\"pack-section-title\">\n                        TENSÕES\n                    </div>\n                    <div className=\"pack-section-values\">\n                        {props.cells.map((cell, index) => \n                            <CountUpWrapper end={cell/10000.0 || 0}\n                                            duration={5}\n                                            useEasing={false}>\n                                {\n                                    ({countUpRef}) => (\n                                        <div key={\"c-\"+index} ref={countUpRef} className={\"pack-value \"+(cell >= 35500 ? \"over-voltage\" : cell <= 28000 ? \"under-voltage\" : \"\")}></div>\n                                    )\n                                }\n                            </CountUpWrapper>\n                        )}\n                    </div> \n                </div>\n                <div className=\"pack-temperatures\">\n                    <div className=\"pack-section-title\">\n                        TEMPERATURAS\n                    </div>\n                    <div className=\"pack-section-values\">\n                        {props.temperatures.map((temperature, index) =>\n                            <CountUpWrapper end={temperature/10.0 || 0}\n                                            duration={5}\n                                            useEasing={false}>\n                                {\n                                    ({countUpRef}) => (\n                                        <div key={\"t-\"+index} ref={countUpRef} className={\"pack-value \"+(temperature >= 55000 ? \"over-temperature\" : \"\")}></div>\n                                    )\n                                }\n                            </CountUpWrapper>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Packs;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAGA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AAJA;AAKA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAtCA;AACA;AAwCA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AADA;AAKA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AALA;AAaA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AALA;AAgBA;AACA;AACA;;;;A","sourceRoot":""}