{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.dfb2dbdcb23bbff6bc48.hot-update.js","sources":["webpack:///./components/constants.js"],"sourcesContent":["//PARA REGISTRAR UM NOVO DADO:\r\n//primeiramente, em TypeFields, adicione mais uma linha, incrementando o índice em 1 e o nome do dado em camelCase\r\n//depois, adicione mais uma linha em availableField, com o index sendo o mesmo índice do TypeFields.\r\n//se for um dado que tenha possibilidade de ser plotado em tempo real, adicione-o em availablePlotOPtion.\r\n\r\nconst isOnClient = !!(\r\n  typeof require.extensions === \"undefined\" ||\r\n  (typeof window !== \"undefined\" &&\r\n    window.document &&\r\n    window.document.createElement &&\r\n    Object.keys(process.env).length === 0 &&\r\n    process.env.constructor === Object)\r\n);\r\n\r\nconst fs = isOnClient ? null : require(\"fs\");\r\n\r\nif (typeof require.extensions !== \"undefined\")\r\n  require.extensions[\".properties\"] = function (module, filename) {\r\n    module.exports = fs.readFileSync(filename, \"utf8\");\r\n  };\r\n\r\nconst configFileName = \"config.properties\";\r\nlet pr = require(\"../config.properties\");\r\nlet file = typeof pr == \"object\" ? pr.default : pr;\r\n// let file = properties;\r\nif (!isOnClient) {\r\n  if (file === \"\") {\r\n    const configTemplate = `# TIPO DE OPERAÇÃO\r\n# Valores possíveis:\r\n# BYTES  - Recebimento por Xbee em formato de bytes\r\n# STRING - Recebimento por Xbee ou NRF em formato de string\r\n# API_BYTES  - Recebimento por Xbee em API mode por bytes\r\n# API_STRING - Recebimento por Xbee em API mode por string\r\n# [default = STRING]\r\noperationType = STRING\r\n\r\n# [string] [default = 0013A20041932DC6] Endereço 64bits do xbee transmissor.\r\nxbeeSourceAddress = 0013A20041932DC6\r\n\r\n# PORTA SERIAL\r\n\r\n# [string] [default = ] Nome da porta serial que o dispositivo receptor se encontra. Deixe vazio para identificação automática.\r\nportName = \r\n# [string] [default = ignore-ports.txt] Nome do arquivo de texto, na pasta raiz, contendo nome de portas para serem ignoradas na identificação automática de porta, separados por linha.\r\nignorePortsFile = ignore-ports.txt\r\n\r\n# NOTIFICAÇÕES\r\n\r\n# [bool] [default = true] Ativar ou desativar notificações\r\nshouldNotify = true\r\n# [number] [default = 10] Limite percentual para acionar a notificação que alerta da proximidade do valor mínimo/máximo\r\npercentageLimitTolerance = 10\r\n# [number] [default = 30000] Tempo de timeout em milissegundos para a notificação ser reacionada caso a condição não mude\r\nnotificationExpirationTimeout = 30000\r\n\r\n# DATALOG\r\n\r\n# [string] [default = ./datalog/] Caminho para a escrita do datalog. O DIRETÓRIO NÃO É CRIADO, ENTAÃO DEVE, OBRIGATORIAMENTE, EXISTIR.\r\ndatalogFilePath = ./datalog/\r\n# [bool] [default = true] Ativar ou desativar o datalog\r\nshouldWrite = true\r\n# [number]  [default = 30000] Tempo, em milissegundos, de quanto esperar sem receber dados até criar um novo arquivo de texto\r\ndatalogTimeout = 30000\r\n# [bool] [default = false] Incluir timestamp (quantidade de milissegundos desde 1/1/1970 00:00) como primeiro item de cada linha\r\nincludeTimestamp = false\r\n\r\n# PLOTAGEM EM TEMPO REAL\r\n\r\n# BANCO DE DADOS LOCAL\r\n# [number]  [default = 60000] Tempo, em milissegundos, de persistência dos dados no banco de dados antes de serem eliminados. Altere esse valor para definir de quanto tempo atrás os dados devem ser exibidos.\r\npersistanceTimeout = 60000\r\n# [number] [default = 1000] Período, em milissegundos, para ser acionada a varredura do banco de dados local para eliminar dados antigos\r\ncleanUpTimeout = 1000\r\n\r\n#PLOTAGEM\r\n# [number] [default = 1] Quantidade desejada de pontos por segundo para serem exibidos no gráfico. VALORES ALTOS PODEM COMPROMETER A INTEGRIDADE DO SERVIDOR E DA REDE.\r\npointsPerSecond = 1\r\n        `;\r\n    const path = require(\"path\");\r\n    const correctedPath = path.join(__dirname, \"..\", configFileName);\r\n\r\n    fs.writeFileSync(correctedPath, configTemplate);\r\n    file = configTemplate;\r\n  }\r\n}\r\n\r\nconst config = file\r\n  .split(\"\\n\")\r\n  .filter((value) => !value.startsWith(\"#\") && !(value.trim() === \"\"))\r\n  .reduce((previous, current) => {\r\n    const opt = current.split(\"=\").map((value) => value.trim());\r\n    let definition = opt[1];\r\n    let val;\r\n    if (definition == \"\") {\r\n      val = undefined;\r\n    } else if (definition == \"true\" || definition == \"false\") {\r\n      val = definition === \"true\";\r\n    } else if (isNaN(definition)) {\r\n      val = definition;\r\n    } else {\r\n      val = definition * 1;\r\n    }\r\n    previous[opt[0]] = val;\r\n    return previous;\r\n  }, {});\r\n\r\nconst percentageLimitTolerance = config.percentageLimitTolerance;\r\nconst notificationExpirationTimeout = config.notificationExpirationTimeout;\r\nconst shouldNotify = config.shouldNotify;\r\nconst datalogFilePath = config.datalogFilePath;\r\nconst shouldWrite = config.shouldWrite;\r\nconst datalogTimeout = config.datalogTimeout;\r\nconst includeTimestamp = config.includeTimestamp;\r\nconst persistanceTimeout = config.persistanceTimeout;\r\nconst cleanUpTimeout = config.cleanUpTimeout;\r\nconst pointsPerSecond = config.pointsPerSecond;\r\nconst portName = config.portName;\r\nconst ignorePortsFile = config.ignorePortsFile;\r\nconst OperationsType = {\r\n  BYTES: 0,\r\n  STRING: 1,\r\n  API_BYTES: 2,\r\n  API_STRING: 3,\r\n};\r\n\r\nconst operationType = OperationsType[config.operationType];\r\n\r\nlet i;\r\nlet xbeeSourceAddressArray = [];\r\nfor (i = 0; i < config.xbeeSourceAddress.length; i += 2) {\r\n  const oct = config.xbeeSourceAddress.substring(i, i + 2);\r\n  const hex = parseInt(oct, 16);\r\n  xbeeSourceAddressArray.push(hex);\r\n}\r\nconst xbeeSourceAddress = xbeeSourceAddressArray;\r\n\r\nlet fields = {\r\n  /*baterias geral*/\r\n\r\n  airStatus: { index: 0, name: \"airStatus\", id: 227, pos: 2 },\r\n  current0: { index: 2, name: \"current0\", id: 50, pos: 0 },\r\n  current1: { index: 3, name: \"current1\", id: 50, pos: 1 },\r\n  current2: { index: 4, name: \"current2\", id: 50, pos: 2 },\r\n  current3: { index: 5, name: \"current3\", id: 50, pos: 3 },\r\n  glvVoltage: { index: 6, name: \"glvVoltage\", id: 51, pos: 0 },\r\n  chargePercent: { index: 7, name: \"chargePercent\", id: 51, pos: 1 },\r\n  totalVoltage: { index: 11, name: \"totalVoltage\", id: 227, pos: 3 },\r\n  maxTemperature: { index: 13, name: \"maxTemperature\", id: 226, pos: 3 },\r\n  minVoltage: { index: 14, name: \"minVoltage\", id: 226, pos: 1 },\r\n  mediaTemperature: { index: 12, name: \"mediaTemperature\", id: 231, pos: 3 },\r\n\r\n  /*pack 0*/\r\n\r\n  cell000: { index: 40, name: \"cell000\", id: 281, pos: 0 },\r\n  cell001: { index: 41, name: \"cell001\", id: 281, pos: 1 },\r\n  cell002: { index: 42, name: \"cell002\", id: 281, pos: 2 },\r\n  cell003: { index: 43, name: \"cell003\", id: 281, pos: 3 },\r\n  cell004: { index: 44, name: \"cell004\", id: 282, pos: 0 },\r\n  cell005: { index: 45, name: \"cell005\", id: 282, pos: 1 },\r\n  cell006: { index: 46, name: \"cell006\", id: 282, pos: 2 },\r\n  cell007: { index: 47, name: \"cell007\", id: 282, pos: 3 },\r\n  cell008: { index: 48, name: \"cell008\", id: 283, pos: 0 },\r\n  cell009: { index: 49, name: \"cell009\", id: 283, pos: 1 },\r\n  cell010: { index: 50, name: \"cell010\", id: 283, pos: 2 },\r\n  cell011: { index: 51, name: \"cell011\", id: 283, pos: 3 },\r\n  cell012: { index: 52, name: \"cell012\", id: 284, pos: 0 },\r\n  temp001: { index: 53, name: \"temp001\", id: 284, pos: 1 },\r\n  temp002: { index: 54, name: \"temp002\", id: 284, pos: 2 },\r\n  temp003: { index: 55, name: \"temp003\", id: 284, pos: 3 },\r\n  temp004: { index: 56, name: \"temp004\", id: 285, pos: 0 },\r\n  temp005: { index: 57, name: \"temp005\", id: 285, pos: 1 },\r\n\r\n  /*pack 1*/\r\n\r\n  cell100: { index: 58, name: \"cell100\", id: 276, pos: 0 },\r\n  cell101: { index: 59, name: \"cell101\", id: 276, pos: 1 },\r\n  cell102: { index: 60, name: \"cell102\", id: 276, pos: 2 },\r\n  cell103: { index: 61, name: \"cell103\", id: 276, pos: 3 },\r\n  cell104: { index: 62, name: \"cell104\", id: 277, pos: 0 },\r\n  cell105: { index: 63, name: \"cell105\", id: 277, pos: 1 },\r\n  cell106: { index: 64, name: \"cell106\", id: 277, pos: 2 },\r\n  cell107: { index: 65, name: \"cell107\", id: 277, pos: 3 },\r\n  cell108: { index: 66, name: \"cell108\", id: 278, pos: 0 },\r\n  cell109: { index: 67, name: \"cell109\", id: 278, pos: 1 },\r\n  cell110: { index: 68, name: \"cell110\", id: 278, pos: 2 },\r\n  cell111: { index: 69, name: \"cell111\", id: 278, pos: 3 },\r\n  cell112: { index: 70, name: \"cell112\", id: 279, pos: 0 },\r\n  temp101: { index: 71, name: \"temp101\", id: 279, pos: 1 },\r\n  temp102: { index: 72, name: \"temp102\", id: 279, pos: 2 },\r\n  temp103: { index: 73, name: \"temp103\", id: 279, pos: 3 },\r\n  temp104: { index: 74, name: \"temp104\", id: 280, pos: 0 },\r\n  temp105: { index: 75, name: \"temp105\", id: 280, pos: 1 },\r\n\r\n  /*pack 2*/\r\n\r\n  cell200: { index: 76, name: \"cell200\", id: 271, pos: 0 },\r\n  cell201: { index: 77, name: \"cell201\", id: 271, pos: 1 },\r\n  cell202: { index: 78, name: \"cell202\", id: 271, pos: 2 },\r\n  cell203: { index: 79, name: \"cell203\", id: 271, pos: 3 },\r\n  cell204: { index: 80, name: \"cell204\", id: 272, pos: 0 },\r\n  cell205: { index: 81, name: \"cell205\", id: 272, pos: 1 },\r\n  cell206: { index: 82, name: \"cell206\", id: 272, pos: 2 },\r\n  cell207: { index: 83, name: \"cell207\", id: 272, pos: 3 },\r\n  cell208: { index: 84, name: \"cell208\", id: 273, pos: 0 },\r\n  cell209: { index: 85, name: \"cell209\", id: 273, pos: 1 },\r\n  cell210: { index: 86, name: \"cell210\", id: 273, pos: 2 },\r\n  cell211: { index: 87, name: \"cell211\", id: 273, pos: 3 },\r\n  cell212: { index: 88, name: \"cell212\", id: 274, pos: 0 },\r\n  temp201: { index: 89, name: \"temp201\", id: 274, pos: 1 },\r\n  temp202: { index: 90, name: \"temp202\", id: 274, pos: 2 },\r\n  temp203: { index: 91, name: \"temp203\", id: 274, pos: 3 },\r\n  temp204: { index: 92, name: \"temp204\", id: 275, pos: 0 },\r\n  temp205: { index: 93, name: \"temp205\", id: 275, pos: 1 },\r\n\r\n  /*pack 3*/\r\n\r\n  cell300: { index: 94, name: \"cell300\", id: 266, pos: 0 },\r\n  cell301: { index: 95, name: \"cell301\", id: 266, pos: 1 },\r\n  cell302: { index: 96, name: \"cell302\", id: 266, pos: 2 },\r\n  cell303: { index: 97, name: \"cell303\", id: 266, pos: 3 },\r\n  cell304: { index: 98, name: \"cell304\", id: 267, pos: 0 },\r\n  cell305: { index: 99, name: \"cell305\", id: 267, pos: 1 },\r\n  cell306: { index: 100, name: \"cell306\", id: 267, pos: 2 },\r\n  cell307: { index: 101, name: \"cell307\", id: 267, pos: 3 },\r\n  cell308: { index: 102, name: \"cell308\", id: 268, pos: 0 },\r\n  cell309: { index: 103, name: \"cell309\", id: 268, pos: 1 },\r\n  cell310: { index: 104, name: \"cell310\", id: 268, pos: 2 },\r\n  cell311: { index: 105, name: \"cell311\", id: 268, pos: 3 },\r\n  cell312: { index: 106, name: \"cell312\", id: 269, pos: 0 },\r\n  temp301: { index: 107, name: \"temp301\", id: 269, pos: 1 },\r\n  temp302: { index: 108, name: \"temp302\", id: 269, pos: 2 },\r\n  temp303: { index: 109, name: \"temp303\", id: 269, pos: 3 },\r\n  temp304: { index: 110, name: \"temp304\", id: 270, pos: 0 },\r\n  temp305: { index: 111, name: \"temp305\", id: 270, pos: 1 },\r\n\r\n  /*controle geral*/\r\n\r\n  //76\r\n  steeringWheel: { index: 27, name: \"steeringWheel\", id: 76, pos: 1 },\r\n  pedalAcelerador: { index: 23, name: \"pedalAcelerador\", id: 76, pos: 2 },\r\n  pedalFreio: { index: 24, name: \"pedalFreio\", id: 76, pos: 3 },\r\n\r\n  //77\r\n  selectedMode: { index: 167, name: \"selectedMode\", id: 77, pos: 0 },\r\n  ganhoTorque: { index: 173, name: \"ganhoTorque\", id: 77, pos: 1 },\r\n  hodometroParcial: { index: 169, name: \"hodometroParcial\", id: 77, pos: 2 },\r\n  hodometroTotal: { index: 170, name: \"hodometroTotal\", id: 77, pos: 3 },\r\n\r\n  //78\r\n  ecuFlag: { index: 180, name: \"ecuFlag\", id: 103, pos: 0 },\r\n  bmsFlag: { index: 181, name: \"bmsFlag\", id: 227, pos: 1 },\r\n  inversorFlag: { index: 182, name: \"inversorFlag\", id: 228, pos: 0 },\r\n  torqueReferenceRight: {\r\n    index: 21,\r\n    name: \"torqueReferenceRight\",\r\n    id: 78,\r\n    pos: 2,\r\n  },\r\n  torqueReferenceLeft: {\r\n    index: 22,\r\n    name: \"torqueReferenceLeft\",\r\n    id: 78,\r\n    pos: 3,\r\n  },\r\n\r\n  //79\r\n\r\n  speedFL: { index: 15, name: \"speedFL\", id: 79, pos: 0 },\r\n  speedFR: { index: 16, name: \"speedFR\", id: 79, pos: 1 },\r\n  speedBL: { index: 17, name: \"speedBL\", id: 79, pos: 2 },\r\n  speedBR: { index: 18, name: \"speedBR\", id: 79, pos: 3 },\r\n\r\n  //85\r\n  speedMotorLeft: { index: 166, name: \"speedMotorLeft\", id: 85, pos: 0 },\r\n  motorTorqueLeft: { index: 20, name: \"motorTorqueLeft\", id: 85, pos: 1 },\r\n\r\n  //86\r\n  energiaInversorLeft: {\r\n    index: 30,\r\n    name: \"energiaInversorLeft\",\r\n    id: 86,\r\n    pos: 0,\r\n  },\r\n  temperatureInversorL1: {\r\n    index: 35,\r\n    name: \"temperatureInversorL1\",\r\n    id: 86,\r\n    pos: 2,\r\n  },\r\n  temperatureInversorL2: {\r\n    index: 36,\r\n    name: \"temperatureInversorL2\",\r\n    id: 86,\r\n    pos: 3,\r\n  },\r\n\r\n  //95\r\n  speedMotorRight: { index: 165, name: \"speedMotorRight\", id: 95, pos: 0 },\r\n  motorTorqueRight: { index: 19, name: \"motorTorqueRight\", id: 95, pos: 1 },\r\n\r\n  //96\r\n\r\n  energiaInversorRight: {\r\n    index: 29,\r\n    name: \"energiaInversorRight\",\r\n    id: 96,\r\n    pos: 0,\r\n  },\r\n  temperatureInversorR1: {\r\n    index: 33,\r\n    name: \"temperatureInversorR1\",\r\n    id: 96,\r\n    pos: 2,\r\n  },\r\n  temperatureInversorR2: {\r\n    index: 34,\r\n    name: \"temperatureInversorR2\",\r\n    id: 96,\r\n    pos: 3,\r\n  },\r\n\r\n  //105\r\n  accelerometerX: { index: 154, name: \"accelerometerX\", id: 105, pos: 0 },\r\n  accelerometerY: { index: 155, name: \"accelerometerY\", id: 105, pos: 1 },\r\n  accelerometerZ: { index: 156, name: \"accelerometerZ\", id: 105, pos: 2 },\r\n\r\n  //106\r\n  gyroscopeX: { index: 157, name: \"gyroscopeX\", id: 106, pos: 0 },\r\n  gyroscopeY: { index: 158, name: \"gyroscopeY\", id: 106, pos: 1 },\r\n  gyroscopeZ: { index: 159, name: \"gyroscopeZ\", id: 106, pos: 2 },\r\n\r\n  stoppedTime: { index: 1, name: \"stoppedTime\", id: 0x100, pos: 0 },\r\n  operationMode: { index: 8, name: \"operationMode\", id: 1, pos: 0 },\r\n  errorFlag: { index: 9, name: \"errorFlag\", id: 0x001, pos: 2 },\r\n  mediaCurrent: { index: 10, name: \"mediaCurrent\", id: 53, pos: 0 }, //não achei\r\n  // mediaSpeed: {index: 25, name: \"mediaSpeed\", id: 0x304, pos: 0},\r\n  // mediaTorque: {index: 26, name: \"mediaTorque\", id: 0x304, pos: 1},\r\n\r\n  ECUTimer: { index: 28, name: \"ECUTimer\", id: 101, pos: 0 },\r\n\r\n  motorCurrentRight: { index: 31, name: \"motorCurrentRight\", id: 106, pos: 2 },\r\n  motorCurrentLeft: { index: 32, name: \"motorCurrentLeft\", id: 106, pos: 3 },\r\n\r\n  currentEvent: { index: 37, name: \"currentEvent\", id: 100, pos: 0 },\r\n  started: { index: 38, name: \"started\", id: 100, pos: 1 },\r\n  finished: { index: 39, name: \"finished\", id: 100, pos: 2 },\r\n  tireTempFL: { index: 150, name: \"tireTempFL\", id: 0x700, pos: 0 },\r\n  tireTempFR: { index: 151, name: \"tireTempFR\", id: 0x700, pos: 1 },\r\n  tireTempBL: { index: 152, name: \"tireTempBL\", id: 0x700, pos: 2 },\r\n  tireTempBR: { index: 153, name: \"tireTempBR\", id: 0x700, pos: 3 },\r\n  portConnected: { index: 900, name: \"portConnected\", id: 900, pos: 0 },\r\n  rssi: { index: 901, name: \"rssi\", id: 901, pos: 0 },\r\n  sensorPressaoDianteiro: {\r\n    index: 160,\r\n    name: \"sensorPressaoDianteiro\",\r\n    id: 170,\r\n    pos: 0,\r\n  },\r\n  potenciometroBalancin: {\r\n    index: 161,\r\n    name: \"potenciometroBalancin\",\r\n    id: 170,\r\n    pos: 1,\r\n  },\r\n  termoparFreioD: { index: 162, name: \"termoparFreioD\", id: 170, pos: 2 },\r\n  extensometro1: { index: 163, name: \"extensometro1\", id: 171, pos: 0 },\r\n  extensometro2: { index: 164, name: \"extensometro2\", id: 171, pos: 1 },\r\n  interfaceFlag: { index: 168, name: \"interfaceFlag\", id: 102, pos: 1 },\r\n  intensidadeFrenagem: {\r\n    index: 171,\r\n    name: \"intensidadeFrenagem\",\r\n    id: 108,\r\n    pos: 2,\r\n  },\r\n  selecaoBotao: { index: 172, name: \"selecaoBotao\", id: 108, pos: 3 },\r\n\r\n  extensometro22: { index: 174, name: \"extensometro22\", id: 173, pos: 0 },\r\n  extensometro13: { index: 175, name: \"extensometro13\", id: 178, pos: 0 },\r\n  extensometro23: { index: 176, name: \"extensometro23\", id: 178, pos: 2 },\r\n  simHodometer: { index: 177, name: \"simHodometer\", id: 901, pos: 0 },\r\n  simCharge: { index: 178, name: \"simCharge\", id: 901, pos: 1 },\r\n  pressaoTraseiro: { index: 179, name: \"pressaoTraseiro\", id: 200, pos: 0 },\r\n};\r\n\r\nconst nameFieldIdMap = Object.values(fields).reduce(\r\n  (last, field) => ((last[field.name] = field.index), last),\r\n  {}\r\n);\r\nconst fieldIdNameMap = Object.values(fields).reduce(\r\n  (last, field) => ((last[field.index] = field.name), last),\r\n  {}\r\n);\r\n\r\n//para plotar no gráfico\r\nlet availablePlotOptions = [\r\n  {\r\n    index: fields.current0.index,\r\n    name: \"Corrente 0\",\r\n    unidade: \"A\",\r\n    formatFn: (current) =>\r\n      current > Math.pow(2, 15)\r\n        ? (current - Math.pow(2, 16)) / 10\r\n        : current / 10,\r\n  },\r\n  {\r\n    index: fields.current1.index,\r\n    name: \"Corrente 1\",\r\n    unidade: \"A\",\r\n    formatFn: (current) =>\r\n      (current > Math.pow(2, 15)\r\n        ? (current - Math.pow(2, 16)) / 100\r\n        : current) / 100,\r\n  },\r\n  {\r\n    index: fields.current2.index,\r\n    name: \"Corrente 2\",\r\n    unidade: \"A\",\r\n    formatFn: (current) =>\r\n      (current > Math.pow(2, 15) ? (current - Math.pow(2, 16)) / 10 : current) /\r\n      10,\r\n  },\r\n  {\r\n    index: fields.current3.index,\r\n    name: \"Corrente 3\",\r\n    unidade: \"A\",\r\n    formatFn: (current) =>\r\n      (current > Math.pow(2, 15) ? (current - Math.pow(2, 16)) / 10 : current) /\r\n      10,\r\n  },\r\n  {\r\n    index: fields.glvVoltage.index,\r\n    name: \"Tensão do GLV\",\r\n    unidade: \"V\",\r\n    formatFn: (a) => a / 1000,\r\n  },\r\n  {\r\n    index: fields.chargePercent.index,\r\n    name: \"Porcentagem de Carga\",\r\n    unidade: \"%\",\r\n    formatFn: (a) => a / 100,\r\n  },\r\n  {\r\n    index: fields.mediaCurrent.index,\r\n    name: \"Corrente Média\",\r\n    unidade: \"A\",\r\n    formatFn: (current) =>\r\n      current > Math.pow(2, 15)\r\n        ? (current - Math.pow(2, 16)) / 100\r\n        : current / 100,\r\n  },\r\n  {\r\n    index: fields.totalVoltage.index,\r\n    name: \"Tensão Total\",\r\n    unidade: \"V\",\r\n    formatFn: (a) => a / 100,\r\n  },\r\n  {\r\n    index: fields.mediaTemperature.index,\r\n    name: \"Temperatura Média\",\r\n    unidade: \"ºC\",\r\n    formatFn: (a) => a / 1000,\r\n  },\r\n  {\r\n    index: fields.maxTemperature.index,\r\n    name: \"Temperatura Máxima\",\r\n    unidade: \"ºC\",\r\n    formatFn: (a) => a / 1000,\r\n  },\r\n  {\r\n    index: fields.minVoltage.index,\r\n    name: \"Tensão Mínima\",\r\n    unidade: \"V\",\r\n    formatFn: (a) => a / 10000,\r\n  },\r\n  {\r\n    index: fields.mediaTemperature.index,\r\n    name: \"Temperatura Média\",\r\n    unidade: \"ºC\",\r\n    formatFn: (a) => a / 1000,\r\n  },\r\n  {\r\n    index: fields.motorTorqueRight.index,\r\n    name: \"Torque Motor Direito\",\r\n    unidade: \"%\",\r\n    formatFn: (a) => a / 10,\r\n  },\r\n  {\r\n    index: fields.motorTorqueLeft.index,\r\n    name: \"Torque Motor Esquerdo\",\r\n    unidade: \"%\",\r\n    formatFn: (a) => a / 10,\r\n  },\r\n  {\r\n    index: fields.torqueReferenceRight.index,\r\n    name: \"Referência de Torque Direito\",\r\n    unidade: \"%\",\r\n    formatFn: (a) => a / 10,\r\n  },\r\n  {\r\n    index: fields.torqueReferenceLeft.index,\r\n    name: \"Referência de Torque Esquerdo\",\r\n    unidade: \"%\",\r\n    formatFn: (a) => a / 10,\r\n  },\r\n  {\r\n    index: fields.pedalAcelerador.index,\r\n    name: \"Pedal Acelerador\",\r\n    unidade: \"%\",\r\n    formatFn: (a) => a / 10,\r\n  },\r\n  {\r\n    index: fields.pedalFreio.index,\r\n    name: \"Pedal Freio\",\r\n    unidade: \"\",\r\n    formatFn: (a) => Math.round(a),\r\n  },\r\n  // {index: fields.mediaSpeed.index, name: \"Velocidade Média\", unidade: \"km/h\", formatFn: ((a) => a)},\r\n  // {index: fields.mediaTorque.index, name: \"Torque Médio\", unidade: \"%\", formatFn: ((a) => a/100)},\r\n  {\r\n    index: fields.steeringWheel.index,\r\n    name: \"Volante\",\r\n    unidade: \"º\",\r\n    formatFn: (a) => (a * 300) / 4095 - 164.1025,\r\n  },\r\n  {\r\n    index: fields.energiaInversorRight.index,\r\n    name: \"Energia Inversor Direito\",\r\n    unidade: \"kWh\",\r\n    formatFn: (a) => a / 1000,\r\n  },\r\n  {\r\n    index: fields.energiaInversorLeft.index,\r\n    name: \"Energia Inversor Esquerdo\",\r\n    unidade: \"kWh\",\r\n    formatFn: (a) => a / 1000,\r\n  },\r\n  {\r\n    index: fields.motorCurrentRight.index,\r\n    name: \"Corrente Motor Direito\",\r\n    unidade: \"A\",\r\n    formatFn: (a) => a / 100,\r\n  },\r\n  {\r\n    index: fields.motorCurrentLeft.index,\r\n    name: \"Corrente Motor Esquerdo\",\r\n    unidade: \"A\",\r\n    formatFn: (a) => a / 100,\r\n  },\r\n  {\r\n    index: fields.temperatureInversorR1.index,\r\n    name: \"Temperatura Inversor Direito 1\",\r\n    unidade: \"ºC\",\r\n    formatFn: (a) => a / 100,\r\n  },\r\n  {\r\n    index: fields.temperatureInversorR2.index,\r\n    name: \"Temperatura Inversor Direito 2\",\r\n    unidade: \"ºC\",\r\n    formatFn: (a) => a / 100,\r\n  },\r\n  {\r\n    index: fields.temperatureInversorL1.index,\r\n    name: \"Temperatura Inversor Esquerdo 1\",\r\n    unidade: \"ºC\",\r\n    formatFn: (a) => a / 100,\r\n  },\r\n  {\r\n    index: fields.temperatureInversorL2.index,\r\n    name: \"Temperatura Inversor Esquerdo 2\",\r\n    unidade: \"ºC\",\r\n    formatFn: (a) => a / 100,\r\n  },\r\n  {\r\n    index: fields.speedFL.index,\r\n    name: \"Velocidade do Pneu Dianteiro Esquerdo\",\r\n    unidade: \"RPM\",\r\n    formatFn: (a) => (a / 10 / 3.6 / ((52.07 / 10) * Math.PI)) * 60,\r\n  },\r\n  {\r\n    index: fields.speedFR.index,\r\n    name: \"Velocidade do Pneu Dianteiro Direito\",\r\n    unidade: \"RPM\",\r\n    formatFn: (a) => (a / 10 / 3.6 / ((52.07 / 10) * Math.PI)) * 60,\r\n  },\r\n  {\r\n    index: fields.speedBL.index,\r\n    name: \"Velocidade do Pneu Traseiro Esquerdo\",\r\n    unidade: \"RPM\",\r\n    formatFn: (a) => a / 9,\r\n  },\r\n  {\r\n    index: fields.speedBR.index,\r\n    name: \"Velocidade do Pneu Traseiro Direito\",\r\n    unidade: \"RPM\",\r\n    formatFn: (a) => a / 9,\r\n  },\r\n  {\r\n    index: fields.speedMotorLeft.index,\r\n    name: \"Velocidade do Motor Esquerdo\",\r\n    unidade: \"RPM\",\r\n    formatFn: (a) => a / 9,\r\n  },\r\n  {\r\n    index: fields.speedMotorRight.index,\r\n    name: \"Velocidade do Motor Direito\",\r\n    unidade: \"RPM\",\r\n    formatFn: (a) => a / 9,\r\n  },\r\n  {\r\n    index: fields.tireTempFL.index,\r\n    name: \"Temperatura do Pneu Dianteiro Esquerdo\",\r\n    unidade: \"ºC\",\r\n    formatFn: (a) => a / 100,\r\n  },\r\n  {\r\n    index: fields.tireTempFR.index,\r\n    name: \"Temperatura do Pneu Dianteiro Direito\",\r\n    unidade: \"ºC\",\r\n    formatFn: (a) => a / 100,\r\n  },\r\n  {\r\n    index: fields.tireTempBL.index,\r\n    name: \"Temperatura do Pneu Traseiro Esquerdo\",\r\n    unidade: \"ºC\",\r\n    formatFn: (a) => a,\r\n  },\r\n  {\r\n    index: fields.tireTempBR.index,\r\n    name: \"Temperatura do Pneu Traseiro Direito\",\r\n    unidade: \"ºC\",\r\n    formatFn: (a) => a,\r\n  },\r\n  {\r\n    index: fields.accelerometerX.index,\r\n    name: \"Acelerômetro X\",\r\n    unidade: \"g\",\r\n    formatFn: (a) => a / 100,\r\n  },\r\n  {\r\n    index: fields.accelerometerY.index,\r\n    name: \"Acelerômetro Y\",\r\n    unidade: \"g\",\r\n    formatFn: (a) => a / 100,\r\n  },\r\n  {\r\n    index: fields.accelerometerZ.index,\r\n    name: \"Acelerômetro Z\",\r\n    unidade: \"g\",\r\n    formatFn: (a) => a / 100,\r\n  },\r\n  {\r\n    index: fields.rssi.index,\r\n    name: \"RSSI\",\r\n    unidade: \"dBm\",\r\n    formatFn: (a) => -a,\r\n  },\r\n  {\r\n    index: fields.sensorPressaoDianteiro.index,\r\n    name: \"Sensor de Pressão\",\r\n    unidade: \"bar\",\r\n    formatFn: (a) => a,\r\n  },\r\n  {\r\n    index: fields.temp201.index,\r\n    name: \"Temperatura 201\",\r\n    unidade: \"ºC\",\r\n    formatFn: (a) => a,\r\n  },\r\n  {\r\n    index: fields.temp203.index,\r\n    name: \"Temperatura 203\",\r\n    unidade: \"ºC\",\r\n    formatFn: (a) => a,\r\n  },\r\n  {\r\n    index: fields.temp301.index,\r\n    name: \"Temperatura 301\",\r\n    unidade: \"ºC\",\r\n    formatFn: (a) => a,\r\n  },\r\n  {\r\n    index: fields.temp303.index,\r\n    name: \"Temperatura 303\",\r\n    unidade: \"ºC\",\r\n    formatFn: (a) => a,\r\n  },\r\n  {\r\n    index: fields.simCharge.index,\r\n    name: \"Descarga recente\",\r\n    unidade: \"C\",\r\n    formatFn: (a) => a,\r\n  },\r\n  {\r\n    index: fields.pressaoTraseiro.index,\r\n    name: \"Pressão na linha de freio traseira\",\r\n    unidade: \"Pa\",\r\n    formatFn: (a) => a,\r\n  },\r\n];\r\n\r\nconst availablePlotIndexes = availablePlotOptions.map((option) => option.index);\r\n\r\nlet datalogOrder = [\r\n  fields.ECUTimer.name,\r\n  fields.hodometroTotal.name,\r\n  fields.glvVoltage.name,\r\n  fields.speedFL.name,\r\n  fields.speedFR.name,\r\n  fields.speedMotorLeft.name,\r\n  fields.speedMotorRight.name,\r\n  fields.pedalAcelerador.name,\r\n  fields.pedalFreio.name,\r\n  fields.steeringWheel.name,\r\n  fields.motorCurrentRight.name,\r\n  fields.motorCurrentLeft.name,\r\n  fields.accelerometerX.name,\r\n  fields.accelerometerY.name,\r\n  fields.accelerometerZ.name,\r\n  fields.sensorPressaoDianteiro.name,\r\n  fields.potenciometroBalancin.name,\r\n  fields.termoparFreioD.name,\r\n  fields.extensometro1.name,\r\n  fields.extensometro2.name,\r\n  fields.speedMotorRight.name,\r\n  fields.speedMotorLeft.name,\r\n  fields.current0.name,\r\n  fields.current1.name,\r\n  fields.current2.name,\r\n  fields.current3.name,\r\n  fields.mediaTemperature.name,\r\n  fields.maxTemperature.name,\r\n  fields.motorCurrentRight.name,\r\n  fields.motorCurrentLeft.name,\r\n  fields.temp001.name,\r\n  fields.temp002.name,\r\n  fields.temp003.name,\r\n  fields.temp004.name,\r\n  fields.temp101.name,\r\n  fields.temp102.name,\r\n  fields.temp103.name,\r\n  fields.temp104.name,\r\n  fields.temp201.name,\r\n  fields.temp202.name,\r\n  fields.temp203.name,\r\n  fields.temp204.name,\r\n  fields.temp301.name,\r\n  fields.temp302.name,\r\n  fields.temp303.name,\r\n  fields.temp304.name,\r\n  fields.current3.name,\r\n  fields.totalVoltage.name,\r\n  fields.minVoltage.name,\r\n  fields.pressaoTraseiro.name,\r\n];\r\n\r\n// let datalogOrder = [\r\n//     fields.current0.name,\r\n//     fields.current1.name,\r\n//     fields.current2.name,\r\n//     fields.current3.name,\r\n//     fields.motorCurrentRight.name,\r\n//     fields.motorCurrentLeft.name\r\n// ]\r\n\r\nlet fieldsLimits = [\r\n  {\r\n    name: fields.chargePercent.name,\r\n    formattedName: \"Porcentagem de Carga\",\r\n    min: 0,\r\n    maxReference: 100,\r\n  },\r\n  {\r\n    name: fields.glvVoltage.name,\r\n    formattedName: \"Tensão do GLV\",\r\n    min: 13000,\r\n    maxReference: 16000,\r\n  },\r\n  {\r\n    name: fields.maxTemperature.name,\r\n    formattedName: \"Temperatura Máxima dos Packs\",\r\n    max: 65500,\r\n  },\r\n  {\r\n    name: fields.minVoltage.name,\r\n    formattedName: \"Tensão Mínima das Células\",\r\n    min: 28000,\r\n    maxReference: 35500,\r\n  },\r\n  {\r\n    name: fields.temperatureInversorL1.name,\r\n    formattedName: \"Temperatura do Inversor Esquerdo 1\",\r\n    max: 50000,\r\n  },\r\n  {\r\n    name: fields.temperatureInversorL2.name,\r\n    formattedName: \"Temperatura do Inversor Esquerdo 2\",\r\n    max: 50000,\r\n  },\r\n  {\r\n    name: fields.temperatureInversorR1.name,\r\n    formattedName: \"Temperatura do Inversor Direito 1\",\r\n    max: 50000,\r\n  },\r\n  {\r\n    name: fields.temperatureInversorR2.name,\r\n    formattedName: \"Temperatura do Inversor Direito 2\",\r\n    max: 50000,\r\n  },\r\n  {\r\n    name: fields.tireTempBL.name,\r\n    formattedName: \"Temperatura Pneu Traseiro Esquerdo\",\r\n    max: 20000,\r\n  },\r\n  {\r\n    name: fields.tireTempBR.name,\r\n    formattedName: \"Temperatura Pneu Traseiro Direito\",\r\n    max: 20000,\r\n  },\r\n  {\r\n    name: fields.tireTempFL.name,\r\n    formattedName: \"Temperatura Pneu Dianteiro Esquerdo\",\r\n    max: 20000,\r\n  },\r\n  {\r\n    name: fields.tireTempFR.name,\r\n    formattedName: \"Temperatura Pneu Dianteiro Direito\",\r\n    max: 20000,\r\n  },\r\n];\r\n\r\nfieldsLimits = fieldsLimits.reduce((last, field) => {\r\n  last[field.name] = {};\r\n  last[field.name].name = field.formattedName;\r\n  last[field.name][typeof field.max === \"undefined\" ? \"min\" : \"max\"] =\r\n    typeof field.max === \"undefined\" ? field.min : field.max;\r\n  if (typeof field.maxReference !== \"undefined\")\r\n    last[field.name].maxReference = field.maxReference;\r\n  return last;\r\n}, {});\r\n\r\nmodule.exports = {\r\n  availablePlotOptions,\r\n  fields,\r\n  mappings: {\r\n    nameFieldIdMap: nameFieldIdMap,\r\n    fieldIdNameMap: fieldIdNameMap,\r\n    availablePlotIndexes: availablePlotIndexes,\r\n  },\r\n  persistanceTimeout,\r\n  cleanUpTimeout,\r\n  pointsPerSecond,\r\n  fieldsLimit: {\r\n    fieldsLimit: fieldsLimits,\r\n    percentageLimitTolerance: percentageLimitTolerance,\r\n    notificationExpirationTimeout: notificationExpirationTimeout,\r\n    shouldNotify: shouldNotify,\r\n  },\r\n  port: {\r\n    portName: portName,\r\n    ignorePortsFile: ignorePortsFile,\r\n    operationType: operationType,\r\n    OperationsType: OperationsType,\r\n    xbeeSourceAddress: xbeeSourceAddress,\r\n  },\r\n  datalog: {\r\n    datalogOrder: datalogOrder,\r\n    filepath: datalogFilePath,\r\n    shouldWrite: shouldWrite,\r\n    timeout: datalogTimeout,\r\n    includeTimestamp: includeTimestamp,\r\n  },\r\n};\r\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AASA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAmosourceRoot":""}