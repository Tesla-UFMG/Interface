{"version":3,"file":"static/webpack/static\\development\\pages\\packs.js.b952cd22df253188c749.hot-update.js","sources":["webpack:///./pages/packs.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport DataFetcher from '../components/data-fetcher.js'\r\n\r\nimport CountUpWrapper from '../components/countup-wrapper.js'\r\n\r\nimport {DelayContext} from '../components/contexts.js'\r\nimport ECU from \"../components/ecu.js\";\r\n\r\n\r\nconst DelayProvider = DelayContext.Provider;\r\n\r\nclass Packs extends DataFetcher {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.page = \"packs\"\r\n        this.delay = 1000;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <DelayProvider value={this.delay}>\r\n                <ECU\r\n                value={parseInt(((this.state.data || {}).control || {}).ecuFlag) || 2}> \r\n                </ECU>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3 col-6\">\r\n                            <PacksInformation title={\"TENSÃO TOTAL\"} value={((this.state.data || {}).bms || {}).totalVoltage/100 || 0} unit={\"V\"}></PacksInformation>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-6\">\r\n                            <PacksInformation title={\"CORRENTE MÉDIA\"} value={((this.state.data || {}).bms || {}).mediaCurrent/10 || 0} unit={\"A\"}></PacksInformation>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-6\">\r\n                            <PacksInformation title={\"TEMPERATURA MÁXIMA\"} value={((this.state.data || {}).bms || {}).maxTemperature/10 || 0} unit={\"ºC\"}></PacksInformation>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-6\">\r\n                            <PacksInformation title={\"TENSÃO MÍNIMA\"} value={((this.state.data || {}).bms || {}).minVoltage/10000 || 0} unit={\"V\"}></PacksInformation>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"row\">\r\n                                {(((this.state.data || {}).bms || {}).packs || []).map((pack, index) => <div className=\"col-12 col-lg-6 mt-3\"><Pack key={index} packIndex={index+1} {...pack}/></div>)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </DelayProvider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction PacksInformation(props) {\r\n    return (\r\n        <div className=\"packs-information-container\">\r\n            <div className=\"packs-information-title\">\r\n                {props.title}\r\n            </div>\r\n            <div className=\"packs-information-value-wrapper\">\r\n                <CountUpWrapper end={props.value}>\r\n                    {\r\n                        ({countUpRef}) => (\r\n                            <div ref={countUpRef} className=\"packs-information-value\"/>\r\n                        )\r\n                    }\r\n                </CountUpWrapper>\r\n                <div className=\"packs-information-unit\">\r\n                    {props.unit}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Pack(props) {\r\n    return (\r\n        <div className=\"pack-container\">\r\n            <div className=\"pack-title-wrapper\">\r\n                <div className=\"pack-title\">\r\n                    PACK {props.packIndex-1}\r\n                </div>\r\n            </div>\r\n            <div className=\"pack-content\">\r\n                <div className=\"pack-voltages\">\r\n                    <div className=\"pack-section-title\">\r\n                        TENSÕES\r\n                    </div>\r\n                    <div className=\"pack-section-values\">\r\n                        {props.cells.map((cell, index) => \r\n                            <CountUpWrapper end={cell/10000.0 || 0}\r\n                                            duration={5}\r\n                                            useEasing={false}>\r\n                                {\r\n                                    ({countUpRef}) => (\r\n                                        <div key={\"c-\"+index} ref={countUpRef} className={\"pack-value \"+(cell >= 35500 ? \"over-voltage\" : cell <= 28000 ? \"under-voltage\" : \"\")}></div>\r\n                                    )\r\n                                }\r\n                            </CountUpWrapper>\r\n                        )}\r\n                    </div> \r\n                </div>\r\n                <div className=\"pack-temperatures\">\r\n                    <div className=\"pack-section-title\">\r\n                        TEMPERATURAS\r\n                    </div>\r\n                    <div className=\"pack-section-values\">\r\n                        {props.temperatures.map((temperature, index) =>\r\n                            <CountUpWrapper end={temperature/10.0 || 0}\r\n                                            duration={5}\r\n                                            useEasing={false}>\r\n                                {\r\n                                    ({countUpRef}) => (\r\n                                        <div key={\"t-\"+index} ref={countUpRef} className={\"pack-value \"+(temperature >= 55000 ? \"over-temperature\" : \"\")}></div>\r\n                                    )\r\n                                }\r\n                            </CountUpWrapper>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Packs;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AAJA;AAKA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAzCA;AACA;AA2CA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AADA;AAKA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AALA;AAaA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AALA;AAgBA;AACA;AACA;;;;A","sourceRoot":""}