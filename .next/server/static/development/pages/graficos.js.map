{"version":3,"file":"static\\development\\pages\\graficos.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/constants.js","webpack:///./components/contexts.js","webpack:///./components/data-fetcher.js","webpack:///./components/notifications-handler.js","webpack:///./config.properties","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/create.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/values.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-float.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-int.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/promise.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/reflect/construct.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/reflect/get.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/get.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/superPropBase.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js","webpack:///./node_modules/@babel/runtime-corejs2/regenerator/index.js","webpack:///./pages/graficos.js","webpack:///external \"core-js/library/fn/json/stringify\"","webpack:///external \"core-js/library/fn/object/assign\"","webpack:///external \"core-js/library/fn/object/create\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-prototype-of\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"core-js/library/fn/object/set-prototype-of\"","webpack:///external \"core-js/library/fn/object/values\"","webpack:///external \"core-js/library/fn/parse-float\"","webpack:///external \"core-js/library/fn/parse-int\"","webpack:///external \"core-js/library/fn/promise\"","webpack:///external \"core-js/library/fn/reflect/construct\"","webpack:///external \"core-js/library/fn/reflect/get\"","webpack:///external \"core-js/library/fn/symbol\"","webpack:///external \"core-js/library/fn/symbol/iterator\"","webpack:///external \"fs\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"path\"","webpack:///external \"react\"","webpack:///external \"react-toastify\"","webpack:///external \"recharts\"","webpack:///external \"regenerator-runtime\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","//PARA REGISTRAR UM NOVO DADO:\r\n//primeiramente, em TypeFields, adicione mais uma linha, incrementando o índice em 1 e o nome do dado em camelCase\r\n//depois, adicione mais uma linha em availableField, com o index sendo o mesmo índice do TypeFields.\r\n//se for um dado que tenha possibilidade de ser plotado em tempo real, adicione-o em availablePlotOPtion.\r\n\r\nconst isOnClient = !!(\r\n    (typeof require.extensions === 'undefined' || typeof window !== 'undefined' &&\r\n    window.document && window.document.createElement\r\n    && Object.keys(process.env).length === 0 && process.env.constructor === Object)\r\n  );\r\n\r\nconst fs = isOnClient ? null : require('fs');\r\n\r\nif (typeof require.extensions !== 'undefined')\r\n    require.extensions['.properties'] = function (module, filename) {\r\n        module.exports = fs.readFileSync(filename, 'utf8');\r\n    }\r\n\r\nconst configFileName = 'config.properties';\r\nlet pr = require('../config.properties');\r\nlet file = typeof pr == 'object' ? pr.default : pr;\r\n// let file = properties;\r\nif (!isOnClient) {\r\n    if (file === '') {\r\n        const configTemplate = `# TIPO DE OPERAÇÃO\r\n# Valores possíveis:\r\n# BYTES  - Recebimento por Xbee em formato de bytes\r\n# STRING - Recebimento por Xbee ou NRF em formato de string\r\n# API_BYTES  - Recebimento por Xbee em API mode por bytes\r\n# API_STRING - Recebimento por Xbee em API mode por string\r\n# [default = STRING]\r\noperationType = STRING\r\n\r\n# [string] [default = 0013A20041932DC6] Endereço 64bits do xbee transmissor.\r\nxbeeSourceAddress = 0013A20041932DC6\r\n\r\n# PORTA SERIAL\r\n\r\n# [string] [default = ] Nome da porta serial que o dispositivo receptor se encontra. Deixe vazio para identificação automática.\r\nportName = \r\n# [string] [default = ignore-ports.txt] Nome do arquivo de texto, na pasta raiz, contendo nome de portas para serem ignoradas na identificação automática de porta, separados por linha.\r\nignorePortsFile = ignore-ports.txt\r\n\r\n# NOTIFICAÇÕES\r\n\r\n# [bool] [default = true] Ativar ou desativar notificações\r\nshouldNotify = true\r\n# [number] [default = 10] Limite percentual para acionar a notificação que alerta da proximidade do valor mínimo/máximo\r\npercentageLimitTolerance = 10\r\n# [number] [default = 30000] Tempo de timeout em milissegundos para a notificação ser reacionada caso a condição não mude\r\nnotificationExpirationTimeout = 30000\r\n\r\n# DATALOG\r\n\r\n# [string] [default = ./datalog/] Caminho para a escrita do datalog. O DIRETÓRIO NÃO É CRIADO, ENTAÃO DEVE, OBRIGATORIAMENTE, EXISTIR.\r\ndatalogFilePath = ./datalog/\r\n# [bool] [default = true] Ativar ou desativar o datalog\r\nshouldWrite = true\r\n# [number]  [default = 30000] Tempo, em milissegundos, de quanto esperar sem receber dados até criar um novo arquivo de texto\r\ndatalogTimeout = 30000\r\n# [bool] [default = false] Incluir timestamp (quantidade de milissegundos desde 1/1/1970 00:00) como primeiro item de cada linha\r\nincludeTimestamp = false\r\n\r\n# PLOTAGEM EM TEMPO REAL\r\n\r\n# BANCO DE DADOS LOCAL\r\n# [number]  [default = 60000] Tempo, em milissegundos, de persistência dos dados no banco de dados antes de serem eliminados. Altere esse valor para definir de quanto tempo atrás os dados devem ser exibidos.\r\npersistanceTimeout = 60000\r\n# [number] [default = 1000] Período, em milissegundos, para ser acionada a varredura do banco de dados local para eliminar dados antigos\r\ncleanUpTimeout = 1000\r\n\r\n#PLOTAGEM\r\n# [number] [default = 1] Quantidade desejada de pontos por segundo para serem exibidos no gráfico. VALORES ALTOS PODEM COMPROMETER A INTEGRIDADE DO SERVIDOR E DA REDE.\r\npointsPerSecond = 1\r\n        `;\r\n        const path = require('path');\r\n        const correctedPath = path.join(__dirname, '..', configFileName);\r\n\r\n        fs.writeFileSync(correctedPath, configTemplate);\r\n        file = configTemplate;\r\n    }\r\n}\r\n\r\nconst config = file.split('\\n')\r\n    .filter(value => !value.startsWith('#') && !(value.trim() === ''))\r\n    .reduce( (previous, current) => {\r\n        const opt = current.split('=').map(value => value.trim());\r\n        let definition = opt[1];\r\n        let val;\r\n        if (definition == '') {\r\n            val = undefined;\r\n        } else if (definition == 'true' || definition == 'false') {\r\n            val = definition === 'true';\r\n        } else if (isNaN(definition)) {\r\n            val = definition;\r\n        } else {\r\n            val = definition*1;\r\n        }\r\n        previous[opt[0]] = val;\r\n        return previous;\r\n    },{})\r\n\r\nconst percentageLimitTolerance = config.percentageLimitTolerance;\r\nconst notificationExpirationTimeout = config.notificationExpirationTimeout;\r\nconst shouldNotify = config.shouldNotify;\r\nconst datalogFilePath = config.datalogFilePath;\r\nconst shouldWrite = config.shouldWrite;\r\nconst datalogTimeout = config.datalogTimeout;\r\nconst includeTimestamp = config.includeTimestamp;\r\nconst persistanceTimeout = config.persistanceTimeout;\r\nconst cleanUpTimeout = config.cleanUpTimeout;\r\nconst pointsPerSecond = config.pointsPerSecond;\r\nconst portName = config.portName;\r\nconst ignorePortsFile = config.ignorePortsFile;\r\nconst OperationsType = {\r\n    BYTES: 0,\r\n    STRING: 1,\r\n    API_BYTES: 2,\r\n    API_STRING: 3\r\n}\r\n\r\nconst operationType = OperationsType[config.operationType];\r\n\r\nlet i;\r\nlet xbeeSourceAddressArray = [];\r\nfor (i = 0; i < config.xbeeSourceAddress.length; i+=2) {\r\n    const oct = config.xbeeSourceAddress.substring(i, i+2);\r\n    const hex = parseInt(oct, 16);\r\n    xbeeSourceAddressArray.push(hex);\r\n}\r\nconst xbeeSourceAddress = xbeeSourceAddressArray;\r\n\r\nlet fields = {\r\n    /*baterias geral*/\r\n\r\n    airStatus: {index: 0, name: \"airStatus\", id: 51, pos: 3},\r\n    current0: {index: 1, name: \"current0\", id: 50, pos:0},\r\n    current1: {index: 2, name: \"current1\", id: 50, pos:1},\r\n    current2: {index: 3, name: \"current2\", id: 50, pos:2},\r\n    current3: {index: 4, name: \"current3\", id: 50, pos:3},\r\n    glvVoltage: {index: 5, name: \"glvVoltage\", id: 51, pos: 0},\r\n    chargePercent: {index: 6, name: \"chargePercent\", id: 51, pos: 1},\r\n    totalVoltage: {index: 7, name: \"totalVoltage\", id: 52, pos: 1},\r\n    maxTemperature: {index: 8, name: \"maxTemperature\", id: 52, pos: 3},\r\n    minVoltage: {index: 9, name: \"minVoltage\", id: 53, pos: 0},\r\n\r\n    /*pack 0*/\r\n\r\n    cell000: {index: 10, name: \"cell000\", id: 281, pos: 0},\r\n    cell001: {index: 11, name: \"cell001\", id: 281, pos: 1},\r\n    cell002: {index: 12, name: \"cell002\", id: 281, pos: 2},\r\n    cell003: {index: 13, name: \"cell003\", id: 281, pos: 3},\r\n    cell004: {index: 14, name: \"cell004\", id: 282, pos: 0},\r\n    cell005: {index: 15, name: \"cell005\", id: 282, pos: 1},\r\n    cell006: {index: 16, name: \"cell006\", id: 282, pos: 2},\r\n    cell007: {index: 17, name: \"cell007\", id: 282, pos: 3},\r\n    cell008: {index: 18, name: \"cell008\", id: 283, pos: 0},\r\n    cell009: {index: 19, name: \"cell009\", id: 283, pos: 1},\r\n    cell010: {index: 20, name: \"cell010\", id: 283, pos: 2},\r\n    cell011: {index: 21, name: \"cell011\", id: 283, pos: 3},\r\n    cell012: {index: 22, name: \"cell012\", id: 284, pos: 0},\r\n    temp001: {index: 23, name: \"temp001\", id: 284, pos: 1},\r\n    temp002: {index: 24, name: \"temp002\", id: 284, pos: 2},\r\n    temp003: {index: 25, name: \"temp003\", id: 284, pos: 3},\r\n    temp004: {index: 26, name: \"temp004\", id: 285, pos: 0},\r\n    temp005: {index: 27, name: \"temp005\", id: 285, pos: 1},\r\n\r\n    /*pack 1*/ \r\n\r\n    cell100: {index: 28, name: \"cell100\", id: 276, pos: 0},\r\n    cell101: {index: 29, name: \"cell101\", id: 276, pos: 1},\r\n    cell102: {index: 30, name: \"cell102\", id: 276, pos: 2},\r\n    cell103: {index: 31, name: \"cell103\", id: 276, pos: 3},\r\n    cell104: {index: 32, name: \"cell104\", id: 277, pos: 0},\r\n    cell105: {index: 33, name: \"cell105\", id: 277, pos: 1},\r\n    cell106: {index: 34, name: \"cell106\", id: 277, pos: 2},\r\n    cell107: {index: 35, name: \"cell107\", id: 277, pos: 3},\r\n    cell108: {index: 36, name: \"cell108\", id: 278, pos: 0},\r\n    cell109: {index: 37, name: \"cell109\", id: 278, pos: 1},\r\n    cell110: {index: 38, name: \"cell110\", id: 278, pos: 2},\r\n    cell111: {index: 39, name: \"cell111\", id: 278, pos: 3},\r\n    cell112: {index: 40, name: \"cell112\", id: 279, pos: 0},\r\n    temp101: {index: 41, name: \"temp101\", id: 279, pos: 1},\r\n    temp102: {index: 42, name: \"temp102\", id: 279, pos: 2},\r\n    temp103: {index: 43, name: \"temp103\", id: 279, pos: 3},\r\n    temp104: {index: 44, name: \"temp104\", id: 280, pos: 0},\r\n    temp105: {index: 45, name: \"temp105\", id: 280, pos: 1},\r\n    \r\n    /*pack 2*/ \r\n    \r\n    cell200: {index: 46, name: \"cell200\", id: 271, pos: 0},\r\n    cell201: {index: 47, name: \"cell201\", id: 271, pos: 1},\r\n    cell202: {index: 48, name: \"cell202\", id: 271, pos: 2},\r\n    cell203: {index: 49, name: \"cell203\", id: 271, pos: 3},\r\n    cell204: {index: 50, name: \"cell204\", id: 272, pos: 0},\r\n    cell205: {index: 51, name: \"cell205\", id: 272, pos: 1},\r\n    cell206: {index: 52, name: \"cell206\", id: 272, pos: 2},\r\n    cell207: {index: 53, name: \"cell207\", id: 272, pos: 3},\r\n    cell208: {index: 54, name: \"cell208\", id: 273, pos: 0},\r\n    cell209: {index: 55, name: \"cell209\", id: 273, pos: 1},\r\n    cell210: {index: 56, name: \"cell210\", id: 273, pos: 2},\r\n    cell211: {index: 57, name: \"cell211\", id: 273, pos: 3},\r\n    cell212: {index: 58, name: \"cell212\", id: 274, pos: 0},\r\n    temp201: {index: 59, name: \"temp201\", id: 274, pos: 1},\r\n    temp202: {index: 60, name: \"temp202\", id: 274, pos: 2},\r\n    temp203: {index: 61, name: \"temp203\", id: 274, pos: 3},\r\n    temp204: {index: 62, name: \"temp204\", id: 275, pos: 0},\r\n    temp205: {index: 63, name: \"temp205\", id: 275, pos: 1},\r\n    \r\n    /*pack 3*/ \r\n    \r\n    cell300: {index: 64, name: \"cell300\", id: 266, pos: 0},\r\n    cell301: {index: 65, name: \"cell301\", id: 266, pos: 1},\r\n    cell302: {index: 66, name: \"cell302\", id: 266, pos: 2},\r\n    cell303: {index: 67, name: \"cell303\", id: 266, pos: 3},\r\n    cell304: {index: 68, name: \"cell304\", id: 267, pos: 0},\r\n    cell305: {index: 69, name: \"cell305\", id: 267, pos: 1},\r\n    cell306: {index: 70, name: \"cell306\", id: 267, pos: 2},\r\n    cell307: {index: 71, name: \"cell307\", id: 267, pos: 3},\r\n    cell308: {index: 72, name: \"cell308\", id: 268, pos: 0},\r\n    cell309: {index: 73, name: \"cell309\", id: 268, pos: 1},\r\n    cell310: {index: 74, name: \"cell310\", id: 268, pos: 2},\r\n    cell311: {index: 75, name: \"cell311\", id: 268, pos: 3},\r\n    cell312: {index: 76, name: \"cell312\", id: 269, pos: 0},\r\n    temp301: {index: 77, name: \"temp301\", id: 269, pos: 1},\r\n    temp302: {index: 78, name: \"temp302\", id: 269, pos: 2},\r\n    temp303: {index: 79, name: \"temp303\", id: 269, pos: 3},\r\n    temp304: {index: 80, name: \"temp304\", id: 270, pos: 0},\r\n    temp305: {index: 81, name: \"temp305\", id: 270, pos: 1},\r\n    \r\n    /*pack 4*/ \r\n\r\n    cell400: {index: 82, name: \"cell400\", id: 256, pos: 0},\r\n    cell401: {index: 83, name: \"cell401\", id: 256, pos: 1},\r\n    cell402: {index: 84, name: \"cell402\", id: 256, pos: 2},\r\n    cell403: {index: 85, name: \"cell403\", id: 256, pos: 3},\r\n    cell404: {index: 86, name: \"cell404\", id: 257, pos: 0},\r\n    cell405: {index: 87, name: \"cell405\", id: 257, pos: 1},\r\n    cell406: {index: 88, name: \"cell406\", id: 257, pos: 2},\r\n    cell407: {index: 89, name: \"cell407\", id: 257, pos: 3},\r\n    cell408: {index: 90, name: \"cell408\", id: 258, pos: 0},\r\n    cell409: {index: 91, name: \"cell409\", id: 258, pos: 1},\r\n    cell410: {index: 92, name: \"cell410\", id: 258, pos: 2},\r\n    cell411: {index: 93, name: \"cell411\", id: 258, pos: 3},\r\n    cell412: {index: 94, name: \"cell412\", id: 259, pos: 0},\r\n    temp401: {index: 95, name: \"temp401\", id: 259, pos: 1},\r\n    temp402: {index: 96, name: \"temp402\", id: 259, pos: 2},\r\n    temp403: {index: 97, name: \"temp403\", id: 259, pos: 3},\r\n    temp404: {index: 98, name: \"temp404\", id: 260, pos: 0},\r\n    temp405: {index: 99, name: \"temp405\", id: 260, pos: 1},\r\n    \r\n    /*pack 5*/ \r\n    \r\n    cell500: {index: 100, name: \"cell500\", id: 261, pos: 0},\r\n    cell501: {index: 101, name: \"cell501\", id: 261, pos: 1},\r\n    cell502: {index: 102, name: \"cell502\", id: 261, pos: 2},\r\n    cell503: {index: 103, name: \"cell503\", id: 261, pos: 3},\r\n    cell504: {index: 104, name: \"cell504\", id: 262, pos: 0},\r\n    cell505: {index: 105, name: \"cell505\", id: 262, pos: 1},\r\n    cell506: {index: 106, name: \"cell506\", id: 262, pos: 2},\r\n    cell507: {index: 107, name: \"cell507\", id: 262, pos: 3},\r\n    cell508: {index: 108, name: \"cell508\", id: 263, pos: 0},\r\n    cell509: {index: 109, name: \"cell509\", id: 263, pos: 1},\r\n    cell510: {index: 110, name: \"cell510\", id: 263, pos: 2},\r\n    cell511: {index: 111, name: \"cell511\", id: 263, pos: 3},\r\n    cell512: {index: 112, name: \"cell512\", id: 264, pos: 0},\r\n    temp501: {index: 113, name: \"temp501\", id: 264, pos: 1},\r\n    temp502: {index: 114, name: \"temp502\", id: 264, pos: 2},\r\n    temp503: {index: 115, name: \"temp503\", id: 264, pos: 3},\r\n    temp504: {index: 116, name: \"temp504\", id: 265, pos: 0},\r\n    temp505: {index: 117, name: \"temp505\", id: 265, pos: 1},\r\n\r\n    /*controle geral*/\r\n    \r\n    // todos os valores da tabela hash de controle estão aqui caso queira que se adicione coisas na janela\r\n    // temos que fazer um filtro desses dados no momento em que formos refatora-lá\r\n\r\n    steeringWheel: {index: 118, name: \"steeringWheel\", id: 101, pos: 1}, \r\n    pedalAcelerador: {index: 119, name: \"pedalAcelerador\", id: 101, pos: 2},\r\n    pedalFreio: {index: 120, name: \"pedalFreio\", id: 101, pos: 3},\r\n    selectedMode: {index: 121, name: \"selectedMode\", id: 102, pos: 0},\r\n    frenagemRegenerativa: {index: 122, name: \"frenagemRegenerativa\", id: 102, pos: 1},\r\n    hodometroParcial: {index: 123, name: \"hodometroParcial\", id: 102, pos: 2},\r\n    hodometroTotal: {index: 124, name: \"hodometroTotal\", id: 102, pos: 3},\r\n    motorTorqueRight: {index: 125, name: \"motorTorqueRight\", id: 103, pos: 0},\r\n    motorTorqueLeft: {index: 126, name: \"motorTorqueLeft\", id: 103, pos: 1},\r\n    torqueReferenceRight: {index: 127, name: \"torqueReferenceRight\", id: 103, pos: 2},\r\n    torqueReferenceLeft: {index: 128, name: \"torqueReferenceLeft\", id: 103, pos: 3},\r\n    speedMotorRight: {index: 129, name: \"speedMotorRight\", id: 104, pos: 0},\r\n    speedMotorLeft: {index: 130, name: \"speedMotorLeft\", id: 104, pos: 1},\r\n    ECU_control_Event_1: {index: 131, name: \"ECU_control_Event_1\", id: 104, pos: 2},\r\n    ECU_control_Event_2: {index: 132, name: \"ECU_control_Event_2\", id: 104, pos: 3},\r\n    speedFL: {index: 133, name: \"speedFL\", id: 105, pos: 3},\r\n    speedFR: {index: 134, name: \"speedFR\", id: 105, pos: 2},\r\n    speedBL: {index: 135, name: \"speedBL\", id: 105, pos: 1},\r\n    speedBR: {index: 136, name: \"speedBR\", id: 105, pos: 0},\r\n    ganhoTorque: {index: 137, name: \"ganhoTorque\", id: 106, pos: 0}, //não está sendo utilizado\r\n    motorCurrentRight: {index: 138, name: \"motorCurrentRight\", id: 106, pos: 2},\r\n    motorCurrentLeft: {index: 139, name: \"motorCurrentLeft\", id: 106, pos: 3},\r\n    temperatureInversorR1: {index: 140, name: \"temperatureInversorR1\", id: 107, pos: 0},\r\n    temperatureInversorR2: {index: 141, name: \"temperatureInversorR2\", id: 107, pos: 1},\r\n    temperatureInversorL1: {index: 142, name: \"temperatureInversorL1\", id: 107, pos: 2},\r\n    temperatureInversorL2: {index: 143, name: \"temperatureInversorL2\", id: 107, pos: 3},\r\n    accelerometerX: {index: 144, name: \"accelerometerX\", id: 108, pos: 0},\r\n    accelerometerY: {index: 145, name: \"accelerometerY\", id: 108, pos: 1},\r\n    accelerometerZ: {index: 146, name: \"accelerometerZ\", id: 108, pos: 2},\r\n    Erro_1: {index: 147, name: \"Erro_1\", id: 108, pos: 3},\r\n    gyroscopeX: {index: 148, name: \"gyroscopeX\", id: 109, pos: 0},\r\n    gyroscopeY: {index: 149, name: \"gyroscopeY\", id: 109, pos: 1},\r\n    gyroscopeZ: {index: 150, name: \"gyroscopeZ\", id: 109, pos: 2},\r\n    Erro_2: {index: 151, name: \"Erro_2\", id: 109, pos: 3},\r\n    \r\n    //atualizar essa parte\r\n    modoCorrespondente: {index: 546, name: \"modoCorrespondente\", id: 0x102, pos: 0},\r\n    flagCorrespondente1: {index: 547, name: \"flagCorrespondente1\", id: 0x102, pos: 1},\r\n    flagCorrespondente2: {index: 548, name: \"flagCorrespondente2\", id: 0x102, pos: 2},\r\n    tireTempFL: {index: 550, name: \"tireTempFL\", id: 0x700, pos: 0},\r\n    tireTempFR: {index: 551, name: \"tireTempFR\", id: 0x700, pos: 1},\r\n    tireTempBL: {index: 552, name: \"tireTempBL\", id: 0x700, pos: 2},\r\n    tireTempBR: {index: 553, name: \"tireTempBR\", id: 0x700, pos: 3},\r\n    // mediaSpeed: {index: 25, name: \"mediaSpeed\", id: 0x304, pos: 0},\r\n    // mediaTorque: {index: 26, name: \"mediaTorque\", id: 0x304, pos: 1},\r\n    potenciometroBalancin: {index: 561, name: \"potenciometroBalancin\", id: 170, pos: 1},\r\n    termoparFreioD: {index: 562, name: \"termoparFreioD\", id: 170, pos: 2},\r\n    extensometro1: {index: 563, name: \"extensometro1\", id: 171, pos: 0},\r\n    extensometro2: {index: 564, name: \"extensometro2\", id: 171, pos: 1},\r\n    interfaceFlag: {index: 568, name: \"interfaceFlag\", id: 102, pos: 1},\r\n    selecaoBotao: {index: 572, name: \"selecaoBotao\", id: 104, pos: 3},\r\n    extensometro22: {index: 574, name: \"extensometro22\", id: 173, pos: 0},\r\n    extensometro13: {index: 575, name: \"extensometro13\", id: 178, pos: 0},\r\n    extensometro23: {index: 576, name: \"extensometro23\", id: 178, pos: 2},\r\n    portConnected: {index: 900, name: \"portConnected\", id: 900, pos: 0},\r\n    rssi: {index: 901, name: \"rssi\", id: 901, pos: 0},\r\n    sensorPressaoDianteiro: {index: 660, name: \"sensorPressaoDianteiro\", id: 170, pos: 0},\r\n    simHodometer: {index: 677, name: \"simHodometer\", id: 901, pos: 0},\r\n    simCharge: {index: 678, name: \"simCharge\", id: 901, pos: 1},\r\n    pressaoTraseiro: {index: 679, name: \"pressaoTraseiro\", id: 200, pos: 0},\r\n    mediaCurrent: {index: 600, name: \"mediaCurrent\", id: 53, pos: 0}, //não achei\r\n    mediaTemperature: {index: 602, name: \"mediaTemperature\", id: 53, pos: 2} //não achei  \r\n\r\n}\r\n\r\nconst nameFieldIdMap = Object.values(fields).reduce((last, field) => (last[field.name] = field.index, last), {})\r\nconst fieldIdNameMap = Object.values(fields).reduce((last, field) => (last[field.index] = field.name, last), {})\r\n\r\n//para plotar no gráfico\r\nlet availablePlotOptions = [\r\n    {index: fields.current0.index, name: \"Corrente 0\", unidade: \"A\", formatFn: ((current) => (current > Math.pow(2, 15) ? (current-Math.pow(2, 16))/10: current/10))},\r\n    {index: fields.current1.index, name: \"Corrente 1\", unidade: \"A\", formatFn: ((current) => (current > Math.pow(2, 15) ? (current-Math.pow(2, 16))/100: current)/100)},\r\n    {index: fields.current2.index, name: \"Corrente 2\", unidade: \"A\", formatFn: ((current) => (current > Math.pow(2, 15) ? (current-Math.pow(2, 16))/10: current)/10)},\r\n    {index: fields.current3.index, name: \"Corrente 3\", unidade: \"A\", formatFn: ((current) => (current > Math.pow(2, 15) ? (current-Math.pow(2, 16))/10: current)/10)},\r\n    {index: fields.glvVoltage.index, name: \"Tensão do GLV\", unidade: \"V\", formatFn: ((a) => a/1000)},\r\n    {index: fields.chargePercent.index, name: \"Porcentagem de Carga\", unidade: \"%\", formatFn: ((a) => a/100)},\r\n    {index: fields.mediaCurrent.index, name: \"Corrente Média\", unidade: \"A\", formatFn: ((current) => (current > Math.pow(2, 15) ? (current-Math.pow(2, 16))/100: current/100))},\r\n    {index: fields.totalVoltage.index, name: \"Tensão Total\", unidade: \"V\", formatFn: ((a) => a/100)},\r\n    {index: fields.mediaTemperature.index, name: \"Temperatura Média\", unidade: \"ºC\", formatFn: ((a) => a/1000)},\r\n    {index: fields.maxTemperature.index, name: \"Temperatura Máxima\", unidade: \"ºC\", formatFn: ((a) => a/1000)},\r\n    {index: fields.minVoltage.index, name: \"Tensão Mínima\", unidade: \"V\", formatFn: ((a) => a/10000)},\r\n    {index: fields.mediaTemperature.index, name: \"Temperatura Média\", unidade: \"ºC\", formatFn: ((a) => a/1000)},\r\n    {index: fields.motorTorqueRight.index, name: \"Torque Motor Direito\", unidade: \"%\", formatFn: ((a) => a/10)},\r\n    {index: fields.motorTorqueLeft.index, name: \"Torque Motor Esquerdo\", unidade: \"%\", formatFn: ((a) => a/10)},\r\n    {index: fields.torqueReferenceRight.index, name: \"Referência de Torque Direito\", unidade: \"%\", formatFn: ((a) => a/10)},\r\n    {index: fields.torqueReferenceLeft.index, name: \"Referência de Torque Esquerdo\", unidade: \"%\", formatFn: ((a) => a/10)},\r\n    {index: fields.pedalAcelerador.index, name: \"Pedal Acelerador\", unidade: \"%\", formatFn: ((a) => a/10)},\r\n    {index: fields.pedalFreio.index, name: \"Pedal Freio\", unidade: \"\", formatFn: ((a) => Math.round(a))},\r\n    // {index: fields.mediaSpeed.index, name: \"Velocidade Média\", unidade: \"km/h\", formatFn: ((a) => a)},\r\n    // {index: fields.mediaTorque.index, name: \"Torque Médio\", unidade: \"%\", formatFn: ((a) => a/100)},\r\n    {index: fields.steeringWheel.index, name: \"Volante\", unidade: \"º\", formatFn: ((a) => a*300/4095-164.1025)},\r\n    // {index: fields.energiaInversorRight.index, name: \"Energia Inversor Direito\", unidade: \"kWh\", formatFn: ((a) => a/1000)},\r\n    // {index: fields.energiaInversorLeft.index, name: \"Energia Inversor Esquerdo\", unidade: \"kWh\", formatFn: ((a) => a/1000)},\r\n    {index: fields.motorCurrentRight.index, name: \"Corrente Motor Direito\", unidade: \"A\", formatFn: ((a) => a/100)},\r\n    {index: fields.motorCurrentLeft.index, name: \"Corrente Motor Esquerdo\", unidade: \"A\", formatFn: ((a) => a/100)},\r\n    {index: fields.temperatureInversorR1.index, name: \"Temperatura Inversor Direito 1\", unidade: \"ºC\", formatFn: ((a) => a/100)},\r\n    {index: fields.temperatureInversorR2.index, name: \"Temperatura Inversor Direito 2\", unidade: \"ºC\", formatFn: ((a) => a/100)},\r\n    {index: fields.temperatureInversorL1.index, name: \"Temperatura Inversor Esquerdo 1\", unidade: \"ºC\", formatFn: ((a) => a/100)},\r\n    {index: fields.temperatureInversorL2.index, name: \"Temperatura Inversor Esquerdo 2\", unidade: \"ºC\", formatFn: ((a) => a/100)},\r\n    {index: fields.speedFL.index, name: \"Velocidade do Pneu Dianteiro Esquerdo\", unidade: \"RPM\", formatFn: ((a) => a/10/3.6/(52.07/10*Math.PI)*60)},\r\n    {index: fields.speedFR.index, name: \"Velocidade do Pneu Dianteiro Direito\", unidade: \"RPM\", formatFn: ((a) => a/10/3.6/(52.07/10*Math.PI)*60)},\r\n    {index: fields.speedBL.index, name: \"Velocidade do Pneu Traseiro Esquerdo\", unidade: \"RPM\", formatFn: ((a) => a/9)},\r\n    {index: fields.speedBR.index, name: \"Velocidade do Pneu Traseiro Direito\", unidade: \"RPM\", formatFn: ((a) => a/9)},\r\n    {index: fields.speedMotorLeft.index, name: \"Velocidade do Motor Esquerdo\", unidade: \"RPM\", formatFn: ((a) => a/9)},\r\n    {index: fields.speedMotorRight.index, name: \"Velocidade do Motor Direito\", unidade: \"RPM\", formatFn: ((a) => a/9)},\r\n    {index: fields.tireTempFL.index, name: \"Temperatura do Pneu Dianteiro Esquerdo\", unidade: \"ºC\", formatFn: ((a) => a/100)},\r\n    {index: fields.tireTempFR.index, name: \"Temperatura do Pneu Dianteiro Direito\", unidade: \"ºC\", formatFn: ((a) => a/100)},\r\n    {index: fields.tireTempBL.index, name: \"Temperatura do Pneu Traseiro Esquerdo\", unidade: \"ºC\", formatFn: ((a) => a)},\r\n    {index: fields.tireTempBR.index, name: \"Temperatura do Pneu Traseiro Direito\", unidade: \"ºC\", formatFn: ((a) => a)},\r\n    {index: fields.accelerometerX.index, name: \"Acelerômetro X\", unidade: \"g\", formatFn: ((a) => a/100)},\r\n    {index: fields.accelerometerY.index, name: \"Acelerômetro Y\", unidade: \"g\", formatFn: ((a) => a/100)},\r\n    {index: fields.accelerometerZ.index, name: \"Acelerômetro Z\", unidade: \"g\", formatFn: ((a) => a/100)},\r\n    {index: fields.rssi.index, name: \"RSSI\", unidade: \"dBm\", formatFn: ((a) => -a)},\r\n    {index: fields.sensorPressaoDianteiro.index, name: \"Sensor de Pressão\", unidade: \"bar\", formatFn: ((a) => a)},\r\n    {index: fields.temp201.index, name: \"Temperatura 201\", unidade: \"ºC\", formatFn: ((a) => a)},\r\n    {index: fields.temp203.index, name: \"Temperatura 203\", unidade: \"ºC\", formatFn: ((a) => a)},\r\n    {index: fields.temp301.index, name: \"Temperatura 301\", unidade: \"ºC\", formatFn: ((a) => a)},\r\n    {index: fields.temp303.index, name: \"Temperatura 303\", unidade: \"ºC\", formatFn: ((a) => a)},\r\n    {index: fields.temp401.index, name: \"Temperatura 401\", unidade: \"ºC\", formatFn: ((a) => a)},\r\n    {index: fields.temp403.index, name: \"Temperatura 403\", unidade: \"ºC\", formatFn: ((a) => a)},\r\n    {index: fields.simCharge.index, name: \"Descarga recente\", unidade: \"C\", formatFn: ((a) => a)},\r\n    {index: fields.pressaoTraseiro.index, name: \"Pressão na linha de freio traseira\", unidade: \"Pa\", formatFn: ((a) => a)}\r\n]\r\n\r\nconst availablePlotIndexes = availablePlotOptions.map(option => option.index);\r\n\r\nlet datalogOrder = [\r\n    //fields.ECUTimer.name,\r\n    //fields.hodometroTotal.name,\r\n    fields.glvVoltage.name,\r\n    fields.speedFL.name,\r\n    fields.speedFR.name,\r\n    fields.speedMotorLeft.name,\r\n    fields.speedMotorRight.name,\r\n    fields.pedalAcelerador.name,\r\n    fields.pedalFreio.name,\r\n    fields.steeringWheel.name,\r\n    fields.motorCurrentRight.name,\r\n    fields.motorCurrentLeft.name,\r\n    fields.accelerometerX.name,\r\n    fields.accelerometerY.name,\r\n    fields.accelerometerZ.name,\r\n    fields.sensorPressaoDianteiro.name,\r\n    fields.potenciometroBalancin.name,\r\n    fields.termoparFreioD.name,\r\n    fields.extensometro1.name,\r\n    fields.extensometro2.name,\r\n    fields.speedMotorRight.name,\r\n    fields.speedMotorLeft.name,\r\n    fields.current0.name,\r\n    fields.current1.name,\r\n    fields.current2.name,\r\n    fields.current3.name,\r\n    fields.mediaTemperature.name,\r\n    fields.maxTemperature.name,\r\n    fields.motorCurrentRight.name,\r\n    fields.motorCurrentLeft.name,\r\n    fields.temp001.name,\r\n    fields.temp002.name,\r\n    fields.temp003.name,\r\n    fields.temp004.name,\r\n    fields.temp101.name,\r\n    fields.temp102.name,\r\n    fields.temp103.name,\r\n    fields.temp104.name,\r\n    fields.temp201.name,\r\n    fields.temp202.name,\r\n    fields.temp203.name,\r\n    fields.temp204.name,\r\n    fields.temp301.name,\r\n    fields.temp302.name,\r\n    fields.temp303.name,\r\n    fields.temp304.name,\r\n    fields.temp401.name,\r\n    fields.temp402.name,\r\n    fields.temp403.name,\r\n    fields.temp404.name,\r\n    fields.temp501.name,\r\n    fields.temp502.name,\r\n    fields.temp503.name,\r\n    fields.temp504.name,\r\n    fields.current3.name,\r\n    fields.totalVoltage.name,\r\n    fields.minVoltage.name,\r\n    fields.pressaoTraseiro.name\r\n]\r\n\r\n// let datalogOrder = [\r\n//     fields.current0.name,\r\n//     fields.current1.name,\r\n//     fields.current2.name,\r\n//     fields.current3.name,\r\n//     fields.motorCurrentRight.name,\r\n//     fields.motorCurrentLeft.name\r\n// ]\r\n\r\nlet fieldsLimits = [\r\n    {name: fields.chargePercent.name, formattedName: \"Porcentagem de Carga\", min: 0, maxReference: 100},\r\n    {name: fields.glvVoltage.name, formattedName: \"Tensão do GLV\", min: 13000, maxReference: 16000},\r\n    {name: fields.maxTemperature.name, formattedName: \"Temperatura Máxima dos Packs\", max: 65500},\r\n    {name: fields.minVoltage.name, formattedName: \"Tensão Mínima das Células\", min: 28000, maxReference: 35500},\r\n    {name: fields.temperatureInversorL1.name, formattedName: \"Temperatura do Inversor Esquerdo 1\", max: 50000},\r\n    {name: fields.temperatureInversorL2.name, formattedName: \"Temperatura do Inversor Esquerdo 2\", max: 50000},\r\n    {name: fields.temperatureInversorR1.name, formattedName: \"Temperatura do Inversor Direito 1\", max: 50000},\r\n    {name: fields.temperatureInversorR2.name, formattedName: \"Temperatura do Inversor Direito 2\", max: 50000},\r\n    {name: fields.tireTempBL.name, formattedName: \"Temperatura Pneu Traseiro Esquerdo\", max: 20000},\r\n    {name: fields.tireTempBR.name, formattedName: \"Temperatura Pneu Traseiro Direito\", max: 20000},\r\n    {name: fields.tireTempFL.name, formattedName: \"Temperatura Pneu Dianteiro Esquerdo\", max: 20000},\r\n    {name: fields.tireTempFR.name, formattedName: \"Temperatura Pneu Dianteiro Direito\", max: 20000},\r\n]\r\n\r\nfieldsLimits = fieldsLimits.reduce( (last, field) => {\r\n    last[field.name] = {}; \r\n    last[field.name].name = field.formattedName; \r\n    last[field.name][(typeof field.max === 'undefined' ? \"min\": \"max\")] = (typeof field.max === 'undefined' ? field.min: field.max);\r\n    if (typeof field.maxReference !== 'undefined')\r\n        last[field.name].maxReference = field.maxReference;\r\n    return last\r\n}, {});\r\n\r\nmodule.exports = {\r\n    availablePlotOptions,\r\n    fields,\r\n    mappings: {\r\n        nameFieldIdMap: nameFieldIdMap, \r\n        fieldIdNameMap: fieldIdNameMap,\r\n        availablePlotIndexes: availablePlotIndexes\r\n    },\r\n    persistanceTimeout,\r\n    cleanUpTimeout,\r\n    pointsPerSecond,\r\n    fieldsLimit: {\r\n        fieldsLimit: fieldsLimits, \r\n        percentageLimitTolerance: percentageLimitTolerance, \r\n        notificationExpirationTimeout: notificationExpirationTimeout, \r\n        shouldNotify: shouldNotify\r\n    },\r\n    port: {\r\n        portName: portName, \r\n        ignorePortsFile: ignorePortsFile, \r\n        operationType: operationType, \r\n        OperationsType: OperationsType,\r\n        xbeeSourceAddress: xbeeSourceAddress\r\n    },\r\n    datalog: {\r\n        datalogOrder: datalogOrder, \r\n        filepath: datalogFilePath, \r\n        shouldWrite: shouldWrite, \r\n        timeout: datalogTimeout,\r\n        includeTimestamp: includeTimestamp\r\n    }\r\n}","import React from 'react';\r\n\r\nconst DelayContext = React.createContext();\r\n\r\nexport {\r\n    DelayContext\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nimport handleNotifications from './notifications-handler.js'\r\n\r\n\r\nclass DataFetcher extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        // debugger;\r\n\r\n        this.updateRSSI = props.updateRSSI;\r\n        \r\n        this.delay = 300;\r\n\r\n        props.setChildDelay(this.delay);\r\n\r\n        this.state = {};\r\n        this.rootPage = \"data/\";\r\n    \r\n        this.isFetching = false;\r\n        this.shouldFetch = true;\r\n        this.timerID = null;\r\n\r\n        this.doFetch = this.doFetch.bind(this);\r\n      }\r\n\r\n      doFetch() {\r\n        this.updateField()\r\n            .then(res => {\r\n              if (res.data) {\r\n                // debugger;\r\n                const treatedData = this.treatData(res.data);\r\n                this.setState({\r\n                  data: treatedData\r\n                });\r\n                handleNotifications(res.data);\r\n                this.updateRSSI(res.data.rssi);\r\n              } else \r\n                throw Error(\"fetched undefined object\");\r\n              // \r\n              // var data = this.state.data;\r\n              // // debugger;\r\n              // data.bms.charge = (data.bms.charge == null ? 10000 : data.bms.charge - 1 < 0 ? 10000 : data.bms.charge - 100);\r\n              // this.setState({data: data});\r\n            }\r\n            ).catch(err => console.log(err))\r\n      }\r\n\r\n      startFetching() {\r\n        if (this.timerID != null) return;\r\n        this.doFetch();\r\n        this.timerID = setInterval(this.doFetch,this.delay);\r\n      }\r\n\r\n      stopFetching() {\r\n        clearInterval(this.timerID);\r\n        this.timerID = null;\r\n      }\r\n\r\n      treatData(data) {\r\n        return data;\r\n      }\r\n\r\n      componentDidMount() {\r\n        this.startFetching();\r\n      }\r\n\r\n    \r\n      componentWillUnmount() {\r\n        this.stopFetching();\r\n      }\r\n    \r\n      updateField = async () => {\r\n        \r\n        if (this.isFetching || !this.shouldFetch) {\r\n          return false;\r\n        } \r\n        this.isFetching = true;\r\n        const response =  await fetch('/'+this.rootPage+this.page);\r\n        const body = await response.json();\r\n        // console.log(body);\r\n        if (response.status !== 200) {\r\n          throw Error(body.message) \r\n        }\r\n        // console.log(new Date().getMilliseconds()-lastLoaded);\r\n        // lastLoaded = new Date().getMilliseconds();\r\n        //console.log(body);\r\n        this.isFetching = false;\r\n        return body;\r\n      }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default DataFetcher;","import React, { Component } from 'react'\r\nimport { toast } from 'react-toastify';\r\n\r\nconst constants = require('./constants.js');\r\n\r\n\r\nfunction NotificationBasis(props) {\r\n    return (\r\n        <div className=\"d-flex notification-container align-items-center\">\r\n            <div className=\"notification-icon\">\r\n                {props.icon}\r\n            </div>\r\n            <div className=\"flex-fill notification-text\">{props.text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PortDisconnected = ({ closeToast }) => (\r\n    <NotificationBasis  text={\"Porta Serial desconectada!\"}\r\n                        icon={<img src=\"/static/images/usb-unplugged.png\"/>}>\r\n    </NotificationBasis>\r\n)\r\n\r\nconst PortConnected = ({ closeToast }) => (\r\n    <NotificationBasis  text={\"Porta Serial conectada!\"}\r\n                        icon={<img src=\"/static/images/usb-plugged.png\"/>}>\r\n    </NotificationBasis>\r\n)\r\n\r\n\r\nconst WarningValue = ({closeToast, text}) => (\r\n    <NotificationBasis text={text}\r\n                       icon={<img src=\"/static/icons/warning-red.png\"/>}>\r\n    </NotificationBasis>\r\n)\r\n  \r\n  \r\nfunction handleNotifications(data) {\r\n    //CONEXAO SERIAL\r\n    // debugger;\r\n    if (!constants.fieldsLimit.shouldNotify) return;\r\n\r\n    if (!data.portConnected) {\r\n        if (!toast.isActive(900))\r\n            toast(<PortDisconnected/>, {\r\n                toastId: 900,\r\n                autoClose: false,\r\n                type: toast.TYPE.WARNING,\r\n                closeButton: false,\r\n                draggable: false,\r\n                closeOnClick: false\r\n            });\r\n    } else if (toast.isActive(900)) {\r\n        toast.dismiss(900);\r\n        toast.success(<PortConnected/>);\r\n    }\r\n    // debugger;\r\n    let offLimited = JSON.parse(localStorage.getItem(\"offLimitFields\"));\r\n    // debugger;\r\n    if (offLimited == null)\r\n        offLimited = [];\r\n    if (data.offLimitFields.length == 0) {\r\n        localStorage.clear()\r\n    } else {\r\n        const createOffLimitField = (fieldId, value, added) => {return {fieldId: fieldId, value: value, added: added}};\r\n        //interseção entre os novos campos offlimit que chegaram e os que ja estavam registrados como offlimit\r\n        let finalOffLimited = offLimited.filter(previousOffLimited => data.offLimitFields.some(newOffLimited => newOffLimited.fieldId === previousOffLimited.fieldId));\r\n        data.offLimitFields.forEach(field => {\r\n            //debugger;\r\n            const fIndex = finalOffLimited.findIndex(value => value.fieldId === field.fieldId);\r\n            //se, no armazenamento local, n tiver um aviso, cria um aviso novo\r\n            if (fIndex < 0) {\r\n                finalOffLimited.push(createOffLimitField(field.fieldId, field.value, new Date().getTime()))\r\n                \r\n                let textComp = createOffLimitComponent(field);\r\n\r\n                toast(<WarningValue text={textComp}/>, {\r\n                    type: toast.TYPE.ERROR\r\n                })\r\n            //se achou, verifica se ja passou o tempo de expiração. Se tiver passado, notifica novamente\r\n            } else {\r\n                if (new Date().getTime() - finalOffLimited[fIndex].added >= constants.fieldsLimit.notificationExpirationTimeout) {\r\n                    finalOffLimited[fIndex] = createOffLimitField(field.fieldId, field.value, new Date().getTime());\r\n                    // debugger;\r\n                    let textComp = createOffLimitComponent(field);\r\n\r\n                    toast(<WarningValue text={textComp}/>, {\r\n                        type: toast.TYPE.ERROR\r\n                    })\r\n                }\r\n            }\r\n        }, this);\r\n        localStorage.setItem('offLimitFields', JSON.stringify(finalOffLimited));\r\n        \r\n    }\r\n}\r\n\r\nfunction createOffLimitComponent(field) {\r\n    let name = constants.mappings.fieldIdNameMap[field.fieldId];\r\n    let fieldName = constants.fieldsLimit.fieldsLimit[name].name;\r\n\r\n    let textComp;\r\n    if (typeof constants.fieldsLimit.fieldsLimit[name].max !== 'undefined' && constants.fieldsLimit.fieldsLimit[name].max*(1-constants.fieldsLimit.percentageLimitTolerance/100) <= field.value) {\r\n        // debugger;\r\n        // const intValue = parseInt(field.value);\r\n        // const maxValue = constants.fieldsLimit.fieldsLimit[name].max;\r\n        // const difference = (maxValue-intValue);\r\n        // const decimalPerc = difference/constants.fieldsLimit.fieldsLimit[name].max*100;\r\n        // const perc = parseInt(decimalPerc);\r\n        let perc = parseInt((constants.fieldsLimit.fieldsLimit[name].max-parseInt(field.value))/constants.fieldsLimit.fieldsLimit[name].max*100);\r\n        // debugger;\r\n        textComp = (<span>O campo <span className=\"notification-field-name\">{fieldName}</span> está <span className=\"notification-value\">{(perc <= 0 ? 'ACIMA' : +perc+'% distante')}</span> do valor máximo!</span>)\r\n        \r\n    } else {\r\n        // debugger;\r\n        // let b1 = parseInt(field.value);\r\n        // let b2 = constants.fieldsLimit.fieldsLimit[name].min;\r\n        // let a1 = (b1-b2);\r\n        // let a2 = a1/constants.fieldsLimit.fieldsLimit[name].maxReference*100;\r\n        // let perc = parseInt(a2);\r\n        let perc = parseInt(( parseInt(field.value) - constants.fieldsLimit.fieldsLimit[name].min)/constants.fieldsLimit.fieldsLimit[name].maxReference*100);\r\n        // debugger;\r\n        textComp = (<span>O campo <span className=\"notification-field-name\">{fieldName}</span> está <span className=\"notification-value\">{(perc <= 0 ? 'ABAIXO' : +perc+'% distante')}</span> do valor mínimo!</span>)\r\n    }\r\n\r\n    return textComp;\r\n}\r\n\r\nexport default handleNotifications;","export default \"# TIPO DE OPERAÇÃO\\r\\n# Valores possíveis:\\r\\n# BYTES  - Recebimento por Xbee em formato de bytes\\r\\n# STRING - Recebimento por Xbee ou NRF em formato de string\\r\\n# API_BYTES  - Recebimento por Xbee em API mode por bytes\\r\\n# API_STRING - Recebimento por Xbee em API mode por string\\r\\n# [default = STRING]\\r\\noperationType = API_BYTES\\r\\n\\r\\n# [string] [default = 0013A20041932DC6] Endereço 64bits do xbee transmissor.\\r\\nxbeeSourceAddress = 0013A20041932DC6\\r\\n\\r\\n# PORTA SERIAL\\r\\n\\r\\n# [string] [default = ] Nome da porta serial que o dispositivo receptor se encontra. Deixe vazio para identificação automática.\\r\\nportName = \\r\\n# [string] [default = ignore-ports.txt] Nome do arquivo de texto, na pasta raiz, contendo nome de portas para serem ignoradas na identificação automática de porta, separados por linha.\\r\\nignorePortsFile = ignore-ports.txt\\r\\n\\r\\n\\r\\n# NOTIFICAÇÕES\\r\\n\\r\\n# [bool] [default = true] Ativar ou desativar notificações\\r\\nshouldNotify = false\\r\\n# [number] [default = 10] Limite percentual para acionar a notificação que alerta da proximidade do valor mínimo/máximo\\r\\npercentageLimitTolerance = 10\\r\\n# [number] [default = 30000] Tempo de timeout em milissegundos para a notificação ser reacionada caso a condição não mude\\r\\nnotificationExpirationTimeout = 30000\\r\\n\\r\\n\\r\\n# DATALOG\\r\\n\\r\\n# [string] [default = ./datalog/] Caminho para a escrita do datalog. O DIRETÓRIO NÃO É CRIADO, ENTAÃO DEVE, OBRIGATORIAMENTE, EXISTIR.\\r\\ndatalogFilePath = ./datalog/\\r\\n# [bool] [default = true] Ativar ou desativar o datalog\\r\\nshouldWrite = true\\r\\n# [number]  [default = 30000] Tempo, em milissegundos, de quanto esperar sem receber dados até criar um novo arquivo de texto\\r\\ndatalogTimeout = 10000\\r\\n# [bool] [default = false] Incluir timestamp (quantidade de milissegundos desde 1/1/1970 00:00) como primeiro item de cada linha\\r\\nincludeTimestamp = true\\r\\n\\r\\n\\r\\n# PLOTAGEM EM TEMPO REAL\\r\\n\\r\\n# BANCO DE DADOS LOCAL\\r\\n# [number]  [default = 60000] Tempo, em milissegundos, de persistência dos dados no banco de dados antes de serem eliminados. Altere esse valor para definir de quanto tempo atrás os dados devem ser exibidos.\\r\\npersistanceTimeout = 60000\\r\\n# [number] [default = 1000] Período, em milissegundos, para ser acionada a varredura do banco de dados local para eliminar dados antigos\\r\\ncleanUpTimeout = 1000\\r\\n\\r\\n#PLOTAGEM\\r\\n# [number] [default = 1] Quantidade desejada de pontos por segundo para serem exibidos no gráfico. VALORES ALTOS PODEM COMPROMETER A INTEGRIDADE DO SERVIDOR E DA REDE.\\r\\npointsPerSecond = 1\\r\\n\\r\\n        \"","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/object/values\");","module.exports = require(\"core-js/library/fn/parse-float\");","module.exports = require(\"core-js/library/fn/parse-int\");","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"core-js/library/fn/reflect/construct\");","module.exports = require(\"core-js/library/fn/reflect/get\");","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _Promise from \"../../core-js/promise\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import _Object$defineProperty from \"../../core-js/object/define-property\";\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$getOwnPropertyDescriptor from \"../../core-js/object/get-own-property-descriptor\";\nimport _Reflect$get from \"../../core-js/reflect/get\";\nimport getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && _Reflect$get) {\n    _get = _Reflect$get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n\n      var desc = _Object$getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import _Object$getPrototypeOf from \"../../core-js/object/get-prototype-of\";\nimport _Object$setPrototypeOf from \"../../core-js/object/set-prototype-of\";\nexport default function _getPrototypeOf(o) {\n  _getPrototypeOf = _Object$setPrototypeOf ? _Object$getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || _Object$getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _Object$create from \"../../core-js/object/create\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = _Object$create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import _Object$setPrototypeOf from \"../../core-js/object/set-prototype-of\";\nexport default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = _Object$setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import _Symbol$iterator from \"../../core-js/symbol/iterator\";\nimport _Symbol from \"../../core-js/symbol\";\n\nfunction _typeof2(obj) { if (typeof _Symbol === \"function\" && typeof _Symbol$iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof _Symbol === \"function\" && _typeof2(_Symbol$iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","module.exports = require(\"regenerator-runtime\");\n","import React, { Component } from 'react'\r\nimport DataFetcher from '../components/data-fetcher.js'\r\n\r\n\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Legend, ResponsiveContainer, Label } from 'recharts';\r\n\r\n\r\nimport {DelayContext} from '../components/contexts.js';\r\nimport {availablePlotOptions, persistanceTimeout, pointsPerSecond} from '../components/constants.js';\r\n\r\n\r\nconst DelayProvider = DelayContext.Provider;\r\n\r\n\r\nvar i = 1;\r\n\r\n\r\nclass Graficos extends DataFetcher {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.delay = 1000/pointsPerSecond;\r\n        this.rootPage = \"plot/\"\r\n        this.page = \"\"\r\n\r\n        this.state.plotData = [{name: 'Page 0', value: Math.random()*100}];\r\n        this.state.data = [];\r\n\r\n        this.generateData = this.generateData.bind(this);\r\n\r\n        this.dado1Change = this.dado1Change.bind(this);\r\n        this.dado2Change = this.dado2Change.bind(this);\r\n        this.buildPage = this.buildPage.bind(this);\r\n\r\n        this.state.dado1 = \"null\";\r\n        this.state.dado2 = \"null\";\r\n        this.shouldFetch = true;\r\n\r\n        this.lastTimestamps = [0, 0];\r\n        this.lastData = [];\r\n\r\n        this.lastMergedTimestamps = [0, 0];\r\n        this.lastMergedData = [];\r\n\r\n        this.mappedPlotingFields = {};\r\n\r\n        this.mapPlotFields();\r\n        \r\n\r\n        // this.itemsPerFetch = persistanceTimeout/1000 * receivePerSecond;\r\n        // this.actualPerSecond = this.itemsPerFetch / persistanceTimeout/10000;\r\n        // this.reduceRatio = parseInt(receivePerSecond / pointsPerSecond);\r\n    }\r\n\r\n    async mapPlotFields() {\r\n        this.mappedPlotingFields = availablePlotOptions.reduce((obj, item, index) => (obj[item.index] = index, obj), {});\r\n    }\r\n\r\n    generateData() {\r\n        var prototype = {name: 'Page '+i, value: Math.random()*100}\r\n        i++;\r\n        var data = this.state.plotData;\r\n        data.push(prototype);\r\n        // console.log(data);\r\n        this.setState({plotData: data});\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.stopFetching();\r\n        super.doFetch();\r\n        // this.shouldFetch = true;\r\n        // console.log(\"child did mount\");\r\n        // this.grTimer = setInterval(this.generateData, 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        super.componentWillUnmount();\r\n        // clearInterval(this.grTimer);\r\n    }\r\n\r\n    dado1Change(event) {\r\n        console.log(\"dado 1 changed\")\r\n        const id = event.target.value;\r\n        // debugger;\r\n        this.setState({dado1: id}, this.buildPage);\r\n\r\n        this.lastTimestamps[0] = 0;\r\n        this.lastData[0] = [];\r\n        this.lastMergedData = [];\r\n        this.lastMergedTimestamps[0] = 0;\r\n\r\n        // this.resetData();\r\n    }\r\n\r\n    dado2Change(event) {\r\n        console.log(\"dado 2 changed\")\r\n        const id =  event.target.value;\r\n        this.setState({dado2: id}, this.buildPage);\r\n        // this.resetData();\r\n\r\n        this.lastTimestamps[1] = 0;\r\n        this.lastData[1] = [];\r\n        this.lastMergedData = [];\r\n        this.lastMergedTimestamps[1] = 0;\r\n    }\r\n\r\n    resetData() {\r\n        \r\n        \r\n    }\r\n\r\n    gaugeFrequency(filteredValues) {\r\n\r\n        const iterationBasis = 20;\r\n        const iterationQuan = (filteredValues.length-1 < iterationBasis ? filteredValues.length-1 : iterationBasis);\r\n    \r\n        // debugger;\r\n        //calcula frequência de recebimento a partir dos primeiros iterationQuan itens, isso para definir a razão de redução\r\n        let sumDiff1 = 0;\r\n        for (var freqI = 0; freqI < iterationQuan-1; freqI++) {\r\n            const diff1 = (filteredValues[freqI+1].timestamp-filteredValues[freqI].timestamp);\r\n            sumDiff1 += diff1;\r\n        }\r\n        let sumDiff2 = 0;\r\n        for (var freqI = filteredValues.length-1; freqI > filteredValues.length-iterationQuan-1; freqI--) {\r\n            const diff2 = (filteredValues[freqI].timestamp-filteredValues[freqI-1].timestamp);\r\n            sumDiff2 += diff2;\r\n        }\r\n        const afferedFrequency = 1000/((sumDiff1+sumDiff2)/(2*(iterationQuan-1)));\r\n\r\n        const rat = parseInt(afferedFrequency / pointsPerSecond);\r\n\r\n        const lastRatio = this.reduceRatio;\r\n\r\n        //trava a redução em 1\r\n        const newRatio = (rat > 1 ? rat : 1);\r\n\r\n        //só se tiver um erro menor de 50% da última aferição, usa a nova aferição\r\n        if (Math.abs(newRatio - lastRatio) < lastRatio*0.5) {\r\n            this.reduceRatio = newRatio;\r\n        //senao, calcula a frequencia novamente so que com todos os componentes\r\n        } else {\r\n            let sumDiff = 0;\r\n            for (var freqI = 0; freqI < filteredValues.length-1; freqI++) {\r\n                const diff = (filteredValues[freqI+1].timestamp-filteredValues[freqI].timestamp);\r\n                sumDiff += diff;\r\n            }\r\n            const averageFreq = 1000/(sumDiff/(filteredValues.length-1));\r\n            // debugger;\r\n            const rat = parseInt(averageFreq / pointsPerSecond);\r\n\r\n            //trava a redução em 1\r\n            this.reduceRatio = (rat > 1 ? rat : 1);\r\n\r\n        }\r\n\r\n        console.log(\"Reduce ratio: \"+this.reduceRatio);\r\n    }\r\n\r\n    treatData(data) {\r\n        const actualDate = new Date().getTime();\r\n        \r\n        const compareFunction = (a, b) => a.timestamp - b.timestamp;\r\n        const limitDate = new Date().getTime() - persistanceTimeout;\r\n\r\n        var keys = [];\r\n\r\n        // debugger;\r\n\r\n\r\n        const lastMergedTimes = this.lastMergedTimestamps.slice(0);\r\n\r\n        for (const key of Object.keys(data)) {\r\n            if (isNaN(key)) continue;\r\n            \r\n            //TALVEZ N SEJA NECESSARIO\r\n            let filteredValues = data[key].filter(entry => entry.timestamp >= limitDate);\r\n\r\n\r\n            \r\n            const lastTimestamp = this.lastTimestamps[keys.length];\r\n            \r\n            filteredValues.sort(compareFunction);\r\n\r\n            this.lastTimestamps[keys.length] = filteredValues[filteredValues.length-1].timestamp;\r\n\r\n\r\n\r\n\r\n            \r\n            // debugger;\r\n\r\n\r\n            this.gaugeFrequency(filteredValues);\r\n\r\n            // const contIndex = filteredValues.findIndex(value => value.timestamp == lastTimestamp.crude);\r\n            \r\n\r\n            let newValues = []\r\n            \r\n            // debugger;\r\n\r\n            let breakFlag = false;\r\n            for(var j = filteredValues.length-1; j >= 0; j-=this.reduceRatio) {\r\n                \r\n                let v = Object.assign({},filteredValues[j]);\r\n                // let sTime = 0, sVal = 0;\r\n                // for (var k = 0; k < quanT; k++) {\r\n                //     if (j+k >= filteredValues.length) break;\r\n                //     sTime += filteredValues[j+k].timestamp;\r\n                //     sVal += parseFloat(filteredValues[j+k].value);\r\n                // }\r\n                // v.value = sVal/k;\r\n                // v.timestamp = sTime/k;\r\n                // newValues.push(v);\r\n                let sTime = 0, sVal = 0;\r\n                let summedQuan = 0;\r\n                for (var k = 0; k < this.reduceRatio; k++) {\r\n                    if (j-k < 0) break;\r\n                    if (filteredValues[j-k].timestamp == lastTimestamp) {\r\n                        breakFlag = true;\r\n                        if (k != 0) {\r\n                            let el = newValues.pop();\r\n                            sVal += el.value*this.reduceRatio;\r\n                            sTime += el.timestamp*this.reduceRatio;\r\n                            summedQuan += this.reduceRatio\r\n                        }\r\n                        break;\r\n                    }\r\n                    // if (filteredValues[j-k].value > sVal) sVal = filteredValues[j-k].value;\r\n                    sVal += parseFloat(filteredValues[j-k].value);\r\n                    sTime += filteredValues[j-k].timestamp;\r\n                    summedQuan++;\r\n                    // sVal += parseFloat(filteredValues[j+k].value);\r\n                }\r\n                //se a proxima iteração não conseguir agrupar reduceRatio elementos, entao agrupa eles na atual. isso reduz picos no grafico\r\n                // if (!breakFlag && (j-k-this.reduceRatio < 0)) {\r\n                //     j-=this.reduceRatio;\r\n                //     summedQuan = 0;\r\n                //     for (let k2 = 0; k2 < this.reduceRatio; k2++) {\r\n                //         if (j-k2 < 0) break;\r\n                //         if (filteredValues[j-k2].timestamp == lastTimestamp) {\r\n                //             breakFlag = true;\r\n                //             break;\r\n                //         }\r\n                //         // if (filteredValues[j-k].value > sVal) sVal = filteredValues[j-k].value;\r\n                //         sVal += parseFloat(filteredValues[j-k2].value);\r\n                //         sTime += filteredValues[j-k2].timestamp;\r\n                //         summedQuan++;\r\n                //         // sVal += parseFloat(filteredValues[j+k].value);\r\n                //     }\r\n                // }\r\n                if (sTime != 0) {\r\n                    v.value = sVal/summedQuan;\r\n                    v.timestamp = sTime/summedQuan;\r\n                    newValues.push(v);\r\n                }\r\n                if (breakFlag) break;\r\n            }\r\n\r\n            newValues = newValues.reverse();            \r\n            // debugger;\r\n\r\n\r\n            //GUARDA OS TIMESTAMPS JA FORMATADOS PARA DEPOIS AFERIR ONDE PARAR NO AGRUPAMENTO\r\n            //TODO: TRAVANDO (DANDO UNDEFINED), CONSERTAR\r\n            if (typeof newValues[newValues.length-1].timestamp == 'undefined')\r\n                debugger;\r\n            this.lastMergedTimestamps[keys.length] = newValues[newValues.length-1].timestamp;\r\n            \r\n            \r\n\r\n            //se setado, entao encotrou um timestamp igual ao ultimo timestamp. entao reaproveita os ultimos dados\r\n            if (breakFlag) {\r\n                // debugger;\r\n                const fromIndex = this.lastData[keys.length].findIndex(value => value.timestamp >= actualDate-persistanceTimeout);\r\n                \r\n                let lastDataPart = this.lastData[keys.length].slice(fromIndex);\r\n                newValues = lastDataPart.concat(newValues);\r\n            }\r\n\r\n            this.lastData[keys.length] = newValues;\r\n\r\n            \r\n            // debugger;\r\n            \r\n            data[key] = newValues;\r\n            \r\n            \r\n            i++;\r\n            keys.push(key);\r\n        }\r\n\r\n        // const newData = Object.entries(data).map(\r\n        //     ([key, value]) => value.sort(compareFunction)\r\n        // )\r\n        console.log(\"data treated\");\r\n\r\n        // debugger;\r\n\r\n        const merged = this.mergeData(data, keys, lastMergedTimes, actualDate);\r\n\r\n        return this.formatData(merged, actualDate, keys);\r\n    }\r\n\r\n\r\n\r\n    formatData(data, actualDate, keys){\r\n\r\n        const finalValue = data.map(value => {\r\n            let nValue = Object.assign({},value);\r\n            nValue.timestamp = -(actualDate - nValue.timestamp)/1000;\r\n\r\n            //formata o valor de acordo com a formatFn definida na constants.js\r\n            keys.forEach( key => nValue[key] = availablePlotOptions[this.mappedPlotingFields[key]].formatFn(nValue[key]) )\r\n            \r\n            return nValue;\r\n        }, this);\r\n\r\n        return finalValue;\r\n    }\r\n\r\n    mergeData(data, keys, lastMergedTimestamps, actualDate) {\r\n         if (keys.length == 1) {\r\n             let values = data[keys[0]];\r\n             \r\n             return values.map(element => {return {[element.field]: element.value, timestamp: element.timestamp}})\r\n         }\r\n             \r\n         \r\n\r\n        let component1 = data[keys[0]];\r\n        let component2 = data[keys[1]];\r\n\r\n        // debugger;\r\n        // console.log(component1.map(element => element.timestamp))\r\n        // console.log(component2.map(element => element.timestamp))\r\n\r\n        let size1 = component1.length;\r\n        let size2 = component2.length;\r\n\r\n        const buildNewValue = (value1, value2, keys) => {\r\n            return {\r\n                [keys[0]]: value1.value,\r\n                [keys[1]]: value2.value,\r\n                timestamp: (value1.timestamp+value2.timestamp)/2\r\n            }\r\n        }\r\n        var index1 = size1-1, index2 = size2-1;\r\n        let newData = [];\r\n        // debugger;\r\n        while(true) {\r\n\r\n            let value1 = component1[index1];\r\n            let value2 = component2[index2];\r\n\r\n            if (this.lastMergedData.length > 0 && (value1.timestamp == lastMergedTimestamps[0] || value2.timestamp == lastMergedTimestamps[1])) {\r\n                //cancela geração e pega do lastMergedData\r\n\r\n                const fromIndex = this.lastMergedData.findIndex(value => value.timestamp >= actualDate-persistanceTimeout);\r\n                \r\n                let lastDataPart = this.lastMergedData.slice(fromIndex);\r\n                newData = lastDataPart.concat(newData.reverse());\r\n\r\n                this.lastMergedData = newData;\r\n\r\n                break;\r\n            }\r\n\r\n            if (value1.timestamp < value2.timestamp) {\r\n                let difference = Math.abs(value2.timestamp-value1.timestamp);\r\n                while((index2-1 >= 0) && (Math.abs(component2[index2-1].timestamp-value1.timestamp) < difference)) {\r\n                    index2--;\r\n                    difference = Math.abs(component2[index2].timestamp-value1.timestamp)\r\n                }\r\n                newData.push(buildNewValue(value1, component2[index2], keys))\r\n            } else if (value1.timestamp > value2.timestamp) {\r\n                let difference = Math.abs(value2.timestamp-value1.timestamp);\r\n                while((index1-1 >= 0) && (Math.abs(component1[index1-1].timestamp-value2.timestamp) < difference)) {\r\n                    index1--;\r\n                    difference = Math.abs(component1[index1].timestamp-value2.timestamp)\r\n                }\r\n                newData.push(buildNewValue(component1[index1], value2, keys))\r\n            } else {\r\n                newData.push(buildNewValue(value1, value2, keys));\r\n            }\r\n\r\n            index1--;\r\n            index2--;\r\n\r\n            if (index2 < 0 || index1 < 0) break;\r\n\r\n        }\r\n\r\n        return newData;\r\n    }\r\n\r\n    buildPage() {\r\n        this.page = (this.state.dado1 != \"null\" ? \"?id=\"+this.state.dado1: \"\") + (this.state.dado2 != \"null\" ? \"&id=\"+this.state.dado2: \"\");\r\n        // debugger;\r\n        \r\n        this.startFetching();\r\n        // console.log(this.page);\r\n    }\r\n\r\n    render() {\r\n        // console.log(persistanceTimeout);\r\n        // console.log(this.state.data);\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <DelayProvider value={this.delay}>\r\n                    <form>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <div className=\"d-flex justify-content-center align-items-center form-group dados-grafico\">\r\n                                    <div className=\"dado-grafico-title\">DADO 1:{\"  \"}</div>\r\n                                    <select value={this.state.dado1} className=\"form-control\" onChange={this.dado1Change}>\r\n                                        <option value=\"null\" defaultValue=\"selected\">Selecione</option>\r\n                                        {availablePlotOptions.map((value) =>\r\n                                            <option value={value.index}>{value.name}</option>\r\n                                        )}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <div className=\"d-flex justify-content-center align-items-center form-group dados-grafico\">\r\n                                    <div className=\"dado-grafico-title\">DADO 2:{\"  \"}</div>\r\n                                    <select value={this.state.dado2} className=\"form-control\" onChange={this.dado2Change}>\r\n                                        <option value=\"null\" selected=\"selected\">Selecione</option>\r\n                                        {this.state.dado1 != \"null\" && availablePlotOptions.map((value) => {\r\n                                                if (value.index != this.state.dado1) {\r\n                                                    return <option value={value.index}>{value.name}</option>\r\n                                                } else {\r\n                                                    return false;\r\n                                                }\r\n                                            }\r\n                                        )}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                                \r\n                            \r\n                        </div>\r\n                    </form>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <ResponsiveContainer minHeight=\"70vh\">\r\n                                <LineChart data={this.state.data} margin={{ top: 10, right: 15, bottom: 15, left: 15 }} key={Math.random()}>\r\n                                    {/* <Line type=\"monotone\" dataKey=\"value\" stroke=\"#F5F5F5\" strokeWidth={5} isAnimationActive={false} /> */}\r\n                                    <CartesianGrid stroke=\"#838383\" strokeDasharray=\"3 3\" />\r\n                                    <XAxis type=\"number\" dataKey=\"timestamp\">\r\n                                        <Label value=\"Tempo [s]\" offset={-10} position=\"insideBottomRight\" />\r\n                                    </XAxis>\r\n                                    <Legend formatter={this.renderLegendText} />\r\n                                    {/*TODO: COLOCAR LABEL CUSTOMIZADO COM A UNIDADE*/}\r\n                                    {this.state.dado1 != \"null\" && <YAxis yAxisId=\"left\"  label={{content: <UnitLabel/>, value: availablePlotOptions[this.mappedPlotingFields[this.state.dado1]].name+\" - [\"+availablePlotOptions[this.mappedPlotingFields[this.state.dado1]].unidade+\"]\", position: 'left', angle: -90 }}/>}\r\n                                    {this.state.dado2 != \"null\" && <YAxis yAxisId=\"right\" label={{content: <UnitLabel/>, value: availablePlotOptions[this.mappedPlotingFields[this.state.dado2]].name+\" - [\"+availablePlotOptions[this.mappedPlotingFields[this.state.dado2]].unidade+\"]\", position: 'right', angle: -90, offset: 50 }} orientation=\"right\"/>}\r\n                                    \r\n                                    {this.state.dado1 != \"null\" && <Line yAxisId=\"left\"  dot={<CustomDot/>} type=\"monotone\" dataKey={this.state.dado1} strokeWidth={2} isAnimationActive={false}/>}\r\n                                    {this.state.dado2 != \"null\" && <Line yAxisId=\"right\" dot={<CustomDot/>} type=\"monotone\" dataKey={this.state.dado2} strokeWidth={2} isAnimationActive={false} stroke=\"#008017\"/>}\r\n\r\n                                     \r\n                                </LineChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    </div>\r\n                </DelayProvider>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderLegendText = (value) => {\r\n        return availablePlotOptions[this.mappedPlotingFields[value]].name;\r\n    }\r\n}\r\n\r\n\r\nfunction UnitLabel(props) {\r\n    // console.log(props);\r\n    const {viewBox, value, angle, offset} = props;\r\n    \r\n    // return (<div>{value}</div>);\r\n    return <text transform={\"rotate(\"+angle+\", \"+viewBox.x+\", \"+viewBox.y+\")\"} x={viewBox.x} y={viewBox.y} dx={-20} dy={10+offset} fill={\"whitesmoke\"} fontFamily=\"Exo\" fontSize=\"1rem\" textAnchor=\"end\">{value}</text>\r\n    \r\n}\r\n\r\nfunction CustomDot(props) {\r\n    const { cx, cy, stroke } = props;\r\n    return <circle cx={cx} cy={cy} r={3} stroke={stroke} strokeWidth={2} fill=\"whitesmoke\"/>\r\n}\r\n\r\nexport default Graficos;","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/object/values\");","module.exports = require(\"core-js/library/fn/parse-float\");","module.exports = require(\"core-js/library/fn/parse-int\");","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"core-js/library/fn/reflect/construct\");","module.exports = require(\"core-js/library/fn/reflect/get\");","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","module.exports = require(\"fs\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"path\");","module.exports = require(\"react\");","module.exports = require(\"react-toastify\");","module.exports = require(\"recharts\");","module.exports = require(\"regenerator-runtime\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AAEA;AAMA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAkDA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA/MA;AAkxBA;;;;;;;;;;;;;ACjfA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAEA;AACA;AAEA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAmEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAKA;AALA;AAAA;AACA;AADA;AAMA;AANA;AAAA;AACA;AADA;AAOA;AACA;AARA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAYA;AACA;AACA;AACA;AAfA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA/DA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAlBA;AAmBA;AACA;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAnEA;AACA;AA6FA;;;;;;;;;;;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AADA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AADA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AADA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChIA;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpCA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAGA;AAGA;AACA;AAGA;AAGA;AACA;AAEA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAwcA;AACA;AACA;AAvcA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AAnCA;AAkCA;AACA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAGA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;;;AAKA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAIA;AAEA;AAEA;AACA;AAQA;AACA;AAIA;AACA;AAGA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAEA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AADA;AACA;AAGA;AAEA;AACA;;;AAIA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAEA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AADA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;AAvcA;AACA;AA8cA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC9eA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}