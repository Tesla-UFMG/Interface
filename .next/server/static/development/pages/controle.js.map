{"version":3,"file":"static\\development\\pages\\controle.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/acelerometro-xy.js","webpack:///./components/acelerometro-yz.js","webpack:///./components/carro-overlay.js","webpack:///./components/constants.js","webpack:///./components/contexts.js","webpack:///./components/countup-wrapper.js","webpack:///./components/data-fetcher.js","webpack:///./components/notifications-handler.js","webpack:///./components/volante.js","webpack:///./config.properties","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/create.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/values.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-int.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/promise.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/reflect/construct.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js","webpack:///./node_modules/@babel/runtime-corejs2/regenerator/index.js","webpack:///./pages/controle.js","webpack:///external \"chroma-js\"","webpack:///external \"core-js/library/fn/json/stringify\"","webpack:///external \"core-js/library/fn/object/assign\"","webpack:///external \"core-js/library/fn/object/create\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-prototype-of\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"core-js/library/fn/object/set-prototype-of\"","webpack:///external \"core-js/library/fn/object/values\"","webpack:///external \"core-js/library/fn/parse-int\"","webpack:///external \"core-js/library/fn/promise\"","webpack:///external \"core-js/library/fn/reflect/construct\"","webpack:///external \"core-js/library/fn/symbol\"","webpack:///external \"core-js/library/fn/symbol/iterator\"","webpack:///external \"fs\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"path\"","webpack:///external \"react\"","webpack:///external \"react-countup\"","webpack:///external \"react-toastify\"","webpack:///external \"regenerator-runtime\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","import React, { Component } from 'react'\r\n\r\nimport CountUpWrapper from '../components/countup-wrapper.js'\r\n\r\nimport {DelayContext} from '../components/contexts.js'\r\n\r\n\r\nclass AcelerometroXY extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.svgRef = React.createRef();\r\n        this.setaRef = React.createRef();\r\n        this.caboRef = React.createRef();\r\n        this.pontaRef = React.createRef();\r\n\r\n        this.lastAngle = 0;\r\n        this.lastGrow = 0;\r\n    }\r\n\r\n    render() {\r\n        var setaRotate = \"rotate(\";\r\n\r\n        var x = this.props.x;\r\n        var y = this.props.y;\r\n\r\n        var lAngle = this.lastAngle;\r\n\r\n        \r\n        let angle = (Math.atan(y/x)*180/Math.PI + (x<0 ? 270: 90));\r\n        var finalAngle;\r\n\r\n        this.lastAngle = angle;\r\n\r\n        var complementaryAngle = (angle < 0 ? angle + 360 : angle - 360);\r\n\r\n        //busca pelo menor diferença de angulo que resulta na mesma rotação da seta\r\n\r\n        var dAc = lAngle - angle;\r\n        var dA = Math.abs(dAc);\r\n\r\n        var compAng = angle + 360*dAc/dA;\r\n\r\n        var dC = Math.abs(lAngle-compAng);\r\n\r\n        if (dA <= dC) {\r\n            finalAngle = angle;\r\n        } else {\r\n            finalAngle = compAng;\r\n        }\r\n\r\n        //debugger;\r\n        setaRotate+=angle+\", 350, 250)\"\r\n        \r\n        \r\n        const a = 170;\r\n        const b = 70;\r\n        \r\n        let tanTheta = y/x;\r\n        \r\n        let xe = x == 0 ? 0 : a*b/Math.sqrt(b*b+tanTheta*tanTheta*a*a);\r\n        let ye = x == 0 ? b : tanTheta*xe;\r\n        \r\n        var grow = Math.sqrt(Math.pow(xe,2)+Math.pow(ye,2));\r\n        \r\n        const maxg = 4;\r\n        const offset = 10;\r\n        const maxsize = 160-26-offset;\r\n        \r\n        var norma = Math.sqrt(x*x+y*y);\r\n        if (norma > maxg) norma = maxg;\r\n        \r\n        var inc = norma/maxg*maxsize;\r\n        \r\n        grow += offset + inc;\r\n        var lGrow = this.lastGrow;\r\n        this.lastGrow = grow;\r\n        \r\n        \r\n        console.log(grow);\r\n        // if ()\r\n\r\n        return (\r\n            <div>\r\n                <svg ref={this.svgRef} style={{zoom: 1}} cursor=\"default\" version=\"1.1\" viewBox=\"0 0 700 500\" width=\"100%\"\r\n                    id=\"svg_document\" baseProfile=\"full\" preserveAspectRatio=\"xMidYMid meet\">\r\n                    <g id=\"main_group\">\r\n                        <g ref={this.setaRef} id=\"seta\" transform=\"\">\r\n                            <BuildRotateAnimation lastAngle={lAngle} angle={finalAngle}></BuildRotateAnimation>\r\n\r\n                            <rect ref={this.caboRef} stroke=\"none\" height=\"0px\" x=\"345px\" y=\"250px\" id=\"seta-cabo\" strokeWidth=\"3px\" width=\"10px\"\r\n                                fill=\"green\" transform=\"\">\r\n                                <BuildGrowthAnimation lastHeight={lGrow} height={grow}></BuildGrowthAnimation>\r\n                            </rect>\r\n                            <polygon ref={this.pontaRef} points={\"330,\"+(250+grow-1)+\" 370,\"+(250+grow-1)+\" 350,\"+(250+grow-1+26)} stroke=\"none\" id=\"polygon1\" strokeWidth=\"3px\" fill=\"green\"\r\n                                transform=\"\">\r\n                                <BuildPointsAnimation lastGrow={lGrow} grow={grow}></BuildPointsAnimation>\r\n                                </polygon>\r\n                        </g>\r\n                        <g id=\"g1\" transform=\"\">\r\n                            <ellipse stroke=\"none\" cx=\"350px\" transform=\"\" id=\"ellipse1\" cy=\"250px\" fill=\"black\"\r\n                                rx={a} ry={b}></ellipse>\r\n                            <image x=\"187px\" height=\"147px\" y=\"169px\" id=\"image1\"\r\n                                xlinkHref=\"/static/images/carro-lado-iconized.png\"\r\n                                xlinkRole=\"/static/images/carro-lado-iconized.png\"\r\n                                width=\"328px\" preserveAspectRatio=\"xMidYMid meet\" transform=\"\"></image>\r\n                        </g><text stroke=\"none\" style={{outlineStyle :\"none\"}} id=\"text1\" strokeWidth=\"1px\" x=\"380px\"\r\n                            textRendering=\"geometricPrecision\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"20px\" y=\"308px\"\r\n                            transform=\"\" fontWeight=\"bold\" textAnchor=\"end\">{norma.toFixed(1)} G</text>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        var svg = this.svgRef.current\r\n        if(svg) {\r\n            svg.setCurrentTime(0);\r\n            var seta = this.setaRef.current;\r\n            //seta.setAttribute(\"transform\", \"rotate(\"+this.lastAngle+\", 350, 250)\");\r\n        }\r\n    }\r\n}\r\n\r\nfunction BuildRotateAnimation(props) {\r\n    return(\r\n        <animateTransform attributeName=\"transform\" \r\n                          attributeType=\"XML\" \r\n                          type=\"rotate\" \r\n                          values={props.lastAngle+\" 350 250;\"+props.angle+\" 350 250\"} \r\n                          begin=\"0s\" \r\n                          dur={(React.useContext(DelayContext)/1000).toFixed(2)+\"s\"} \r\n                          repeatCount=\"1\" \r\n                          additive=\"replace\" \r\n                          accumulate=\"none\" \r\n                          id=\"animateTransform\"\r\n                          fill=\"freeze\" />\r\n    )\r\n}\r\n\r\nfunction BuildGrowthAnimation(props) {\r\n    return(\r\n        <animate attributeName=\"height\"\r\n                 from={props.lastHeight}\r\n                 to={props.height}\r\n                 dur={(React.useContext(DelayContext)/1000).toFixed(2)+\"s\"}\r\n                 begin=\"0s\"\r\n                 repeatCount=\"1\"\r\n                 fill=\"freeze\" \r\n        />\r\n    )\r\n}\r\n\r\nfunction BuildPointsAnimation(props) {\r\n    return(\r\n        <animate attributeName=\"points\"\r\n                 from={\"330,\"+(250+props.lastGrow-1)+\" 370,\"+(250+props.lastGrow-1)+\" 350,\"+(250+props.lastGrow-1+26)}\r\n                 to={\"330,\"+(250+props.grow-1)+\" 370,\"+(250+props.grow-1)+\" 350,\"+(250+props.grow-1+26)}\r\n                 dur={(React.useContext(DelayContext)/1000).toFixed(2)+\"s\"}\r\n                 begin=\"0s\"\r\n                 repeatCount=\"1\"\r\n                 fill=\"freeze\" \r\n        />\r\n    )\r\n}\r\n\r\nexport default AcelerometroXY;","import React, { Component } from 'react'\r\n\r\nimport CountUpWrapper from '../components/countup-wrapper.js'\r\n\r\nimport {DelayContext} from '../components/contexts.js'\r\n\r\nclass AcelerometroYZ extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.svgRef = React.createRef();\r\n\r\n        this.lastGrow = 0\r\n        this.lastAngle = 0;\r\n    }\r\n\r\n    render() {\r\n\r\n        var setaRotate = \"rotate(\";\r\n\r\n        var z = this.props.z;\r\n        var y = this.props.y;\r\n\r\n        //ajusta o angulo dependendo do sinal de z\r\n        let angle = (Math.atan(y/z)*180/Math.PI + (z<0 ? 270: 90));\r\n        var finalAngle;\r\n        var lAngle = this.lastAngle;\r\n        this.lastAngle = angle;\r\n\r\n         //busca pelo menor diferença de angulo que resulta na mesma rotação da seta\r\n\r\n         var dAc = lAngle - angle;\r\n         var dA = Math.abs(dAc);\r\n \r\n         var compAng = angle + 360*dAc/dA;\r\n \r\n         var dC = Math.abs(lAngle-compAng);\r\n \r\n         if (dA <= dC) {\r\n             finalAngle = angle;\r\n         } else {\r\n             finalAngle = compAng;\r\n         }\r\n\r\n        setaRotate+=angle+\", 250, 250)\"\r\n\r\n        const maxg = 4;\r\n        const radius = 90;\r\n        const offset = 10;\r\n        const maxsize = 160-26-offset;\r\n\r\n        var grow = radius+offset;\r\n\r\n        var norma = Math.sqrt(z*z+y*y);\r\n        if (norma > maxg) norma = maxg;\r\n\r\n        var inc = norma/maxg*maxsize;\r\n\r\n        grow += offset + inc;\r\n        var lGrow = this.lastGrow;\r\n        this.lastGrow = grow;\r\n\r\n        console.log(grow);\r\n\r\n        return (\r\n            <div>\r\n                <svg ref={this.svgRef} version=\"1.1\" baseProfile=\"full\" width=\"100%\"\r\n                    viewBox=\"0 0 500 500\" preserveAspectRatio=\"xMidYMid meet\" id=\"svg_document\" style={{zoom: 1}}>\r\n                    <g id=\"main_group\"></g>\r\n                    <g transform=\"\" id=\"seta\">\r\n                        <BuildRotateAnimation lastAngle={lAngle} angle={finalAngle}></BuildRotateAnimation>\r\n                        <rect stroke=\"none\" x=\"245px\" height={grow} y=\"250px\" id=\"seta-cabo\" strokeWidth=\"10px\" width=\"10px\"\r\n                            fill=\"green\" transform=\"\">\r\n                            <BuildGrowthAnimation lastHeight={lGrow} height={grow}></BuildGrowthAnimation>\r\n                        </rect>\r\n                        <polygon points={\"230,\"+(250+grow-1)+\" 270,\"+(250+grow-1)+\" 250,\"+(250+grow+26-1)+\"\"} stroke=\"none\" id=\"polygon1\" strokeWidth=\"3px\" fill=\"green\"\r\n                            transform=\"\">\r\n                            <BuildPointsAnimation lastGrow={lGrow} grow={grow}></BuildPointsAnimation>\r\n                        </polygon>\r\n                    </g>\r\n                    <circle stroke=\"none\" transform=\"\" id=\"circle1\" strokeWidth=\"3px\" cy=\"250px\" fill=\"black\" r={radius} cx=\"250px\">\r\n                    </circle>\r\n                    <image x=\"166px\" height=\"140px\" y=\"163px\" id=\"image1\"\r\n                        xlinkHref=\"/static/images/carro-frente-iconized.png\"\r\n                        xlinkRole=\"/static/images/carro-frente-iconized.png\"\r\n                        width=\"171.111px\" preserveAspectRatio=\"xMidYMid meet\" transform=\"\"></image><text stroke=\"none\"\r\n                        style={{outlineStyle: \"none\"}} id=\"text1\" strokeWidth=\"1px\" x=\"278px\" textRendering=\"geometricPrecision\"\r\n                        fontFamily=\"Exo\"  fontWeight=\"bold\" fill=\"whitesmoke\" fontSize=\"20px\" y=\"320px\" transform=\"\" textAnchor=\"end\">{norma.toFixed(1)} G</text>\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        var svg = this.svgRef.current\r\n        if(svg) {\r\n            svg.setCurrentTime(0);\r\n            //seta.setAttribute(\"transform\", \"rotate(\"+this.lastAngle+\", 350, 250)\");\r\n        }\r\n    }\r\n}\r\n\r\nfunction BuildRotateAnimation(props) {\r\n    return(\r\n        <animateTransform attributeName=\"transform\" \r\n                          attributeType=\"XML\" \r\n                          type=\"rotate\" \r\n                          values={props.lastAngle+\" 250 250;\"+props.angle+\" 250 250\"} \r\n                          begin=\"0s\" \r\n                          dur={(React.useContext(DelayContext)/1000).toFixed(2)+\"s\"} \r\n                          repeatCount=\"1\" \r\n                          additive=\"replace\" \r\n                          accumulate=\"none\" \r\n                          id=\"animateTransform\"\r\n                          fill=\"freeze\" />\r\n    )\r\n}\r\n\r\nfunction BuildGrowthAnimation(props) {\r\n    return(\r\n        <animate attributeName=\"height\"\r\n                 from={props.lastHeight}\r\n                 to={props.height}\r\n                 dur={(React.useContext(DelayContext)/1000).toFixed(2)+\"s\"}\r\n                 begin=\"0s\"\r\n                 repeatCount=\"1\"\r\n                 fill=\"freeze\" \r\n        />\r\n    )\r\n}\r\n\r\nfunction BuildPointsAnimation(props) {\r\n    return(\r\n        <animate attributeName=\"points\"\r\n                 from={\"230,\"+(250+props.lastGrow-1)+\" 270,\"+(250+props.lastGrow-1)+\" 250,\"+(250+props.lastGrow-1+26)}\r\n                 to={\"230,\"+(250+props.grow-1)+\" 270,\"+(250+props.grow-1)+\" 250,\"+(250+props.grow-1+26)}\r\n                 dur={(React.useContext(DelayContext)/1000).toFixed(2)+\"s\"}\r\n                 begin=\"0s\"\r\n                 repeatCount=\"1\"\r\n                 fill=\"freeze\" \r\n        />\r\n    )\r\n}\r\n\r\nexport default AcelerometroYZ;","import React, { Component } from 'react'\r\n\r\nimport CountUpWrapper from '../components/countup-wrapper.js'\r\n\r\nimport chroma from 'chroma-js'\r\n\r\nclass CarOverlay extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        var colorScale = chroma.scale(['#000000', '#7f0f0c']).domain([80,200]);\r\n\r\n        \r\n\r\n        return (\r\n                \r\n            <svg version=\"1.1\" baseProfile=\"full\"\r\n                viewBox=\"0 0 1240 1080\" preserveAspectRatio=\"xMidYMid meet\" id=\"svg_document\" style={{zoom: 1, maxHeight: \"100%\"}}>\r\n            \r\n                {/* <title id=\"svg_document_title\">Untitled.svg</title> */}\r\n                \r\n                <g id=\"main_group\">\r\n                    <rect id=\"background_rect\" fill=\"black\" x=\"0px\" y=\"0px\" width=\"1240px\" height=\"1080px\" visibility=\"hidden\">\r\n                    </rect>\r\n                    <image x=\"0px\" height=\"1080px\" y=\"0px\" id=\"image1\"\r\n                        xlinkHref=\"/static/images/carro-lowerresolution.png\"\r\n                        xlinkRole=\"/static/images/carro-lowerresolution.png\"\r\n                        width=\"1240px\" d=\"\" preserveAspectRatio=\"xMidYMid meet\" transform=\"\"></image>\r\n                </g>\r\n                <g transform=\"\" id=\"IMD-INFO\">\r\n                    <path stroke=\"darkgreen\" strokeWidth=\"2px\" id=\"path12\"\r\n                        d=\"M694,834 l100,0 a10,10 90 0 0 10,-10 l0,-250 a10,10 90 0 1 10,-10 l100,0 \" fill=\"none\" transform=\"\">\r\n                    </path>\r\n                    <path stroke=\"darkgreen\" strokeWidth=\"6\" id=\"path11\"\r\n                        d=\"M893,398 l0,350 a10,10 90 0 0 10,10 l300,0 a10,10 90 0 0 10,-10 l0,-350 a10,10 90 0 0 -10,-10 l-300,0 a10,10 90 0 0 -10,10 \"\r\n                        fill=\"black\" strokeLinecap=\"butt\" transform=\"\" strokeLinejoin=\"miter\"></path>\r\n                    <g id=\"IMD\" transform=\"\">\r\n                        <g transform=\"\" id=\"TORQUE-IMD\">\r\n                            <image x=\"918px\" height=\"70px\" y=\"502px\" id=\"image13\"\r\n                                xlinkHref=\"/static/SVGs/gears.svg\"\r\n                                xlinkRole=\"/static/SVGs/gears.svg\"\r\n                                width=\"70px\" preserveAspectRatio=\"xMidYMid meet\" transform=\"\"></image>\r\n                                <CountUpWrapper end={((this.props.engine || {}).torque || {}).rightEngine/10 || 0}\r\n                                                decimals={0}>\r\n                                    {\r\n                                        ({countUpRef}) => (\r\n                                            <text ref={countUpRef} className=\"carro-overlay-value\" stroke=\"none\" id=\"text45\" strokeWidth=\"1px\" x=\"1080px\"\r\n                                            textRendering=\"geometricPrecision\" y=\"568px\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"25px\"\r\n                                            transform=\"\" textAnchor=\"end\"></text>\r\n                                        )\r\n                                    }\r\n                                </CountUpWrapper>\r\n                                <text stroke=\"none\" className=\"carro-overlay-value\"  id=\"text46\" strokeWidth=\"1px\" x=\"1088px\" textRendering=\"geometricPrecision\" y=\"568px\" fontFamily=\"Exo\"\r\n                                fill=\"whitesmoke\" fontSize=\"25px\" transform=\"\" textAnchor=\"start\">%</text><text stroke=\"none\"\r\n                                    id=\"text47\" strokeWidth=\"1px\" x=\"995px\" fontWeight=\"bold\"\r\n                                textRendering=\"geometricPrecision\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"30px\" y=\"535px\"\r\n                                transform=\"\" textAnchor=\"start\">TORQUE</text>\r\n                        </g>\r\n                        <g transform=\"\" id=\"IMD-TITLE\"><text stroke=\"none\" id=\"text54\"\r\n                                strokeWidth=\"1px\" x=\"908px\" fontWeight=\"bold\" textRendering=\"geometricPrecision\"\r\n                                fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"33px\" y=\"436px\" transform=\"\"\r\n                                textAnchor=\"start\">INVERSOR/MOTOR</text><text stroke=\"none\"\r\n                                id=\"text55\" strokeWidth=\"1px\" x=\"1200px\" fontWeight=\"bold\" textRendering=\"geometricPrecision\"\r\n                                fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"33px\" y=\"474px\" transform=\"\"\r\n                                textAnchor=\"end\">DIREITO</text></g>\r\n                        <g transform=\"\" id=\"T1-IMD\">\r\n                            <image x=\"1138px\" height=\"70px\" y=\"584px\" id=\"image14\"\r\n                                xlinkHref=\"/static/SVGs/termometer.svg\"\r\n                                xlinkRole=\"/static/SVGs/termometer.svg\"\r\n                                width=\"70px\" preserveAspectRatio=\"xMidYMid meet\" transform=\"\"></image>\r\n                                <CountUpWrapper end={((this.props.inverters || {}).temperature || {}).right1/10 || 0}\r\n                                                decimals={0}>\r\n                                    {\r\n                                        ({countUpRef}) => (\r\n                                            <text ref={countUpRef} className=\"carro-overlay-value\" stroke=\"none\"\r\n                                                id=\"text48\" strokeWidth=\"1px\" x=\"971px\"\r\n                                            textRendering=\"geometricPrecision\" y=\"647px\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"25px\"\r\n                                            transform=\"\" textAnchor=\"end\"></text>\r\n                                        )\r\n                                    }\r\n                                </CountUpWrapper>\r\n                                <text stroke=\"none\"  id=\"text49\" className=\"carro-overlay-value\"\r\n                                strokeWidth=\"1px\" x=\"977px\" textRendering=\"geometricPrecision\" y=\"647px\" fontFamily=\"Exo\"\r\n                                fill=\"whitesmoke\" fontSize=\"25px\" transform=\"\" textAnchor=\"start\">ºC</text><text stroke=\"none\"\r\n                                    id=\"text50\" strokeWidth=\"1px\" x=\"904px\" fontWeight=\"bold\"\r\n                                textRendering=\"geometricPrecision\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"30px\" y=\"614px\"\r\n                                transform=\"\" textAnchor=\"start\">TEMPERATURA 1</text>\r\n                        </g>\r\n                        <g transform=\"\" id=\"T2-IMD\">\r\n                            <image x=\"900px\" height=\"70px\" y=\"676px\" id=\"image15\"\r\n                                xlinkHref=\"/static/SVGs/termometer.svg\"\r\n                                xlinkRole=\"/static/SVGs/termometer.svg\"\r\n                                width=\"70px\" preserveAspectRatio=\"xMidYMid meet\" transform=\"\"></image>\r\n                                <CountUpWrapper end={((this.props.inverters || {}).temperature || {}).right2/10 || 0}\r\n                                                decimals={0}>\r\n                                    {\r\n                                        ({countUpRef}) => (\r\n                                            <text ref={countUpRef} className=\"carro-overlay-value\" stroke=\"none\"\r\n                                                id=\"text51\" strokeWidth=\"1px\" x=\"1143px\"\r\n                                            textRendering=\"geometricPrecision\" y=\"740px\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"25px\"\r\n                                            transform=\"\" textAnchor=\"end\"></text>\r\n                                        )\r\n                                    }\r\n                                </CountUpWrapper>\r\n                                <text stroke=\"none\"  id=\"text52\" className=\"carro-overlay-value\"\r\n                                strokeWidth=\"1px\" x=\"1175px\" textRendering=\"geometricPrecision\" y=\"740px\" fontFamily=\"Exo\"\r\n                                fill=\"whitesmoke\" fontSize=\"25px\" transform=\"\" textAnchor=\"end\">ºC</text><text stroke=\"none\"\r\n                                    id=\"text53\" strokeWidth=\"1px\" x=\"955px\" fontWeight=\"bold\"\r\n                                textRendering=\"geometricPrecision\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"30px\" y=\"704px\"\r\n                                transform=\"\" textAnchor=\"start\">TEMPERATURA 2</text>\r\n                        </g>\r\n                        <line stroke=\"#858787\" y1=\"491px\" strokeWidth=\"3px\" x1=\"906px\" id=\"line7\" y2=\"491px\" x2=\"1201px\"\r\n                            transform=\"\" visibility=\"visible\"></line>\r\n                    </g>\r\n                    <circle stroke=\"whitesmoke\" cx=\"694px\" visibility=\"visible\" strokeWidth=\"3px\" id=\"circle3\" cy=\"833px\"\r\n                        fill=\"darkgreen\" r=\"21px\" transform=\"\"></circle>\r\n                </g>\r\n                <g transform=\"\" id=\"IME-INFO\">\r\n                    <path stroke=\"darkgreen\" transform=\"\" strokeWidth=\"6\" id=\"path8\"\r\n                        d=\"M23,400 l0,350 a10,10 90 0 0 10,10 l300,0 a10,10 90 0 0 10,-10 l0,-350 a10,10 90 0 0 -10,-10 l-300,0 a10,10 90 0 0 -10,10 \"\r\n                        fill=\"black\" strokeLinecap=\"butt\" strokeLinejoin=\"miter\"></path>\r\n                    <g id=\"IME\" transform=\"\">\r\n                        <g transform=\"\" id=\"TORQUE-IME\">\r\n                                <CountUpWrapper end={((this.props.engine || {}).torque || {}).leftEngine/10 || 0}\r\n                                                decimals={0}>\r\n                                    {\r\n                                        ({countUpRef}) => (\r\n                                            <text ref={countUpRef} className=\"carro-overlay-value\" stroke=\"none\"  id=\"text42\"\r\n                                            strokeWidth=\"1px\" x=\"208px\" textRendering=\"geometricPrecision\" y=\"566px\" fontFamily=\"Exo\"\r\n                                            fill=\"whitesmoke\" fontSize=\"25px\" transform=\"\" textAnchor=\"end\"></text>\r\n                                        )\r\n                                    }\r\n                                </CountUpWrapper>\r\n                                <text stroke=\"none\"\r\n                                    id=\"text43\" strokeWidth=\"1px\" x=\"216px\" className=\"carro-overlay-value\"\r\n                                textRendering=\"geometricPrecision\" y=\"566px\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"25px\"\r\n                                transform=\"\" textAnchor=\"start\">%</text><text stroke=\"none\"  id=\"text44\"\r\n                                strokeWidth=\"1px\" x=\"123px\" fontWeight=\"bold\" textRendering=\"geometricPrecision\"\r\n                                fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"30px\" y=\"533px\" transform=\"\"\r\n                                textAnchor=\"start\">TORQUE</text>\r\n                            <image x=\"42px\" height=\"70\" y=\"504px\" id=\"image10\"\r\n                                xlinkHref=\"/static/SVGs/gears.svg\"\r\n                                xlinkRole=\"/static/SVGs/gears.svg\"\r\n                                width=\"70\" preserveAspectRatio=\"xMidYMid meet\" transform=\"\"></image>\r\n                        </g>\r\n                        <g transform=\"\" id=\"T1-IME\">\r\n                                <CountUpWrapper end={((this.props.inverters || {}).temperature || {}).left1/10 || 0}\r\n                                                decimals={0}>\r\n                                    {\r\n                                        ({countUpRef}) => (\r\n                                            <text ref={countUpRef} className=\"carro-overlay-value\" stroke=\"none\"  id=\"text39\" strokeWidth=\"1px\"\r\n                                            x=\"99px\" textRendering=\"geometricPrecision\" y=\"645px\" fontFamily=\"Exo\" fill=\"whitesmoke\"\r\n                                            fontSize=\"25px\" transform=\"\" textAnchor=\"end\"></text>\r\n                                        )\r\n                                    }\r\n                                </CountUpWrapper>\r\n                                <text stroke=\"none\"\r\n                                    id=\"text40\" strokeWidth=\"1px\" x=\"105px\" className=\"carro-overlay-value\"\r\n                                textRendering=\"geometricPrecision\" y=\"645px\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"25px\"\r\n                                transform=\"\" textAnchor=\"start\">ºC</text><text stroke=\"none\" \r\n                                id=\"text41\" strokeWidth=\"1px\" x=\"32px\" fontWeight=\"bold\" textRendering=\"geometricPrecision\"\r\n                                fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"30px\" y=\"612px\" transform=\"\"\r\n                                textAnchor=\"start\">TEMPERATURA 1</text>\r\n                            <image x=\"268px\" height=\"70px\" y=\"585px\" id=\"image11\"\r\n                                xlinkHref=\"/static/SVGs/termometer.svg\"\r\n                                xlinkRole=\"/static/SVGs/termometer.svg\"\r\n                                width=\"70px\" preserveAspectRatio=\"xMidYMid meet\" transform=\"\"></image>\r\n                        </g>\r\n                        <g transform=\"\" id=\"T2-IME\">\r\n                                <CountUpWrapper end={((this.props.inverters || {}).temperature || {}).left2/10 || 0}\r\n                                                decimals={0}>\r\n                                    {\r\n                                        ({countUpRef}) => (\r\n                                            <text ref={countUpRef} className=\"carro-overlay-value\" stroke=\"none\"  id=\"text36\" strokeWidth=\"1px\"\r\n                                            x=\"271px\" textRendering=\"geometricPrecision\" y=\"738px\" fontFamily=\"Exo\" fill=\"whitesmoke\"\r\n                                            fontSize=\"25px\" transform=\"\" textAnchor=\"end\"></text>\r\n                                        )\r\n                                    }\r\n                                </CountUpWrapper>\r\n                                <text stroke=\"none\" className=\"carro-overlay-value\"\r\n                                    id=\"text37\" strokeWidth=\"1px\" x=\"303px\"\r\n                                textRendering=\"geometricPrecision\" y=\"738px\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"25px\"\r\n                                transform=\"\" textAnchor=\"end\">ºC</text><text stroke=\"none\"  id=\"text38\"\r\n                                strokeWidth=\"1px\" x=\"83px\" fontWeight=\"bold\" textRendering=\"geometricPrecision\" fontFamily=\"Exo\"\r\n                                fill=\"whitesmoke\" fontSize=\"30px\" y=\"702px\" transform=\"\" textAnchor=\"start\">TEMPERATURA 2</text>\r\n                            <image x=\"26px\" height=\"70px\" y=\"675px\" id=\"image12\"\r\n                                xlinkHref=\"/static/SVGs/termometer.svg\"\r\n                                xlinkRole=\"/static/SVGs/termometer.svg\"\r\n                                width=\"70px\" preserveAspectRatio=\"xMidYMid meet\" transform=\"\"></image>\r\n                        </g>\r\n                        <line stroke=\"#858787\" y1=\"489px\" strokeWidth=\"3px\" x1=\"34px\" id=\"line6\" y2=\"489px\" x2=\"329px\" transform=\"\"\r\n                            visibility=\"visible\"></line>\r\n                        <g transform=\"\" id=\"IME-TITLE\"><text stroke=\"none\" id=\"text33\"\r\n                                strokeWidth=\"1px\" x=\"36px\" fontWeight=\"bold\" textRendering=\"geometricPrecision\" fontFamily=\"Exo\"\r\n                                fill=\"whitesmoke\" fontSize=\"33px\" y=\"434px\" transform=\"\"\r\n                                textAnchor=\"start\">INVERSOR/MOTOR</text><text stroke=\"none\" \r\n                                id=\"text34\" strokeWidth=\"1px\" x=\"34px\" fontWeight=\"bold\" textRendering=\"geometricPrecision\"\r\n                                fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"33px\" y=\"472px\" transform=\"\"\r\n                                textAnchor=\"start\">ESQUERDO</text></g>\r\n                    </g>\r\n                    <circle stroke=\"whitesmoke\" cx=\"526px\" strokeWidth=\"3px\" id=\"circle2\" cy=\"833px\" fill=\"darkgreen\" r=\"21px\"\r\n                        transform=\"\"></circle>\r\n                    <path stroke=\"darkgreen\" id=\"path10\" strokeWidth=\"2px\"\r\n                        d=\"M524,834 l-80,0 a10,10 90 0 1 -10,-10 l0,-250 a10,10 90 0 0 -10,-10 l-80,0 \" fill=\"none\" transform=\"\">\r\n                    </path>\r\n                </g>\r\n                <g transform=\"\" id=\"roda-bl\">\r\n                    <polygon points=\"436.552521,892.983032 436.552521,1070.48291 441.552521,1063.98291 441.552521,898.483032\"\r\n                        stroke=\"none\" strokeWidth=\"3px\" fill={colorScale(((this.props.tires || {}).temperature || {}).backLeft/100)} transform=\"rotate(-1 440 984.75)\" id=\"polygon4\"></polygon>\r\n                    <polygon points=\"379.061279,891.979614 379.061279,1069.479614 384.061279,1062.979614 384.061279,897.479614\"\r\n                        stroke=\"none\" strokeWidth=\"3px\" id=\"polygon7\" fill={colorScale(((this.props.tires || {}).temperature || {}).backLeft/100)} transform=\"rotate(179 382.043732 981.738159)\">\r\n                    </polygon>\r\n                    <rect stroke=\"none\" x=\"387.5px\" height=\"179.5px\" y=\"893px\" strokeWidth=\"3px\" width=\"46px\" id=\"rect4\"\r\n                        fill={colorScale(((this.props.tires || {}).temperature || {}).backLeft/100)} transform=\"rotate(-1 410.5 982.75)\"></rect>\r\n                </g>\r\n                <g transform=\"\" id=\"roda-fl\">\r\n                    <polygon points=\"380,340.5 380,518 385,511.5 385,346\" stroke=\"none\" strokeWidth=\"3px\" fill={colorScale(((this.props.tires || {}).temperature || {}).frontLeft/100)}\r\n                        transform=\"rotate(180 383 427.25)\" id=\"polygon8\"></polygon>\r\n                    <polygon points=\"437,337 437,514.5 442,508 442,342.5\" stroke=\"none\" strokeWidth=\"3px\" fill={colorScale(((this.props.tires || {}).temperature || {}).frontLeft/100)} transform=\"\"\r\n                        id=\"polygon3\"></polygon>\r\n                    <rect stroke=\"none\" x=\"388px\" height=\"179.5px\" y=\"336.5px\" id=\"rect1\" strokeWidth=\"3px\" width=\"46px\"\r\n                        fill={colorScale(((this.props.tires || {}).temperature || {}).frontLeft/100)} transform=\"\"></rect>\r\n                </g>\r\n                <g transform=\"\" id=\"roda-fr\">\r\n                    <polygon points=\"846.5,336.5 846.5,514 851.5,507.5 851.5,342\" stroke=\"none\" strokeWidth=\"3px\" fill={colorScale(((this.props.tires || {}).temperature || {}).frontRight/100)}\r\n                        transform=\"\" id=\"polygon5\"></polygon>\r\n                    <rect stroke=\"none\" x=\"797.5px\" height=\"179px\" y=\"337px\" strokeWidth=\"3px\" id=\"rect3\" width=\"46px\" fill={colorScale(((this.props.tires || {}).temperature || {}).frontRight/100)}\r\n                        transform=\"\"></rect>\r\n                    <polygon points=\"-29,339.5 -29,517 -24,510.5 -24,345\" stroke=\"none\" id=\"polygon1\" strokeWidth=\"3px\"\r\n                        fill={colorScale(((this.props.tires || {}).temperature || {}).frontRight/100)} transform=\"rotate(180 383 427.25)\"></polygon>\r\n                </g>\r\n                <g transform=\"\" id=\"roda-br\">\r\n                    <polygon points=\"847,892 847,1069.5 852,1063 852,897.5\" stroke=\"none\" strokeWidth=\"3px\" id=\"polygon2\"\r\n                        fill={colorScale(((this.props.tires || {}).temperature || {}).backRight/100)} transform=\"\"></polygon>\r\n                    <polygon points=\"-29.5,-216 -29.5,-38.5 -24.5,-45 -24.5,-210.5\" stroke=\"none\" strokeWidth=\"3px\" id=\"polygon6\"\r\n                        fill={colorScale(((this.props.tires || {}).temperature || {}).backRight/100)} transform=\"rotate(180 383 427.25)\"></polygon>\r\n                    <rect stroke=\"none\" x=\"798px\" height=\"180.5px\" y=\"891.5px\" strokeWidth=\"3px\" id=\"rect2\" width=\"46px\"\r\n                        fill={colorScale(((this.props.tires || {}).temperature || {}).backRight/100)} transform=\"\"></rect>\r\n                </g>\r\n                <g transform=\"\" id=\"PTE-INFO\">\r\n                    <path stroke=\"darkgreen\" strokeWidth=\"6\" id=\"path9\"\r\n                        d=\"M25,808 l0,250 a10,10 90 0 0 10,10 l300,0 a10,10 90 0 0 10,-10 l0,-250 a10,10 90 0 0 -10,-10 l-300,0 a10,10 90 0 0 -10,10 \"\r\n                        fill=\"black\" strokeLinecap=\"butt\" transform=\"\" strokeLinejoin=\"miter\"></path>\r\n                    <path stroke=\"darkgreen\" strokeWidth=\"2px\" id=\"path6\" d=\"M412,919 l0,-80 a10,10 90 0 0 -10,-10 l-60,0 \"\r\n                        fill=\"none\" transform=\"\"></path>\r\n                    <circle stroke=\"#000000\" transform=\"\" strokeWidth=\"0px\" id=\"circle1\" cy=\"915px\" fill=\"darkgreen\" r=\"11px\"\r\n                        cx=\"412px\"></circle>\r\n                    <g id=\"PTE\" transform=\"\">\r\n                        <line stroke=\"#858787\" y1=\"900px\" strokeWidth=\"3px\" x1=\"37px\" id=\"line4\" y2=\"900px\" x2=\"332px\"\r\n                            transform=\"\"></line>\r\n                        <g transform=\"\" id=\"VEL-TE\">\r\n                            <image x=\"44px\" height=\"70px\" y=\"916px\" id=\"image7\"\r\n                                xlinkHref=\"/static/SVGs/speedometer.svg\"\r\n                                xlinkRole=\"/static/SVGs/speedometer.svg\"\r\n                                width=\"70px\" preserveAspectRatio=\"xMidYMid meet\" transform=\"\"></image>\r\n                                <CountUpWrapper end={((this.props.tires || {}).speed || {}).backLeft || 0}\r\n                                                decimals={0}>\r\n                                    {\r\n                                        ({countUpRef}) => (\r\n                                            <text ref={countUpRef} className=\"carro-overlay-value\" stroke=\"none\"\r\n                                                strokeWidth=\"1px\" x=\"231px\" textRendering=\"geometricPrecision\"\r\n                                            y=\"975px\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"25px\" transform=\"\" textAnchor=\"end\"\r\n                                            id=\"text25\"></text>\r\n                                        )\r\n                                    }\r\n                                </CountUpWrapper>\r\n                                <text stroke=\"none\"  className=\"carro-overlay-value\" strokeWidth=\"1px\" x=\"271px\"\r\n                                textRendering=\"geometricPrecision\" y=\"976px\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"25px\"\r\n                                transform=\"\" textAnchor=\"middle\" id=\"text26\">RPM</text><text stroke=\"none\"\r\n                                    id=\"text27\" strokeWidth=\"1px\" x=\"210px\" fontWeight=\"bold\"\r\n                                textRendering=\"geometricPrecision\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"30px\" y=\"945px\"\r\n                                transform=\"\" textAnchor=\"middle\">VELOCIDADE</text>\r\n                        </g>\r\n                        <g transform=\"\" id=\"PTE-TEXT\"><text stroke=\"none\" strokeWidth=\"1px\" x=\"39px\"\r\n                                fontWeight=\"bold\" textRendering=\"geometricPrecision\" fontFamily=\"Exo\" fill=\"whitesmoke\"\r\n                                fontSize=\"35px\" y=\"882px\" transform=\"\" textAnchor=\"start\" id=\"text28\">ESQUERDO</text><text\r\n                                stroke=\"none\" strokeWidth=\"1px\" x=\"39px\" fontWeight=\"bold\"\r\n                                textRendering=\"geometricPrecision\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"35px\" y=\"842px\"\r\n                                transform=\"\" textAnchor=\"start\" id=\"text29\">PNEU TRASEIRO</text></g>\r\n                        <g transform=\"\" id=\"TEMP-TE\"><text stroke=\"none\"  strokeWidth=\"1px\" x=\"266px\"\r\n                                fontWeight=\"bold\" textRendering=\"geometricPrecision\" fontFamily=\"Exo\" fill=\"whitesmoke\"\r\n                                fontSize=\"30px\" y=\"1020px\" transform=\"\" textAnchor=\"end\" id=\"text30\">TEMPERATURA</text>\r\n                                <CountUpWrapper end={((this.props.tires || {}).temperature || {}).backLeft/100 || 0}\r\n                                                decimals={0}>\r\n                                    {\r\n                                        ({countUpRef}) => (\r\n                                            <text ref={countUpRef} className=\"carro-overlay-value\"\r\n                                            stroke=\"none\"  strokeWidth=\"1px\" x=\"101px\"\r\n                                            textRendering=\"geometricPrecision\" y=\"1051px\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"25px\"\r\n                                            transform=\"\" textAnchor=\"end\" id=\"text31\"></text>\r\n                                        )\r\n                                    }\r\n                                </CountUpWrapper>\r\n                                <text stroke=\"none\"  className=\"carro-overlay-value\"\r\n                                strokeWidth=\"1px\" x=\"137px\" textRendering=\"geometricPrecision\" y=\"1051px\" fontFamily=\"Exo\"\r\n                                fill=\"whitesmoke\" fontSize=\"25px\" transform=\"\" textAnchor=\"end\" id=\"text32\">ºC</text>\r\n                            <image x=\"253px\" height=\"70px\" y=\"989px\" id=\"image8\"\r\n                                xlinkHref=\"/static/SVGs/termometer.svg\"\r\n                                xlinkRole=\"/static/SVGs/termometer.svg\"\r\n                                width=\"70px\" preserveAspectRatio=\"xMidYMid meet\" transform=\"\"></image>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n                <g transform=\"\" id=\"PDE-INFO\">\r\n                    <circle stroke=\"#000000\" cx=\"412px\" strokeWidth=\"0px\" id=\"circle4\" cy=\"353px\" fill=\"darkgreen\" r=\"11px\"\r\n                        transform=\"\"></circle>\r\n                    <path stroke=\"darkgreen\" id=\"path1\" strokeWidth=\"2px\" d=\"M412,357 l0,-253 a10,10 90 0 0 -10,-10 l-60,0 \"\r\n                        fill=\"none\" transform=\"\"></path>\r\n                    <path stroke=\"darkgreen\" strokeWidth=\"6\" id=\"path4\"\r\n                        d=\"M21,88 l0,250 a10,10 90 0 0 10,10 l300,0 a10,10 90 0 0 10,-10 l0,-250 a10,10 90 0 0 -10,-10 l-300,0 a10,10 90 0 0 -10,10 \"\r\n                        fill=\"black\" strokeLinecap=\"butt\" transform=\"\" strokeLinejoin=\"miter\"></path>\r\n                    <g id=\"PDE\" transform=\"\">\r\n                        <g transform=\"\" id=\"PDE-TEXT\"><text stroke=\"none\" id=\"text10\"\r\n                                strokeWidth=\"1px\" x=\"36px\" fontWeight=\"bold\" textRendering=\"geometricPrecision\" fontFamily=\"Exo\"\r\n                                fill=\"whitesmoke\" fontSize=\"35px\" y=\"162px\" transform=\"\" textAnchor=\"start\">ESQUERDO</text><text\r\n                                stroke=\"none\" id=\"text9\" strokeWidth=\"1px\" x=\"180px\"\r\n                                fontWeight=\"bold\" textRendering=\"geometricPrecision\" fontFamily=\"Exo\" fill=\"whitesmoke\"\r\n                                fontSize=\"35px\" y=\"122px\" transform=\"\" textAnchor=\"middle\">PNEU DIANTEIRO</text></g>\r\n                        <line stroke=\"#858787\" y1=\"175px\" strokeWidth=\"3px\" x1=\"32px\" id=\"line2\" y2=\"175px\" x2=\"327px\"\r\n                            transform=\"\"></line>\r\n                        <g transform=\"\" id=\"VEL-DE\">\r\n                            <image x=\"40px\" height=\"70px\" y=\"186px\" id=\"image4\"\r\n                                xlinkHref=\"/static/SVGs/speedometer.svg\"\r\n                                xlinkRole=\"/static/SVGs/speedometer.svg\"\r\n                                width=\"70px\" preserveAspectRatio=\"xMidYMid meet\" transform=\"\"></image>\r\n                                <CountUpWrapper end={((this.props.tires || {}).speed || {}).frontLeft/10/3.6/(52.07/100*Math.PI)*60 || 0}\r\n                                                decimals={0}>\r\n                                    {\r\n                                        ({countUpRef}) => (\r\n                                            <text ref={countUpRef} className=\"carro-overlay-value\" stroke=\"none\"\r\n                                                id=\"text12\" strokeWidth=\"1px\" x=\"228px\"\r\n                                            textRendering=\"geometricPrecision\" y=\"251px\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"25px\"\r\n                                            transform=\"\" textAnchor=\"end\"></text>\r\n                                        )\r\n                                    }\r\n                                </CountUpWrapper>\r\n                                <text stroke=\"none\"  id=\"text13\" className=\"carro-overlay-value\"\r\n                                strokeWidth=\"1px\" x=\"268px\" textRendering=\"geometricPrecision\" y=\"252px\" fontFamily=\"Exo\"\r\n                                fill=\"whitesmoke\" fontSize=\"25px\" transform=\"\" textAnchor=\"middle\">RPM</text><text stroke=\"none\"\r\n                                    id=\"text11\" strokeWidth=\"1px\" x=\"207px\" fontWeight=\"bold\"\r\n                                textRendering=\"geometricPrecision\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"30px\" y=\"221px\"\r\n                                transform=\"\" textAnchor=\"middle\">VELOCIDADE</text>\r\n                        </g>\r\n                        <g transform=\"\" id=\"TEMP-DE\"><text stroke=\"none\"  id=\"text14\" strokeWidth=\"1px\"\r\n                                x=\"263px\" fontWeight=\"bold\" textRendering=\"geometricPrecision\" fontFamily=\"Exo\" fill=\"whitesmoke\"\r\n                                fontSize=\"30px\" y=\"296px\" transform=\"\" textAnchor=\"end\">TEMPERATURA</text>\r\n                                <CountUpWrapper end={((this.props.tires || {}).temperature || {}).frontLeft/100 || 0}\r\n                                                decimals={0}>\r\n                                    {\r\n                                        ({countUpRef}) => (\r\n                                            <text ref={countUpRef} className=\"carro-overlay-value\" stroke=\"none\"\r\n                                                id=\"text15\" strokeWidth=\"1px\" x=\"98px\"\r\n                                            textRendering=\"geometricPrecision\" y=\"327px\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"25px\"\r\n                                            transform=\"\" textAnchor=\"end\"></text>\r\n                                        )\r\n                                    }\r\n                                </CountUpWrapper>\r\n                                <text stroke=\"none\"  id=\"text16\" className=\"carro-overlay-value\"\r\n                                strokeWidth=\"1px\" x=\"134px\" textRendering=\"geometricPrecision\" y=\"327px\" fontFamily=\"Exo\"\r\n                                fill=\"whitesmoke\" fontSize=\"25px\" transform=\"\" textAnchor=\"end\">ºC</text>\r\n                            <image x=\"252px\" height=\"70px\" y=\"262px\" id=\"image6\"\r\n                                xlinkHref=\"/static/SVGs/termometer.svg\"\r\n                                xlinkRole=\"/static/SVGs/termometer.svg\"\r\n                                width=\"70px\" preserveAspectRatio=\"xMidYMid meet\" transform=\"\"></image>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n                <g transform=\"\" id=\"PDD-INFO\">\r\n                    <path stroke=\"darkgreen\" strokeWidth=\"2px\" id=\"path5\" d=\"M823,352 l0,-253 a10,10 90 0 1 10,-10 l60,0 \"\r\n                        fill=\"none\" transform=\"\"></path>\r\n                    <path stroke=\"darkgreen\" strokeWidth=\"6\" id=\"path3\"\r\n                        d=\"M894,88 l0,250 a10,10 90 0 0 10,10 l300,0 a10,10 90 0 0 10,-10 l0,-250 a10,10 90 0 0 -10,-10 l-300,0 a10,10 90 0 0 -10,10 \"\r\n                        fill=\"black\" strokeLinecap=\"butt\" transform=\"\" strokeLinejoin=\"miter\"></path>\r\n                    <g id=\"PDD\" transform=\"\">\r\n                        <g transform=\"\" id=\"TEMP-PDD\">\r\n                            <image x=\"1124px\" height=\"70\" y=\"265px\" id=\"image3\"\r\n                                xlinkHref=\"/static/SVGs/termometer.svg\"\r\n                                xlinkRole=\"/static/SVGs/termometer.svg\"\r\n                                width=\"70\" preserveAspectRatio=\"xMidYMid meet\" transform=\"\"></image><text stroke=\"none\"\r\n                                    id=\"text2\" strokeWidth=\"1px\" x=\"1131px\" fontWeight=\"bold\"\r\n                                textRendering=\"geometricPrecision\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"30px\" y=\"292px\"\r\n                                transform=\"\" textAnchor=\"end\">TEMPERATURA</text>\r\n                                <CountUpWrapper end={((this.props.tires || {}).temperature || {}).frontRight/10/3.6/(52.07/100*Math.PI)*60 || 0}\r\n                                                decimals={0}>\r\n                                    {\r\n                                        ({countUpRef}) => (\r\n                                            <text ref={countUpRef} className=\"carro-overlay-value\" stroke=\"none\" \r\n                                            id=\"text4\" strokeWidth=\"1px\" x=\"966px\" textRendering=\"geometricPrecision\" fontFamily=\"Exo\"\r\n                                            y=\"323px\" fill=\"whitesmoke\" fontSize=\"25px\" transform=\"\" textAnchor=\"end\"></text>\r\n                                        )\r\n                                    }\r\n                                </CountUpWrapper>\r\n                                <text\r\n                                stroke=\"none\"  id=\"text5\" strokeWidth=\"1px\" x=\"1002px\" className=\"carro-overlay-value\"\r\n                                textRendering=\"geometricPrecision\" y=\"323px\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"25px\"\r\n                                transform=\"\" textAnchor=\"end\">ºC</text>\r\n                        </g>\r\n                        <g transform=\"\" id=\"VEL-DD\">\r\n                            <image x=\"907px\" height=\"70\" y=\"185px\" id=\"image2\"\r\n                                xlinkHref=\"/static/SVGs/speedometer.svg\"\r\n                                xlinkRole=\"/static/SVGs/speedometer.svg\"\r\n                                width=\"70\" preserveAspectRatio=\"xMidYMid meet\" transform=\"\"></image>\r\n                            <line stroke=\"#858787\" y1=\"175px\" x1=\"908px\" strokeWidth=\"3px\" y2=\"175px\" x2=\"1203px\" transform=\"\"\r\n                                id=\"line3\"></line><text stroke=\"none\"  id=\"text6\" strokeWidth=\"1px\"\r\n                                x=\"1073px\" fontWeight=\"bold\" textRendering=\"geometricPrecision\" fontFamily=\"Exo\"\r\n                                fill=\"whitesmoke\" fontSize=\"30px\" y=\"217px\" transform=\"\"\r\n                                textAnchor=\"middle\">VELOCIDADE</text>\r\n                                <CountUpWrapper end={((this.props.tires || {}).speed || {}).frontRight/10 || 0}\r\n                                                decimals={0}>\r\n                                    {\r\n                                        ({countUpRef}) => (\r\n                                            <text ref={countUpRef} className=\"carro-overlay-value\" stroke=\"none\"  id=\"text7\"\r\n                                            strokeWidth=\"1px\" x=\"1098px\" textRendering=\"geometricPrecision\" y=\"247px\" fontFamily=\"Exo\"\r\n                                            fill=\"whitesmoke\" fontSize=\"25px\" transform=\"\" textAnchor=\"end\"></text>\r\n                                        )\r\n                                    }\r\n                                </CountUpWrapper>\r\n                                <text stroke=\"none\" className=\"carro-overlay-value\"\r\n                                    id=\"text8\" strokeWidth=\"1px\" x=\"1138px\"\r\n                                textRendering=\"geometricPrecision\" y=\"248px\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"25px\"\r\n                                transform=\"\" textAnchor=\"middle\">RPM</text>\r\n                        </g>\r\n                        <g transform=\"\" id=\"PDD-TEXT\"><text stroke=\"none\" id=\"text1\" strokeWidth=\"1px\"\r\n                                x=\"1050px\" fontWeight=\"bold\" textRendering=\"geometricPrecision\" fontFamily=\"Exo\"\r\n                                fill=\"whitesmoke\" fontSize=\"35px\" y=\"122px\" transform=\"\" textAnchor=\"middle\">PNEU\r\n                                DIANTEIRO</text><text stroke=\"none\" id=\"text3\" strokeWidth=\"1px\"\r\n                                x=\"1124px\" fontWeight=\"bold\" textRendering=\"geometricPrecision\" fontFamily=\"Exo\"\r\n                                fill=\"whitesmoke\" fontSize=\"35px\" y=\"163px\" transform=\"\" textAnchor=\"middle\">DIREITO</text></g>\r\n                        <line stroke=\"#858787\" y1=\"175px\" id=\"line1\" x1=\"908px\" strokeWidth=\"3px\" y2=\"175px\" x2=\"1203px\"\r\n                            transform=\"\"></line>\r\n                    </g>\r\n                    <circle stroke=\"#000000\" strokeWidth=\"0px\" cy=\"353px\" id=\"circle5\" fill=\"darkgreen\" r=\"11px\" cx=\"823px\"\r\n                        transform=\"\"></circle>\r\n                </g>\r\n                <g transform=\"\" id=\"PTD-INFO\">\r\n                    <path stroke=\"darkgreen\" strokeWidth=\"2px\" id=\"path7\" d=\"M824,907 l0,-80 a10,10 90 0 1 10,-10 l60,0 \"\r\n                        fill=\"none\" transform=\"\"></path>\r\n                    <path stroke=\"darkgreen\" strokeLinejoin=\"miter\" strokeWidth=\"6\" id=\"path2\"\r\n                        d=\"M893,804 l0,250 a10,10 90 0 0 10,10 l300,0 a10,10 90 0 0 10,-10 l0,-250 a10,10 90 0 0 -10,-10 l-300,0 a10,10 90 0 0 -10,10 \"\r\n                        fill=\"black\" strokeLinecap=\"butt\" transform=\"\"></path>\r\n                    <circle stroke=\"#000000\" cx=\"824px\" strokeWidth=\"0px\" id=\"circle6\" cy=\"911px\" fill=\"darkgreen\" r=\"11px\"\r\n                        transform=\"\"></circle>\r\n                    <g transform=\"\" id=\"PTD\">\r\n                        <line stroke=\"#858787\" y1=\"899px\" strokeWidth=\"3px\" x1=\"907px\" id=\"line5\" y2=\"899px\" x2=\"1202px\"\r\n                            transform=\"\"></line>\r\n                        <g transform=\"\" id=\"VEL-TD\">\r\n                            <image x=\"914px\" height=\"70px\" y=\"912px\" id=\"image5\"\r\n                                xlinkHref=\"/static/SVGs/speedometer.svg\"\r\n                                xlinkRole=\"/static/SVGs/speedometer.svg\"\r\n                                width=\"70px\" preserveAspectRatio=\"xMidYMid meet\" transform=\"\"></image>\r\n                                <CountUpWrapper end={((this.props.tires || {}).speed || {}).backRight || 0}\r\n                                                decimals={0}>\r\n                                    {\r\n                                        ({countUpRef}) => (\r\n                                            <text ref={countUpRef} className=\"carro-overlay-value\" stroke=\"none\"\r\n                                                id=\"text19\" strokeWidth=\"1px\" x=\"1101px\"\r\n                                            textRendering=\"geometricPrecision\" y=\"974px\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"25px\"\r\n                                            transform=\"\" textAnchor=\"end\"></text>\r\n                                        )\r\n                                    }\r\n                                </CountUpWrapper>\r\n                                <text stroke=\"none\"  id=\"text20\" className=\"carro-overlay-value\"\r\n                                strokeWidth=\"1px\" x=\"1141px\" textRendering=\"geometricPrecision\" y=\"975px\" fontFamily=\"Exo\"\r\n                                fill=\"whitesmoke\" fontSize=\"25px\" transform=\"\" textAnchor=\"middle\">RPM</text><text stroke=\"none\"\r\n                                    id=\"text21\" strokeWidth=\"1px\" x=\"1080px\" fontWeight=\"bold\"\r\n                                textRendering=\"geometricPrecision\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"30px\" y=\"944px\"\r\n                                transform=\"\" textAnchor=\"middle\">VELOCIDADE</text>\r\n                        </g>\r\n                        <g id=\"PTD-TEXT\" transform=\"\"><text stroke=\"none\" id=\"text17\"\r\n                                strokeWidth=\"1px\" x=\"1180px\" fontWeight=\"bold\" textRendering=\"geometricPrecision\"\r\n                                fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"35px\" y=\"881px\" transform=\"\"\r\n                                textAnchor=\"end\">DIREITO</text><text stroke=\"none\" id=\"text18\"\r\n                                strokeWidth=\"1px\" x=\"909px\" fontWeight=\"bold\" textRendering=\"geometricPrecision\"\r\n                                fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"35px\" y=\"841px\" transform=\"\" textAnchor=\"start\">PNEU\r\n                                TRASEIRO</text></g>\r\n                        <g transform=\"\" id=\"TEMP-TD\">\r\n                            <image x=\"1122px\" height=\"70px\" y=\"988px\" id=\"image9\"\r\n                                xlinkHref=\"/static/SVGs/termometer.svg\"\r\n                                xlinkRole=\"/static/SVGs/termometer.svg\"\r\n                                width=\"70px\" preserveAspectRatio=\"xMidYMid meet\" transform=\"\"></image><text stroke=\"none\"\r\n                                    id=\"text22\" strokeWidth=\"1px\" x=\"1136px\" fontWeight=\"bold\"\r\n                                textRendering=\"geometricPrecision\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"30px\" y=\"1019px\"\r\n                                transform=\"\" textAnchor=\"end\">TEMPERATURA</text>\r\n                                <CountUpWrapper end={((this.props.tires || {}).temperature || {}).backRight/100 || 0}\r\n                                                decimals={0}>\r\n                                    {\r\n                                        ({countUpRef}) => (\r\n                                            <text ref={countUpRef} className=\"carro-overlay-value\" stroke=\"none\" \r\n                                            id=\"text23\" strokeWidth=\"1px\" x=\"971px\" textRendering=\"geometricPrecision\" y=\"1050px\"\r\n                                            fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"25px\" transform=\"\" textAnchor=\"end\"></text>\r\n                                        )\r\n                                    }\r\n                                </CountUpWrapper>\r\n                                <text className=\"carro-overlay-value\"\r\n                                stroke=\"none\"  id=\"text24\" strokeWidth=\"1px\" x=\"1007px\"\r\n                                textRendering=\"geometricPrecision\" y=\"1050px\" fontFamily=\"Exo\" fill=\"whitesmoke\" fontSize=\"25px\"\r\n                                transform=\"\" textAnchor=\"end\">ºC</text>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default CarOverlay;","//PARA REGISTRAR UM NOVO DADO:\r\n//primeiramente, em TypeFields, adicione mais uma linha, incrementando o índice em 1 e o nome do dado em camelCase\r\n//depois, adicione mais uma linha em availableField, com o index sendo o mesmo índice do TypeFields.\r\n//se for um dado que tenha possibilidade de ser plotado em tempo real, adicione-o em availablePlotOPtion.\r\n\r\nconst isOnClient = !!(\r\n    (typeof require.extensions === 'undefined' || typeof window !== 'undefined' &&\r\n    window.document && window.document.createElement\r\n    && Object.keys(process.env).length === 0 && process.env.constructor === Object)\r\n  );\r\n\r\nconst fs = isOnClient ? null : require('fs');\r\n\r\nif (typeof require.extensions !== 'undefined')\r\n    require.extensions['.properties'] = function (module, filename) {\r\n        module.exports = fs.readFileSync(filename, 'utf8');\r\n    }\r\n\r\nconst configFileName = 'config.properties';\r\nlet pr = require('../config.properties');\r\nlet file = typeof pr == 'object' ? pr.default : pr;\r\n// let file = properties;\r\nif (!isOnClient) {\r\n    if (file === '') {\r\n        const configTemplate = `# TIPO DE OPERAÇÃO\r\n# Valores possíveis:\r\n# BYTES  - Recebimento por Xbee em formato de bytes\r\n# STRING - Recebimento por Xbee ou NRF em formato de string\r\n# API_BYTES  - Recebimento por Xbee em API mode por bytes\r\n# API_STRING - Recebimento por Xbee em API mode por string\r\n# [default = STRING]\r\noperationType = STRING\r\n\r\n# [string] [default = 0013A20041932DC6] Endereço 64bits do xbee transmissor.\r\nxbeeSourceAddress = 0013A20041932DC6\r\n\r\n# PORTA SERIAL\r\n\r\n# [string] [default = ] Nome da porta serial que o dispositivo receptor se encontra. Deixe vazio para identificação automática.\r\nportName = \r\n# [string] [default = ignore-ports.txt] Nome do arquivo de texto, na pasta raiz, contendo nome de portas para serem ignoradas na identificação automática de porta, separados por linha.\r\nignorePortsFile = ignore-ports.txt\r\n\r\n# NOTIFICAÇÕES\r\n\r\n# [bool] [default = true] Ativar ou desativar notificações\r\nshouldNotify = true\r\n# [number] [default = 10] Limite percentual para acionar a notificação que alerta da proximidade do valor mínimo/máximo\r\npercentageLimitTolerance = 10\r\n# [number] [default = 30000] Tempo de timeout em milissegundos para a notificação ser reacionada caso a condição não mude\r\nnotificationExpirationTimeout = 30000\r\n\r\n# DATALOG\r\n\r\n# [string] [default = ./datalog/] Caminho para a escrita do datalog. O DIRETÓRIO NÃO É CRIADO, ENTAÃO DEVE, OBRIGATORIAMENTE, EXISTIR.\r\ndatalogFilePath = ./datalog/\r\n# [bool] [default = true] Ativar ou desativar o datalog\r\nshouldWrite = true\r\n# [number]  [default = 30000] Tempo, em milissegundos, de quanto esperar sem receber dados até criar um novo arquivo de texto\r\ndatalogTimeout = 30000\r\n# [bool] [default = false] Incluir timestamp (quantidade de milissegundos desde 1/1/1970 00:00) como primeiro item de cada linha\r\nincludeTimestamp = false\r\n\r\n# PLOTAGEM EM TEMPO REAL\r\n\r\n# BANCO DE DADOS LOCAL\r\n# [number]  [default = 60000] Tempo, em milissegundos, de persistência dos dados no banco de dados antes de serem eliminados. Altere esse valor para definir de quanto tempo atrás os dados devem ser exibidos.\r\npersistanceTimeout = 60000\r\n# [number] [default = 1000] Período, em milissegundos, para ser acionada a varredura do banco de dados local para eliminar dados antigos\r\ncleanUpTimeout = 1000\r\n\r\n#PLOTAGEM\r\n# [number] [default = 1] Quantidade desejada de pontos por segundo para serem exibidos no gráfico. VALORES ALTOS PODEM COMPROMETER A INTEGRIDADE DO SERVIDOR E DA REDE.\r\npointsPerSecond = 1\r\n        `;\r\n        const path = require('path');\r\n        const correctedPath = path.join(__dirname, '..', configFileName);\r\n\r\n        fs.writeFileSync(correctedPath, configTemplate);\r\n        file = configTemplate;\r\n    }\r\n}\r\n\r\nconst config = file.split('\\n')\r\n    .filter(value => !value.startsWith('#') && !(value.trim() === ''))\r\n    .reduce( (previous, current) => {\r\n        const opt = current.split('=').map(value => value.trim());\r\n        let definition = opt[1];\r\n        let val;\r\n        if (definition == '') {\r\n            val = undefined;\r\n        } else if (definition == 'true' || definition == 'false') {\r\n            val = definition === 'true';\r\n        } else if (isNaN(definition)) {\r\n            val = definition;\r\n        } else {\r\n            val = definition*1;\r\n        }\r\n        previous[opt[0]] = val;\r\n        return previous;\r\n    },{})\r\n\r\nconst percentageLimitTolerance = config.percentageLimitTolerance;\r\nconst notificationExpirationTimeout = config.notificationExpirationTimeout;\r\nconst shouldNotify = config.shouldNotify;\r\nconst datalogFilePath = config.datalogFilePath;\r\nconst shouldWrite = config.shouldWrite;\r\nconst datalogTimeout = config.datalogTimeout;\r\nconst includeTimestamp = config.includeTimestamp;\r\nconst persistanceTimeout = config.persistanceTimeout;\r\nconst cleanUpTimeout = config.cleanUpTimeout;\r\nconst pointsPerSecond = config.pointsPerSecond;\r\nconst portName = config.portName;\r\nconst ignorePortsFile = config.ignorePortsFile;\r\nconst OperationsType = {\r\n    BYTES: 0,\r\n    STRING: 1,\r\n    API_BYTES: 2,\r\n    API_STRING: 3\r\n}\r\n\r\nconst operationType = OperationsType[config.operationType];\r\n\r\nlet i;\r\nlet xbeeSourceAddressArray = [];\r\nfor (i = 0; i < config.xbeeSourceAddress.length; i+=2) {\r\n    const oct = config.xbeeSourceAddress.substring(i, i+2);\r\n    const hex = parseInt(oct, 16);\r\n    xbeeSourceAddressArray.push(hex);\r\n}\r\nconst xbeeSourceAddress = xbeeSourceAddressArray;\r\n\r\nlet fields = {\r\n    /*baterias geral*/\r\n\r\n    airStatus: {index: 0, name: \"airStatus\", id: 51, pos: 3},\r\n    current0: {index: 1, name: \"current0\", id: 50, pos:0},\r\n    current1: {index: 2, name: \"current1\", id: 50, pos:1},\r\n    current2: {index: 3, name: \"current2\", id: 50, pos:2},\r\n    current3: {index: 4, name: \"current3\", id: 50, pos:3},\r\n    glvVoltage: {index: 5, name: \"glvVoltage\", id: 51, pos: 0},\r\n    chargePercent: {index: 6, name: \"chargePercent\", id: 51, pos: 1},\r\n    totalVoltage: {index: 7, name: \"totalVoltage\", id: 52, pos: 1},\r\n    maxTemperature: {index: 8, name: \"maxTemperature\", id: 52, pos: 3},\r\n    minVoltage: {index: 9, name: \"minVoltage\", id: 53, pos: 0},\r\n\r\n    /*pack 0*/\r\n\r\n    cell000: {index: 10, name: \"cell000\", id: 281, pos: 0},\r\n    cell001: {index: 11, name: \"cell001\", id: 281, pos: 1},\r\n    cell002: {index: 12, name: \"cell002\", id: 281, pos: 2},\r\n    cell003: {index: 13, name: \"cell003\", id: 281, pos: 3},\r\n    cell004: {index: 14, name: \"cell004\", id: 282, pos: 0},\r\n    cell005: {index: 15, name: \"cell005\", id: 282, pos: 1},\r\n    cell006: {index: 16, name: \"cell006\", id: 282, pos: 2},\r\n    cell007: {index: 17, name: \"cell007\", id: 282, pos: 3},\r\n    cell008: {index: 18, name: \"cell008\", id: 283, pos: 0},\r\n    cell009: {index: 19, name: \"cell009\", id: 283, pos: 1},\r\n    cell010: {index: 20, name: \"cell010\", id: 283, pos: 2},\r\n    cell011: {index: 21, name: \"cell011\", id: 283, pos: 3},\r\n    cell012: {index: 22, name: \"cell012\", id: 284, pos: 0},\r\n    temp001: {index: 23, name: \"temp001\", id: 284, pos: 1},\r\n    temp002: {index: 24, name: \"temp002\", id: 284, pos: 2},\r\n    temp003: {index: 25, name: \"temp003\", id: 284, pos: 3},\r\n    temp004: {index: 26, name: \"temp004\", id: 285, pos: 0},\r\n    temp005: {index: 27, name: \"temp005\", id: 285, pos: 1},\r\n\r\n    /*pack 1*/ \r\n\r\n    cell100: {index: 28, name: \"cell100\", id: 276, pos: 0},\r\n    cell101: {index: 29, name: \"cell101\", id: 276, pos: 1},\r\n    cell102: {index: 30, name: \"cell102\", id: 276, pos: 2},\r\n    cell103: {index: 31, name: \"cell103\", id: 276, pos: 3},\r\n    cell104: {index: 32, name: \"cell104\", id: 277, pos: 0},\r\n    cell105: {index: 33, name: \"cell105\", id: 277, pos: 1},\r\n    cell106: {index: 34, name: \"cell106\", id: 277, pos: 2},\r\n    cell107: {index: 35, name: \"cell107\", id: 277, pos: 3},\r\n    cell108: {index: 36, name: \"cell108\", id: 278, pos: 0},\r\n    cell109: {index: 37, name: \"cell109\", id: 278, pos: 1},\r\n    cell110: {index: 38, name: \"cell110\", id: 278, pos: 2},\r\n    cell111: {index: 39, name: \"cell111\", id: 278, pos: 3},\r\n    cell112: {index: 40, name: \"cell112\", id: 279, pos: 0},\r\n    temp101: {index: 41, name: \"temp101\", id: 279, pos: 1},\r\n    temp102: {index: 42, name: \"temp102\", id: 279, pos: 2},\r\n    temp103: {index: 43, name: \"temp103\", id: 279, pos: 3},\r\n    temp104: {index: 44, name: \"temp104\", id: 280, pos: 0},\r\n    temp105: {index: 45, name: \"temp105\", id: 280, pos: 1},\r\n    \r\n    /*pack 2*/ \r\n    \r\n    cell200: {index: 46, name: \"cell200\", id: 271, pos: 0},\r\n    cell201: {index: 47, name: \"cell201\", id: 271, pos: 1},\r\n    cell202: {index: 48, name: \"cell202\", id: 271, pos: 2},\r\n    cell203: {index: 49, name: \"cell203\", id: 271, pos: 3},\r\n    cell204: {index: 50, name: \"cell204\", id: 272, pos: 0},\r\n    cell205: {index: 51, name: \"cell205\", id: 272, pos: 1},\r\n    cell206: {index: 52, name: \"cell206\", id: 272, pos: 2},\r\n    cell207: {index: 53, name: \"cell207\", id: 272, pos: 3},\r\n    cell208: {index: 54, name: \"cell208\", id: 273, pos: 0},\r\n    cell209: {index: 55, name: \"cell209\", id: 273, pos: 1},\r\n    cell210: {index: 56, name: \"cell210\", id: 273, pos: 2},\r\n    cell211: {index: 57, name: \"cell211\", id: 273, pos: 3},\r\n    cell212: {index: 58, name: \"cell212\", id: 274, pos: 0},\r\n    temp201: {index: 59, name: \"temp201\", id: 274, pos: 1},\r\n    temp202: {index: 60, name: \"temp202\", id: 274, pos: 2},\r\n    temp203: {index: 61, name: \"temp203\", id: 274, pos: 3},\r\n    temp204: {index: 62, name: \"temp204\", id: 275, pos: 0},\r\n    temp205: {index: 63, name: \"temp205\", id: 275, pos: 1},\r\n    \r\n    /*pack 3*/ \r\n    \r\n    cell300: {index: 64, name: \"cell300\", id: 266, pos: 0},\r\n    cell301: {index: 65, name: \"cell301\", id: 266, pos: 1},\r\n    cell302: {index: 66, name: \"cell302\", id: 266, pos: 2},\r\n    cell303: {index: 67, name: \"cell303\", id: 266, pos: 3},\r\n    cell304: {index: 68, name: \"cell304\", id: 267, pos: 0},\r\n    cell305: {index: 69, name: \"cell305\", id: 267, pos: 1},\r\n    cell306: {index: 70, name: \"cell306\", id: 267, pos: 2},\r\n    cell307: {index: 71, name: \"cell307\", id: 267, pos: 3},\r\n    cell308: {index: 72, name: \"cell308\", id: 268, pos: 0},\r\n    cell309: {index: 73, name: \"cell309\", id: 268, pos: 1},\r\n    cell310: {index: 74, name: \"cell310\", id: 268, pos: 2},\r\n    cell311: {index: 75, name: \"cell311\", id: 268, pos: 3},\r\n    cell312: {index: 76, name: \"cell312\", id: 269, pos: 0},\r\n    temp301: {index: 77, name: \"temp301\", id: 269, pos: 1},\r\n    temp302: {index: 78, name: \"temp302\", id: 269, pos: 2},\r\n    temp303: {index: 79, name: \"temp303\", id: 269, pos: 3},\r\n    temp304: {index: 80, name: \"temp304\", id: 270, pos: 0},\r\n    temp305: {index: 81, name: \"temp305\", id: 270, pos: 1},\r\n    \r\n    /*pack 4*/ \r\n\r\n    cell400: {index: 82, name: \"cell400\", id: 256, pos: 0},\r\n    cell401: {index: 83, name: \"cell401\", id: 256, pos: 1},\r\n    cell402: {index: 84, name: \"cell402\", id: 256, pos: 2},\r\n    cell403: {index: 85, name: \"cell403\", id: 256, pos: 3},\r\n    cell404: {index: 86, name: \"cell404\", id: 257, pos: 0},\r\n    cell405: {index: 87, name: \"cell405\", id: 257, pos: 1},\r\n    cell406: {index: 88, name: \"cell406\", id: 257, pos: 2},\r\n    cell407: {index: 89, name: \"cell407\", id: 257, pos: 3},\r\n    cell408: {index: 90, name: \"cell408\", id: 258, pos: 0},\r\n    cell409: {index: 91, name: \"cell409\", id: 258, pos: 1},\r\n    cell410: {index: 92, name: \"cell410\", id: 258, pos: 2},\r\n    cell411: {index: 93, name: \"cell411\", id: 258, pos: 3},\r\n    cell412: {index: 94, name: \"cell412\", id: 259, pos: 0},\r\n    temp401: {index: 95, name: \"temp401\", id: 259, pos: 1},\r\n    temp402: {index: 96, name: \"temp402\", id: 259, pos: 2},\r\n    temp403: {index: 97, name: \"temp403\", id: 259, pos: 3},\r\n    temp404: {index: 98, name: \"temp404\", id: 260, pos: 0},\r\n    temp405: {index: 99, name: \"temp405\", id: 260, pos: 1},\r\n    \r\n    /*pack 5*/ \r\n    \r\n    cell500: {index: 100, name: \"cell500\", id: 261, pos: 0},\r\n    cell501: {index: 101, name: \"cell501\", id: 261, pos: 1},\r\n    cell502: {index: 102, name: \"cell502\", id: 261, pos: 2},\r\n    cell503: {index: 103, name: \"cell503\", id: 261, pos: 3},\r\n    cell504: {index: 104, name: \"cell504\", id: 262, pos: 0},\r\n    cell505: {index: 105, name: \"cell505\", id: 262, pos: 1},\r\n    cell506: {index: 106, name: \"cell506\", id: 262, pos: 2},\r\n    cell507: {index: 107, name: \"cell507\", id: 262, pos: 3},\r\n    cell508: {index: 108, name: \"cell508\", id: 263, pos: 0},\r\n    cell509: {index: 109, name: \"cell509\", id: 263, pos: 1},\r\n    cell510: {index: 110, name: \"cell510\", id: 263, pos: 2},\r\n    cell511: {index: 111, name: \"cell511\", id: 263, pos: 3},\r\n    cell512: {index: 112, name: \"cell512\", id: 264, pos: 0},\r\n    temp501: {index: 113, name: \"temp501\", id: 264, pos: 1},\r\n    temp502: {index: 114, name: \"temp502\", id: 264, pos: 2},\r\n    temp503: {index: 115, name: \"temp503\", id: 264, pos: 3},\r\n    temp504: {index: 116, name: \"temp504\", id: 265, pos: 0},\r\n    temp505: {index: 117, name: \"temp505\", id: 265, pos: 1},\r\n\r\n    /*controle geral*/\r\n    \r\n    // todos os valores da tabela hash de controle estão aqui caso queira que se adicione coisas na janela\r\n    // temos que fazer um filtro desses dados no momento em que formos refatora-lá\r\n\r\n    operationMode: {index: 118, name: \"operationMode\", id: 1, pos: 0},\r\n    statusDatalog: {index: 119, name: \"statusDatalog\", id: 1, pos: 1},\r\n    erroECU: {index: 120, name: \"erroECU\", id: 1, pos: 2},\r\n    statusCurrent: {index: 121, name: \"statusCurrent\", id: 1, pos: 3},\r\n    ECUTimer: {index: 122, name: \"ECUTimer\", id: 101, pos: 0},   \r\n    steeringWheel: {index: 123, name: \"steeringWheel\", id: 101, pos: 1}, \r\n    pedalAcelerador: {index: 124, name: \"pedalAcelerador\", id: 101, pos: 2},\r\n    pedalFreio: {index: 125, name: \"pedalFreio\", id: 101, pos: 3},\r\n    selectedMode: {index: 126, name: \"selectedMode\", id: 102, pos: 0},\r\n    motorTorqueRight: {index: 127, name: \"motorTorqueRight\", id: 103, pos: 0},\r\n    motorTorqueLeft: {index: 128, name: \"motorTorqueLeft\", id: 103, pos: 1},\r\n    torqueReferenceRight: {index: 129, name: \"torqueReferenceRight\", id: 103, pos: 2},\r\n    torqueReferenceLeft: {index: 130, name: \"torqueReferenceLeft\", id: 103, pos: 3},\r\n    speedMotorRight: {index: 131, name: \"speedMotorRight\", id: 104, pos: 0},\r\n    speedMotorLeft: {index: 132, name: \"speedMotorLeft\", id: 104, pos: 1},\r\n    intensidadeFrenagem: {index: 133, name: \"intensidadeFrenagem\", id: 104, pos: 2},\r\n    selecaoBotao: {index: 134, name: \"selecaoBotao\", id: 104, pos: 3},\r\n    speedFL: {index: 135, name: \"speedFL\", id: 105, pos: 3},\r\n    speedFR: {index: 136, name: \"speedFR\", id: 105, pos: 2},\r\n    speedBL: {index: 137, name: \"speedBL\", id: 105, pos: 1},\r\n    speedBR: {index: 138, name: \"speedBR\", id: 105, pos: 0},\r\n    ganhoTorque: {index: 139, name: \"ganhoTorque\", id: 106, pos: 0}, //não está sendo utilizado\r\n    motorCurrentRight: {index: 140, name: \"motorCurrentRight\", id: 106, pos: 2},\r\n    motorCurrentLeft: {index: 141, name: \"motorCurrentLeft\", id: 106, pos: 3},\r\n    temperatureInversorR1: {index: 142, name: \"temperatureInversorR1\", id: 107, pos: 0},\r\n    temperatureInversorR2: {index: 143, name: \"temperatureInversorR2\", id: 107, pos: 1},\r\n    temperatureInversorL1: {index: 144, name: \"temperatureInversorL1\", id: 107, pos: 2},\r\n    temperatureInversorL2: {index: 145, name: \"temperatureInversorL2\", id: 107, pos: 3},\r\n    modoCorrespondente: {index: 146, name: \"modoCorrespondente\", id: 0x102, pos: 0},\r\n    flagCorrespondente1: {index: 147, name: \"flagCorrespondente1\", id: 0x102, pos: 1},\r\n    flagCorrespondente2: {index: 148, name: \"flagCorrespondente2\", id: 0x102, pos: 2},\r\n\r\n    // parte da tabela que ainda tem que ser conferida pois a tabelha hash está incompleta\r\n\r\n    tireTempFL: {index: 550, name: \"tireTempFL\", id: 0x700, pos: 0},\r\n    tireTempFR: {index: 551, name: \"tireTempFR\", id: 0x700, pos: 1},\r\n    tireTempBL: {index: 552, name: \"tireTempBL\", id: 0x700, pos: 2},\r\n    tireTempBR: {index: 553, name: \"tireTempBR\", id: 0x700, pos: 3},\r\n    // mediaSpeed: {index: 25, name: \"mediaSpeed\", id: 0x304, pos: 0},\r\n    // mediaTorque: {index: 26, name: \"mediaTorque\", id: 0x304, pos: 1},\r\n    accelerometerX: {index: 554, name: \"accelerometerX\", id: 161, pos: 0},\r\n    accelerometerY: {index: 555, name: \"accelerometerY\", id: 161, pos: 1},\r\n    accelerometerZ: {index: 556, name: \"accelerometerZ\", id: 161, pos: 2},\r\n    gyroscopeX: {index: 557, name: \"gyroscopeX\", id: 0x702, pos: 0},\r\n    gyroscopeY: {index: 558, name: \"gyroscopeY\", id: 0x702, pos: 1},\r\n    gyroscopeZ: {index: 559, name: \"gyroscopeZ\", id: 0x702, pos: 2},\r\n    potenciometroBalancin: {index: 561, name: \"potenciometroBalancin\", id: 170, pos: 1},\r\n    termoparFreioD: {index: 562, name: \"termoparFreioD\", id: 170, pos: 2},\r\n    extensometro1: {index: 563, name: \"extensometro1\", id: 171, pos: 0},\r\n    extensometro2: {index: 564, name: \"extensometro2\", id: 171, pos: 1},\r\n    interfaceFlag: {index: 568, name: \"interfaceFlag\", id: 102, pos: 1},\r\n    selecaoBotao: {index: 572, name: \"selecaoBotao\", id: 104, pos: 3},\r\n    extensometro22: {index: 574, name: \"extensometro22\", id: 173, pos: 0},\r\n    extensometro13: {index: 575, name: \"extensometro13\", id: 178, pos: 0},\r\n    extensometro23: {index: 576, name: \"extensometro23\", id: 178, pos: 2},\r\n    portConnected: {index: 900, name: \"portConnected\", id: 900, pos: 0},\r\n    rssi: {index: 901, name: \"rssi\", id: 901, pos: 0},\r\n    sensorPressaoDianteiro: {index: 660, name: \"sensorPressaoDianteiro\", id: 170, pos: 0},\r\n    hodometroParcial: {index: 669, name: \"hodometroParcial\", id: 102, pos: 2},\r\n    hodometroTotal: {index: 670, name: \"hodometroTotal\", id: 102, pos: 3},\r\n    simHodometer: {index: 677, name: \"simHodometer\", id: 901, pos: 0},\r\n    simCharge: {index: 678, name: \"simCharge\", id: 901, pos: 1},\r\n    pressaoTraseiro: {index: 679, name: \"pressaoTraseiro\", id: 200, pos: 0},\r\n    mediaCurrent: {index: 600, name: \"mediaCurrent\", id: 53, pos: 0}, //não achei\r\n    mediaTemperature: {index: 602, name: \"mediaTemperature\", id: 53, pos: 2} //não achei  \r\n\r\n}\r\n\r\nconst nameFieldIdMap = Object.values(fields).reduce((last, field) => (last[field.name] = field.index, last), {})\r\nconst fieldIdNameMap = Object.values(fields).reduce((last, field) => (last[field.index] = field.name, last), {})\r\n\r\n//para plotar no gráfico\r\nlet availablePlotOptions = [\r\n    {index: fields.current0.index, name: \"Corrente 0\", unidade: \"A\", formatFn: ((current) => (current > Math.pow(2, 15) ? (current-Math.pow(2, 16))/10: current/10))},\r\n    {index: fields.current1.index, name: \"Corrente 1\", unidade: \"A\", formatFn: ((current) => (current > Math.pow(2, 15) ? (current-Math.pow(2, 16))/100: current)/100)},\r\n    {index: fields.current2.index, name: \"Corrente 2\", unidade: \"A\", formatFn: ((current) => (current > Math.pow(2, 15) ? (current-Math.pow(2, 16))/10: current)/10)},\r\n    {index: fields.current3.index, name: \"Corrente 3\", unidade: \"A\", formatFn: ((current) => (current > Math.pow(2, 15) ? (current-Math.pow(2, 16))/10: current)/10)},\r\n    {index: fields.glvVoltage.index, name: \"Tensão do GLV\", unidade: \"V\", formatFn: ((a) => a/1000)},\r\n    {index: fields.chargePercent.index, name: \"Porcentagem de Carga\", unidade: \"%\", formatFn: ((a) => a/100)},\r\n    {index: fields.mediaCurrent.index, name: \"Corrente Média\", unidade: \"A\", formatFn: ((current) => (current > Math.pow(2, 15) ? (current-Math.pow(2, 16))/100: current/100))},\r\n    {index: fields.totalVoltage.index, name: \"Tensão Total\", unidade: \"V\", formatFn: ((a) => a/100)},\r\n    {index: fields.mediaTemperature.index, name: \"Temperatura Média\", unidade: \"ºC\", formatFn: ((a) => a/1000)},\r\n    {index: fields.maxTemperature.index, name: \"Temperatura Máxima\", unidade: \"ºC\", formatFn: ((a) => a/1000)},\r\n    {index: fields.minVoltage.index, name: \"Tensão Mínima\", unidade: \"V\", formatFn: ((a) => a/10000)},\r\n    {index: fields.mediaTemperature.index, name: \"Temperatura Média\", unidade: \"ºC\", formatFn: ((a) => a/1000)},\r\n    {index: fields.motorTorqueRight.index, name: \"Torque Motor Direito\", unidade: \"%\", formatFn: ((a) => a/10)},\r\n    {index: fields.motorTorqueLeft.index, name: \"Torque Motor Esquerdo\", unidade: \"%\", formatFn: ((a) => a/10)},\r\n    {index: fields.torqueReferenceRight.index, name: \"Referência de Torque Direito\", unidade: \"%\", formatFn: ((a) => a/10)},\r\n    {index: fields.torqueReferenceLeft.index, name: \"Referência de Torque Esquerdo\", unidade: \"%\", formatFn: ((a) => a/10)},\r\n    {index: fields.pedalAcelerador.index, name: \"Pedal Acelerador\", unidade: \"%\", formatFn: ((a) => a/10)},\r\n    {index: fields.pedalFreio.index, name: \"Pedal Freio\", unidade: \"\", formatFn: ((a) => Math.round(a))},\r\n    // {index: fields.mediaSpeed.index, name: \"Velocidade Média\", unidade: \"km/h\", formatFn: ((a) => a)},\r\n    // {index: fields.mediaTorque.index, name: \"Torque Médio\", unidade: \"%\", formatFn: ((a) => a/100)},\r\n    {index: fields.steeringWheel.index, name: \"Volante\", unidade: \"º\", formatFn: ((a) => a*300/4095-164.1025)},\r\n    // {index: fields.energiaInversorRight.index, name: \"Energia Inversor Direito\", unidade: \"kWh\", formatFn: ((a) => a/1000)},\r\n    // {index: fields.energiaInversorLeft.index, name: \"Energia Inversor Esquerdo\", unidade: \"kWh\", formatFn: ((a) => a/1000)},\r\n    {index: fields.motorCurrentRight.index, name: \"Corrente Motor Direito\", unidade: \"A\", formatFn: ((a) => a/100)},\r\n    {index: fields.motorCurrentLeft.index, name: \"Corrente Motor Esquerdo\", unidade: \"A\", formatFn: ((a) => a/100)},\r\n    {index: fields.temperatureInversorR1.index, name: \"Temperatura Inversor Direito 1\", unidade: \"ºC\", formatFn: ((a) => a/100)},\r\n    {index: fields.temperatureInversorR2.index, name: \"Temperatura Inversor Direito 2\", unidade: \"ºC\", formatFn: ((a) => a/100)},\r\n    {index: fields.temperatureInversorL1.index, name: \"Temperatura Inversor Esquerdo 1\", unidade: \"ºC\", formatFn: ((a) => a/100)},\r\n    {index: fields.temperatureInversorL2.index, name: \"Temperatura Inversor Esquerdo 2\", unidade: \"ºC\", formatFn: ((a) => a/100)},\r\n    {index: fields.speedFL.index, name: \"Velocidade do Pneu Dianteiro Esquerdo\", unidade: \"RPM\", formatFn: ((a) => a/10/3.6/(52.07/10*Math.PI)*60)},\r\n    {index: fields.speedFR.index, name: \"Velocidade do Pneu Dianteiro Direito\", unidade: \"RPM\", formatFn: ((a) => a/10/3.6/(52.07/10*Math.PI)*60)},\r\n    {index: fields.speedBL.index, name: \"Velocidade do Pneu Traseiro Esquerdo\", unidade: \"RPM\", formatFn: ((a) => a/9)},\r\n    {index: fields.speedBR.index, name: \"Velocidade do Pneu Traseiro Direito\", unidade: \"RPM\", formatFn: ((a) => a/9)},\r\n    {index: fields.speedMotorLeft.index, name: \"Velocidade do Motor Esquerdo\", unidade: \"RPM\", formatFn: ((a) => a/9)},\r\n    {index: fields.speedMotorRight.index, name: \"Velocidade do Motor Direito\", unidade: \"RPM\", formatFn: ((a) => a/9)},\r\n    {index: fields.tireTempFL.index, name: \"Temperatura do Pneu Dianteiro Esquerdo\", unidade: \"ºC\", formatFn: ((a) => a/100)},\r\n    {index: fields.tireTempFR.index, name: \"Temperatura do Pneu Dianteiro Direito\", unidade: \"ºC\", formatFn: ((a) => a/100)},\r\n    {index: fields.tireTempBL.index, name: \"Temperatura do Pneu Traseiro Esquerdo\", unidade: \"ºC\", formatFn: ((a) => a)},\r\n    {index: fields.tireTempBR.index, name: \"Temperatura do Pneu Traseiro Direito\", unidade: \"ºC\", formatFn: ((a) => a)},\r\n    {index: fields.accelerometerX.index, name: \"Acelerômetro X\", unidade: \"g\", formatFn: ((a) => a/100)},\r\n    {index: fields.accelerometerY.index, name: \"Acelerômetro Y\", unidade: \"g\", formatFn: ((a) => a/100)},\r\n    {index: fields.accelerometerZ.index, name: \"Acelerômetro Z\", unidade: \"g\", formatFn: ((a) => a/100)},\r\n    {index: fields.rssi.index, name: \"RSSI\", unidade: \"dBm\", formatFn: ((a) => -a)},\r\n    {index: fields.sensorPressaoDianteiro.index, name: \"Sensor de Pressão\", unidade: \"bar\", formatFn: ((a) => a)},\r\n    {index: fields.temp201.index, name: \"Temperatura 201\", unidade: \"ºC\", formatFn: ((a) => a)},\r\n    {index: fields.temp203.index, name: \"Temperatura 203\", unidade: \"ºC\", formatFn: ((a) => a)},\r\n    {index: fields.temp301.index, name: \"Temperatura 301\", unidade: \"ºC\", formatFn: ((a) => a)},\r\n    {index: fields.temp303.index, name: \"Temperatura 303\", unidade: \"ºC\", formatFn: ((a) => a)},\r\n    {index: fields.temp401.index, name: \"Temperatura 401\", unidade: \"ºC\", formatFn: ((a) => a)},\r\n    {index: fields.temp403.index, name: \"Temperatura 403\", unidade: \"ºC\", formatFn: ((a) => a)},\r\n    {index: fields.simCharge.index, name: \"Descarga recente\", unidade: \"C\", formatFn: ((a) => a)},\r\n    {index: fields.pressaoTraseiro.index, name: \"Pressão na linha de freio traseira\", unidade: \"Pa\", formatFn: ((a) => a)}\r\n]\r\n\r\nconst availablePlotIndexes = availablePlotOptions.map(option => option.index);\r\n\r\nlet datalogOrder = [\r\n    fields.ECUTimer.name,\r\n    //fields.hodometroTotal.name,\r\n    fields.glvVoltage.name,\r\n    fields.speedFL.name,\r\n    fields.speedFR.name,\r\n    fields.speedMotorLeft.name,\r\n    fields.speedMotorRight.name,\r\n    fields.pedalAcelerador.name,\r\n    fields.pedalFreio.name,\r\n    fields.steeringWheel.name,\r\n    fields.motorCurrentRight.name,\r\n    fields.motorCurrentLeft.name,\r\n    fields.accelerometerX.name,\r\n    fields.accelerometerY.name,\r\n    fields.accelerometerZ.name,\r\n    fields.sensorPressaoDianteiro.name,\r\n    fields.potenciometroBalancin.name,\r\n    fields.termoparFreioD.name,\r\n    fields.extensometro1.name,\r\n    fields.extensometro2.name,\r\n    fields.speedMotorRight.name,\r\n    fields.speedMotorLeft.name,\r\n    fields.current0.name,\r\n    fields.current1.name,\r\n    fields.current2.name,\r\n    fields.current3.name,\r\n    fields.mediaTemperature.name,\r\n    fields.maxTemperature.name,\r\n    fields.motorCurrentRight.name,\r\n    fields.motorCurrentLeft.name,\r\n    fields.temp001.name,\r\n    fields.temp002.name,\r\n    fields.temp003.name,\r\n    fields.temp004.name,\r\n    fields.temp101.name,\r\n    fields.temp102.name,\r\n    fields.temp103.name,\r\n    fields.temp104.name,\r\n    fields.temp201.name,\r\n    fields.temp202.name,\r\n    fields.temp203.name,\r\n    fields.temp204.name,\r\n    fields.temp301.name,\r\n    fields.temp302.name,\r\n    fields.temp303.name,\r\n    fields.temp304.name,\r\n    fields.temp401.name,\r\n    fields.temp402.name,\r\n    fields.temp403.name,\r\n    fields.temp404.name,\r\n    fields.temp501.name,\r\n    fields.temp502.name,\r\n    fields.temp503.name,\r\n    fields.temp504.name,\r\n    fields.current3.name,\r\n    fields.totalVoltage.name,\r\n    fields.minVoltage.name,\r\n    fields.pressaoTraseiro.name\r\n]\r\n\r\n// let datalogOrder = [\r\n//     fields.current0.name,\r\n//     fields.current1.name,\r\n//     fields.current2.name,\r\n//     fields.current3.name,\r\n//     fields.motorCurrentRight.name,\r\n//     fields.motorCurrentLeft.name\r\n// ]\r\n\r\nlet fieldsLimits = [\r\n    {name: fields.chargePercent.name, formattedName: \"Porcentagem de Carga\", min: 0, maxReference: 100},\r\n    {name: fields.glvVoltage.name, formattedName: \"Tensão do GLV\", min: 13000, maxReference: 16000},\r\n    {name: fields.maxTemperature.name, formattedName: \"Temperatura Máxima dos Packs\", max: 65500},\r\n    {name: fields.minVoltage.name, formattedName: \"Tensão Mínima das Células\", min: 28000, maxReference: 35500},\r\n    {name: fields.temperatureInversorL1.name, formattedName: \"Temperatura do Inversor Esquerdo 1\", max: 50000},\r\n    {name: fields.temperatureInversorL2.name, formattedName: \"Temperatura do Inversor Esquerdo 2\", max: 50000},\r\n    {name: fields.temperatureInversorR1.name, formattedName: \"Temperatura do Inversor Direito 1\", max: 50000},\r\n    {name: fields.temperatureInversorR2.name, formattedName: \"Temperatura do Inversor Direito 2\", max: 50000},\r\n    {name: fields.tireTempBL.name, formattedName: \"Temperatura Pneu Traseiro Esquerdo\", max: 20000},\r\n    {name: fields.tireTempBR.name, formattedName: \"Temperatura Pneu Traseiro Direito\", max: 20000},\r\n    {name: fields.tireTempFL.name, formattedName: \"Temperatura Pneu Dianteiro Esquerdo\", max: 20000},\r\n    {name: fields.tireTempFR.name, formattedName: \"Temperatura Pneu Dianteiro Direito\", max: 20000},\r\n]\r\n\r\nfieldsLimits = fieldsLimits.reduce( (last, field) => {\r\n    last[field.name] = {}; \r\n    last[field.name].name = field.formattedName; \r\n    last[field.name][(typeof field.max === 'undefined' ? \"min\": \"max\")] = (typeof field.max === 'undefined' ? field.min: field.max);\r\n    if (typeof field.maxReference !== 'undefined')\r\n        last[field.name].maxReference = field.maxReference;\r\n    return last\r\n}, {});\r\n\r\nmodule.exports = {\r\n    availablePlotOptions,\r\n    fields,\r\n    mappings: {\r\n        nameFieldIdMap: nameFieldIdMap, \r\n        fieldIdNameMap: fieldIdNameMap,\r\n        availablePlotIndexes: availablePlotIndexes\r\n    },\r\n    persistanceTimeout,\r\n    cleanUpTimeout,\r\n    pointsPerSecond,\r\n    fieldsLimit: {\r\n        fieldsLimit: fieldsLimits, \r\n        percentageLimitTolerance: percentageLimitTolerance, \r\n        notificationExpirationTimeout: notificationExpirationTimeout, \r\n        shouldNotify: shouldNotify\r\n    },\r\n    port: {\r\n        portName: portName, \r\n        ignorePortsFile: ignorePortsFile, \r\n        operationType: operationType, \r\n        OperationsType: OperationsType,\r\n        xbeeSourceAddress: xbeeSourceAddress\r\n    },\r\n    datalog: {\r\n        datalogOrder: datalogOrder, \r\n        filepath: datalogFilePath, \r\n        shouldWrite: shouldWrite, \r\n        timeout: datalogTimeout,\r\n        includeTimestamp: includeTimestamp\r\n    }\r\n}","import React from 'react';\r\n\r\nconst DelayContext = React.createContext();\r\n\r\nexport {\r\n    DelayContext\r\n}\r\n\r\n\r\n","import React, { Component, useContext } from 'react';\r\nimport { DelayContext } from './contexts.js';\r\nimport CountUp from 'react-countup';\r\n\r\n\r\nclass CountUpWrapper extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        // debugger;\r\n        if (typeof (props.children) !== 'undefined') {\r\n            this.childRef = React.createRef();\r\n        }\r\n        this.lastValue = 0;\r\n        this.lastEnd = 0;\r\n        this.lastComp = undefined;\r\n    }\r\n\r\n    render() {\r\n\r\n        /*if (this.props.duration == 0 || this.context/1000 == 0) {\r\n            // debugger;\r\n            if (typeof (this.props.children) !== 'undefined') {\r\n                // debugger;\r\n                let comp = this.props.children(this.childRef);\r\n                console.log(comp);\r\n                while (typeof (comp.props.children) !== 'undefined')\r\n                    comp = comp.props.children\r\n                let Ded = comp;\r\n                let asd = <ZeroDurationComponent component={comp}/>;\r\n                // debugger;\r\n                // d.innerHTML = this.props.end;\r\n                \r\n                // if (d.type === 'INPUT') {\r\n                //     d.value = this.props.end;\r\n                // }\r\n                // else if (d.tagName === 'text' || self.d.tagName === 'tspan') {\r\n                //     d.textContent = this.props.end;\r\n                // }\r\n                // else {\r\n                //     d.innerHTML = this.props.end;\r\n                // }\r\n                return comp;\r\n            } else {\r\n                return (<span>{this.props.end}</span>)\r\n            }\r\n        } else {*/\r\n            var p = this.props;\r\n    \r\n            const comp = (\r\n                <CountComponent {...p}\r\n                                start={this.lastValue}>\r\n                    {p.children}\r\n                </CountComponent>\r\n            )\r\n            \r\n            if (p.end == this.lastEnd) \r\n                return this.lastComp || comp;\r\n            \r\n    \r\n            this.lastValue = p.end;\r\n    \r\n            delete this.lastComp;\r\n            this.lastComp = comp;\r\n            this.lastEnd = p.end;\r\n    \r\n            return comp;\r\n        //}\r\n\r\n    }\r\n    \r\n\r\n    \r\n\r\n}\r\n\r\nCountUpWrapper.contextType = DelayContext;\r\n\r\nfunction ZeroDurationComponent(props) {\r\n    return (props.component)\r\n}\r\n\r\n// function RetrieveDuration(props) {\r\n//     return props.duration || useContext(DelayContext)/1000;\r\n// }\r\n\r\nfunction CountComponent(props) {\r\n    // debugger;\r\n    var decs = props.decimals ? props.decimals : props.decimals == 0 ? 0: 2;\r\n    return (\r\n        <CountUp {...props}\r\n                 decimals={decs}\r\n                 duration={props.duration || useContext(DelayContext)/1000}\r\n                 delay={props.delay || 0}\r\n                 useEasing={props.useEasing || false}>\r\n            {props.children}\r\n        </CountUp>\r\n    )\r\n}\r\n\r\n\r\nexport default CountUpWrapper;","import React, { Component } from 'react'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nimport handleNotifications from './notifications-handler.js'\r\n\r\n\r\nclass DataFetcher extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        // debugger;\r\n\r\n        this.updateRSSI = props.updateRSSI;\r\n        \r\n        this.delay = 300;\r\n\r\n        props.setChildDelay(this.delay);\r\n\r\n        this.state = {};\r\n        this.rootPage = \"data/\";\r\n    \r\n        this.isFetching = false;\r\n        this.shouldFetch = true;\r\n        this.timerID = null;\r\n\r\n        this.doFetch = this.doFetch.bind(this);\r\n      }\r\n\r\n      doFetch() {\r\n        this.updateField()\r\n            .then(res => {\r\n              if (res.data) {\r\n                // debugger;\r\n                const treatedData = this.treatData(res.data);\r\n                this.setState({\r\n                  data: treatedData\r\n                });\r\n                handleNotifications(res.data);\r\n                this.updateRSSI(res.data.rssi);\r\n              } else \r\n                throw Error(\"fetched undefined object\");\r\n              // \r\n              // var data = this.state.data;\r\n              // // debugger;\r\n              // data.bms.charge = (data.bms.charge == null ? 10000 : data.bms.charge - 1 < 0 ? 10000 : data.bms.charge - 100);\r\n              // this.setState({data: data});\r\n            }\r\n            ).catch(err => console.log(err))\r\n      }\r\n\r\n      startFetching() {\r\n        if (this.timerID != null) return;\r\n        this.doFetch();\r\n        this.timerID = setInterval(this.doFetch,this.delay);\r\n      }\r\n\r\n      stopFetching() {\r\n        clearInterval(this.timerID);\r\n        this.timerID = null;\r\n      }\r\n\r\n      treatData(data) {\r\n        return data;\r\n      }\r\n\r\n      componentDidMount() {\r\n        this.startFetching();\r\n      }\r\n\r\n    \r\n      componentWillUnmount() {\r\n        this.stopFetching();\r\n      }\r\n    \r\n      updateField = async () => {\r\n        \r\n        if (this.isFetching || !this.shouldFetch) {\r\n          return false;\r\n        } \r\n        this.isFetching = true;\r\n        const response =  await fetch('/'+this.rootPage+this.page);\r\n        const body = await response.json();\r\n        // console.log(body);\r\n        if (response.status !== 200) {\r\n          throw Error(body.message) \r\n        }\r\n        // console.log(new Date().getMilliseconds()-lastLoaded);\r\n        // lastLoaded = new Date().getMilliseconds();\r\n        //console.log(body);\r\n        this.isFetching = false;\r\n        return body;\r\n      }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default DataFetcher;","import React, { Component } from 'react'\r\nimport { toast } from 'react-toastify';\r\n\r\nconst constants = require('./constants.js');\r\n\r\n\r\nfunction NotificationBasis(props) {\r\n    return (\r\n        <div className=\"d-flex notification-container align-items-center\">\r\n            <div className=\"notification-icon\">\r\n                {props.icon}\r\n            </div>\r\n            <div className=\"flex-fill notification-text\">{props.text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PortDisconnected = ({ closeToast }) => (\r\n    <NotificationBasis  text={\"Porta Serial desconectada!\"}\r\n                        icon={<img src=\"/static/images/usb-unplugged.png\"/>}>\r\n    </NotificationBasis>\r\n)\r\n\r\nconst PortConnected = ({ closeToast }) => (\r\n    <NotificationBasis  text={\"Porta Serial conectada!\"}\r\n                        icon={<img src=\"/static/images/usb-plugged.png\"/>}>\r\n    </NotificationBasis>\r\n)\r\n\r\n\r\nconst WarningValue = ({closeToast, text}) => (\r\n    <NotificationBasis text={text}\r\n                       icon={<img src=\"/static/icons/warning-red.png\"/>}>\r\n    </NotificationBasis>\r\n)\r\n  \r\n  \r\nfunction handleNotifications(data) {\r\n    //CONEXAO SERIAL\r\n    // debugger;\r\n    if (!constants.fieldsLimit.shouldNotify) return;\r\n\r\n    if (!data.portConnected) {\r\n        if (!toast.isActive(900))\r\n            toast(<PortDisconnected/>, {\r\n                toastId: 900,\r\n                autoClose: false,\r\n                type: toast.TYPE.WARNING,\r\n                closeButton: false,\r\n                draggable: false,\r\n                closeOnClick: false\r\n            });\r\n    } else if (toast.isActive(900)) {\r\n        toast.dismiss(900);\r\n        toast.success(<PortConnected/>);\r\n    }\r\n    // debugger;\r\n    let offLimited = JSON.parse(localStorage.getItem(\"offLimitFields\"));\r\n    // debugger;\r\n    if (offLimited == null)\r\n        offLimited = [];\r\n    if (data.offLimitFields.length == 0) {\r\n        localStorage.clear()\r\n    } else {\r\n        const createOffLimitField = (fieldId, value, added) => {return {fieldId: fieldId, value: value, added: added}};\r\n        //interseção entre os novos campos offlimit que chegaram e os que ja estavam registrados como offlimit\r\n        let finalOffLimited = offLimited.filter(previousOffLimited => data.offLimitFields.some(newOffLimited => newOffLimited.fieldId === previousOffLimited.fieldId));\r\n        data.offLimitFields.forEach(field => {\r\n            //debugger;\r\n            const fIndex = finalOffLimited.findIndex(value => value.fieldId === field.fieldId);\r\n            //se, no armazenamento local, n tiver um aviso, cria um aviso novo\r\n            if (fIndex < 0) {\r\n                finalOffLimited.push(createOffLimitField(field.fieldId, field.value, new Date().getTime()))\r\n                \r\n                let textComp = createOffLimitComponent(field);\r\n\r\n                toast(<WarningValue text={textComp}/>, {\r\n                    type: toast.TYPE.ERROR\r\n                })\r\n            //se achou, verifica se ja passou o tempo de expiração. Se tiver passado, notifica novamente\r\n            } else {\r\n                if (new Date().getTime() - finalOffLimited[fIndex].added >= constants.fieldsLimit.notificationExpirationTimeout) {\r\n                    finalOffLimited[fIndex] = createOffLimitField(field.fieldId, field.value, new Date().getTime());\r\n                    // debugger;\r\n                    let textComp = createOffLimitComponent(field);\r\n\r\n                    toast(<WarningValue text={textComp}/>, {\r\n                        type: toast.TYPE.ERROR\r\n                    })\r\n                }\r\n            }\r\n        }, this);\r\n        localStorage.setItem('offLimitFields', JSON.stringify(finalOffLimited));\r\n        \r\n    }\r\n}\r\n\r\nfunction createOffLimitComponent(field) {\r\n    let name = constants.mappings.fieldIdNameMap[field.fieldId];\r\n    let fieldName = constants.fieldsLimit.fieldsLimit[name].name;\r\n\r\n    let textComp;\r\n    if (typeof constants.fieldsLimit.fieldsLimit[name].max !== 'undefined' && constants.fieldsLimit.fieldsLimit[name].max*(1-constants.fieldsLimit.percentageLimitTolerance/100) <= field.value) {\r\n        // debugger;\r\n        // const intValue = parseInt(field.value);\r\n        // const maxValue = constants.fieldsLimit.fieldsLimit[name].max;\r\n        // const difference = (maxValue-intValue);\r\n        // const decimalPerc = difference/constants.fieldsLimit.fieldsLimit[name].max*100;\r\n        // const perc = parseInt(decimalPerc);\r\n        let perc = parseInt((constants.fieldsLimit.fieldsLimit[name].max-parseInt(field.value))/constants.fieldsLimit.fieldsLimit[name].max*100);\r\n        // debugger;\r\n        textComp = (<span>O campo <span className=\"notification-field-name\">{fieldName}</span> está <span className=\"notification-value\">{(perc <= 0 ? 'ACIMA' : +perc+'% distante')}</span> do valor máximo!</span>)\r\n        \r\n    } else {\r\n        // debugger;\r\n        // let b1 = parseInt(field.value);\r\n        // let b2 = constants.fieldsLimit.fieldsLimit[name].min;\r\n        // let a1 = (b1-b2);\r\n        // let a2 = a1/constants.fieldsLimit.fieldsLimit[name].maxReference*100;\r\n        // let perc = parseInt(a2);\r\n        let perc = parseInt(( parseInt(field.value) - constants.fieldsLimit.fieldsLimit[name].min)/constants.fieldsLimit.fieldsLimit[name].maxReference*100);\r\n        // debugger;\r\n        textComp = (<span>O campo <span className=\"notification-field-name\">{fieldName}</span> está <span className=\"notification-value\">{(perc <= 0 ? 'ABAIXO' : +perc+'% distante')}</span> do valor mínimo!</span>)\r\n    }\r\n\r\n    return textComp;\r\n}\r\n\r\nexport default handleNotifications;","import React, { Component } from 'react'\r\n\r\nimport CountUpWrapper from '../components/countup-wrapper.js'\r\n\r\n\r\nclass Volante extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.updateVolante = this.updateVolante.bind(this);\r\n\r\n        this.rotateRef = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.value);\r\n        \r\n\r\n        \r\n\r\n        return (\r\n            <div className=\"volante-container default-container bordered-title-container\">\r\n                <div className=\"component-title bordered-title-text\">VOLANTE</div>\r\n                <div className=\"volante-svg-wrapper\">\r\n\r\n                    <svg cursor=\"default\" style={{zoom: 1}} width=\"100%\"\r\n                        id=\"svg_document\" baseProfile=\"full\" version=\"1.1\" preserveAspectRatio=\"xMidYMid meet\"\r\n                        viewBox=\"0 0 500 350\">\r\n                        \r\n                        \r\n                        <title id=\"svg_document_title\">Untitled.svg</title>\r\n                        <defs id=\"svg_document_defs\"></defs>\r\n                        <g id=\"main_group\"></g>\r\n                        <g ref={this.rotateRef} transform=\"\" id=\"st-wheel\">\r\n                            <path stroke=\"whitesmoke\" id=\"path1\" strokeWidth=\"3px\"\r\n                                d=\"M100,100 l0,120 s0,45 80,45 l140,0 s80,0 80,-45 l0,-120 s0,-30 -80,-30 l-140,0 s-80,0 -80,30  z \"\r\n                                fill=\"whitesmoke\" transform=\"\"></path>\r\n                            <path stroke=\"whitesmoke\" strokeLinejoin=\"miter\" strokeWidth=\"5\" id=\"path2\"\r\n                                d=\"M180,90 l-50,10 c-20,10 -20,30 0,40 l50,0 a10,10 90 0 0 10,-10 l0,-30 c0,-5 0,-10 -10,-10  z \"\r\n                                fill=\"black\" strokeLinecap=\"butt\" transform=\"\"></path>\r\n                            <path stroke=\"whitesmoke\" visibility=\"visible\" id=\"path3\" strokeWidth=\"5\"\r\n                                d=\"M320,90 l50,10 c20,10 20,30 0,40 l-50,0 a10,10 90 0 1 -10,-10 l0,-30 c0,-5 0,-10 10,-10  z \" fill=\"black\"\r\n                                strokeLinecap=\"butt\" transform=\"\" strokeLinejoin=\"miter\"></path>\r\n                            <path stroke=\"whitesmoke\" strokeWidth=\"5\" id=\"path4\"\r\n                                d=\"M365,169 a10,10 90 0 1 10,10 l0,40 c0,15 -35,29 -50,30 a10,10 90 0 1 -10,-10 l0,-30 s0,-40 45,-40  z \"\r\n                                fill=\"black\" strokeLinecap=\"butt\" transform=\"\" strokeLinejoin=\"miter\"></path>\r\n                            <path stroke=\"whitesmoke\" strokeWidth=\"5\" id=\"path5\"\r\n                                d=\"M135,170 a10,10 90 0 0 -10,10 l0,40 c0,15 35,29 50,30 a10,10 90 0 0 10,-10 l0,-30 s0,-40 -45,-40  z \"\r\n                                fill=\"black\" strokeLinecap=\"butt\" transform=\"\" strokeLinejoin=\"miter\"></path>\r\n                            <image x=\"218px\" height=\"49.417px\" y=\"141px\" id=\"image1\"\r\n                            xlinkHref=\"/static/images/logo-fundo-branco.png\"\r\n                            xlinkRole=\"/static/images/logo-fundo-branco.png\"\r\n                            width=\"69px\" preserveAspectRatio=\"xMidYMid meet\" transform=\"\"></image>\r\n                            <g id=\"g1\" transform=\"\">\r\n                                <circle stroke=\"none\" strokeWidth=\"3px\" id=\"circle2\" cy=\"135px\" fill=\"black\" r=\"4px\" transform=\"\"\r\n                                    cx=\"269px\"></circle>\r\n                                <circle stroke=\"none\" strokeWidth=\"3px\" id=\"circle3\" cy=\"197px\" fill=\"black\" r=\"4px\" transform=\"\"\r\n                                    cx=\"230px\"></circle>\r\n                                <circle stroke=\"none\" strokeWidth=\"3px\" id=\"circle4\" cy=\"197px\" fill=\"black\" r=\"4px\" transform=\"\"\r\n                                    cx=\"269px\"></circle>\r\n                                <circle stroke=\"none\" strokeWidth=\"3px\" id=\"circle5\" cy=\"135px\" fill=\"black\" r=\"4px\" transform=\"\"\r\n                                    cx=\"230px\"></circle>\r\n                                <circle stroke=\"none\" transform=\"\" strokeWidth=\"3px\" id=\"circle1\" cy=\"166px\" fill=\"black\" r=\"4px\"\r\n                                    cx=\"286px\"></circle>\r\n                                <circle stroke=\"none\" transform=\"\" strokeWidth=\"3px\" id=\"circle6\" cy=\"167px\" fill=\"black\" r=\"4px\"\r\n                                    cx=\"213px\"></circle>\r\n                            </g>\r\n                        </g>\r\n                    </svg>\r\n                </div>\r\n                <div className=\"volante-value-wrapper\">\r\n                    <span className=\"volante-title\">\r\n                        ROTAÇÃO:\r\n                    </span>\r\n                    <CountUpWrapper end={280/4095*(2502-this.props.value)}\r\n                                    decimals={0}\r\n                                    formattingFn={this.updateVolante}>\r\n                        {\r\n                            ({countUpRef}) => (\r\n                                <span ref={countUpRef} className=\"volante-value\">\r\n\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </CountUpWrapper>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    updateVolante(value) {\r\n        var rotateComponent = this.rotateRef.current;\r\n\r\n        if (rotateComponent) {\r\n            rotateComponent.setAttribute(\"transform\",\"rotate(\"+value+\", 250, 167.5)\");\r\n        }\r\n\r\n        return parseInt(value)+\"º\";\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Volante;","export default \"# TIPO DE OPERAÇÃO\\r\\n# Valores possíveis:\\r\\n# BYTES  - Recebimento por Xbee em formato de bytes\\r\\n# STRING - Recebimento por Xbee ou NRF em formato de string\\r\\n# API_BYTES  - Recebimento por Xbee em API mode por bytes\\r\\n# API_STRING - Recebimento por Xbee em API mode por string\\r\\n# [default = STRING]\\r\\noperationType = API_BYTES\\r\\n\\r\\n# [string] [default = 0013A20041932DC6] Endereço 64bits do xbee transmissor.\\r\\nxbeeSourceAddress = 0013A20041932DC6\\r\\n\\r\\n# PORTA SERIAL\\r\\n\\r\\n# [string] [default = ] Nome da porta serial que o dispositivo receptor se encontra. Deixe vazio para identificação automática.\\r\\nportName = \\r\\n# [string] [default = ignore-ports.txt] Nome do arquivo de texto, na pasta raiz, contendo nome de portas para serem ignoradas na identificação automática de porta, separados por linha.\\r\\nignorePortsFile = ignore-ports.txt\\r\\n\\r\\n\\r\\n# NOTIFICAÇÕES\\r\\n\\r\\n# [bool] [default = true] Ativar ou desativar notificações\\r\\nshouldNotify = false\\r\\n# [number] [default = 10] Limite percentual para acionar a notificação que alerta da proximidade do valor mínimo/máximo\\r\\npercentageLimitTolerance = 10\\r\\n# [number] [default = 30000] Tempo de timeout em milissegundos para a notificação ser reacionada caso a condição não mude\\r\\nnotificationExpirationTimeout = 30000\\r\\n\\r\\n\\r\\n# DATALOG\\r\\n\\r\\n# [string] [default = ./datalog/] Caminho para a escrita do datalog. O DIRETÓRIO NÃO É CRIADO, ENTAÃO DEVE, OBRIGATORIAMENTE, EXISTIR.\\r\\ndatalogFilePath = ./datalog/\\r\\n# [bool] [default = true] Ativar ou desativar o datalog\\r\\nshouldWrite = true\\r\\n# [number]  [default = 30000] Tempo, em milissegundos, de quanto esperar sem receber dados até criar um novo arquivo de texto\\r\\ndatalogTimeout = 10000\\r\\n# [bool] [default = false] Incluir timestamp (quantidade de milissegundos desde 1/1/1970 00:00) como primeiro item de cada linha\\r\\nincludeTimestamp = true\\r\\n\\r\\n\\r\\n# PLOTAGEM EM TEMPO REAL\\r\\n\\r\\n# BANCO DE DADOS LOCAL\\r\\n# [number]  [default = 60000] Tempo, em milissegundos, de persistência dos dados no banco de dados antes de serem eliminados. Altere esse valor para definir de quanto tempo atrás os dados devem ser exibidos.\\r\\npersistanceTimeout = 60000\\r\\n# [number] [default = 1000] Período, em milissegundos, para ser acionada a varredura do banco de dados local para eliminar dados antigos\\r\\ncleanUpTimeout = 1000\\r\\n\\r\\n#PLOTAGEM\\r\\n# [number] [default = 1] Quantidade desejada de pontos por segundo para serem exibidos no gráfico. VALORES ALTOS PODEM COMPROMETER A INTEGRIDADE DO SERVIDOR E DA REDE.\\r\\npointsPerSecond = 1\\r\\n\\r\\n        \"","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/object/values\");","module.exports = require(\"core-js/library/fn/parse-int\");","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"core-js/library/fn/reflect/construct\");","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _Promise from \"../../core-js/promise\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import _Object$defineProperty from \"../../core-js/object/define-property\";\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$assign from \"../../core-js/object/assign\";\nexport default function _extends() {\n  _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import _Object$getPrototypeOf from \"../../core-js/object/get-prototype-of\";\nimport _Object$setPrototypeOf from \"../../core-js/object/set-prototype-of\";\nexport default function _getPrototypeOf(o) {\n  _getPrototypeOf = _Object$setPrototypeOf ? _Object$getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || _Object$getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _Object$create from \"../../core-js/object/create\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = _Object$create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import _Object$setPrototypeOf from \"../../core-js/object/set-prototype-of\";\nexport default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = _Object$setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import _Symbol$iterator from \"../../core-js/symbol/iterator\";\nimport _Symbol from \"../../core-js/symbol\";\n\nfunction _typeof2(obj) { if (typeof _Symbol === \"function\" && typeof _Symbol$iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof _Symbol === \"function\" && _typeof2(_Symbol$iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","module.exports = require(\"regenerator-runtime\");\n","import React, { Component } from 'react'\r\nimport DataFetcher from '../components/data-fetcher.js'\r\n\r\nimport CountUpWrapper from '../components/countup-wrapper.js'\r\n\r\nimport CarOverlay from '../components/carro-overlay.js'\r\nimport Volante from '../components/volante.js'\r\nimport AcelerometroXY from '../components/acelerometro-xy.js'\r\nimport AcelerometroYZ from '../components/acelerometro-yz.js'\r\n\r\nimport {DelayContext} from '../components/contexts.js'\r\n\r\n\r\nconst DelayProvider = DelayContext.Provider;\r\n\r\nclass Controle extends DataFetcher {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.page = \"controle\"\r\n        this.delay = 400;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <DelayProvider value={this.delay}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 col-12\" >\r\n                            <div style={{height: \"78vh\"}}>\r\n                                <CarOverlay {...((this.state.data || {}).control || {})}></CarOverlay>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md col-12 mr-4\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-5 mt-3\">\r\n                                    <Volante value={((this.state.data || {}).control || {}).steeringWheel || 2502}></Volante>\r\n                                </div>\r\n                                <div className=\"offset-1\"></div>\r\n                                <div className=\"col-6 mt-3 \">\r\n                                    <div className=\"bordered-title-container default-container\">\r\n                                        <div className=\"component-title bordered-title-text\">PEDAIS</div>\r\n                                        <Pedal title={\"ACELERADOR:\"}\r\n                                               icon={<img src=\"/static/SVGs/gas.svg\"></img>}\r\n                                               value={<CountUpWrapper end={(((this.state.data || {}).control || {}).pedals || {}).throttle/10 || 0} decimals={0} suffix={\" %\"}/>}/>\r\n                                        <hr className=\"gray-separator\"></hr>\r\n                                        <Pedal title={\"FREIO:\"}\r\n                                               icon={<img src=\"/static/SVGs/brake.svg\"></img>}\r\n                                               value={(((this.state.data || {}).control || {}).pedals || {}).brake == 1 ? <span className=\"brake-on\">ATIVADO</span> : <span className=\"brake-off\">DESATIVADO</span> } />\r\n\r\n                                        \r\n                                        <div className=\"pedal-content\">\r\n\r\n                                        </div>\r\n                                    </div>  \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mt-1\">\r\n                                <div className=\"col-12 mt-3\">\r\n                                    <div className=\"bordered-title-container default-container\">\r\n                                        <div className=\"component-title bordered-title-text\">ACELERÔMETRO</div>\r\n                                        <div className=\" row w-100\">\r\n                                            \r\n                                                <div className=\"col-md-7\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-12 component-title subtitle\">\r\n                                                            EIXO XY:\r\n                                                        </div>\r\n                                                        <div className=\"col-12\">\r\n                                                            <AcelerometroXY x={(((this.state.data || {}).control || {}).accelerometer || {}).x/1000} y={(((this.state.data || {}).control || {}).accelerometer || {}).y/1000}></AcelerometroXY>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-5\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-12 component-title subtitle\">\r\n                                                            EIXO YZ:\r\n                                                        </div>\r\n                                                        <div className=\"col-12\">\r\n                                                            <AcelerometroYZ z={(((this.state.data || {}).control || {}).accelerometer || {}).z/1000} y={(((this.state.data || {}).control || {}).accelerometer || {}).y/1000}></AcelerometroYZ>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                           \r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </DelayProvider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Pedal(props) {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"row d-flex align-items-center\">\r\n                <div className=\"col no-padding-right pedal-icon\">\r\n                    {props.icon}\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 pedal-title\">{props.title}</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 pedal-value\">{props.value}</div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Controle;","module.exports = require(\"chroma-js\");","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/object/values\");","module.exports = require(\"core-js/library/fn/parse-int\");","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"core-js/library/fn/reflect/construct\");","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","module.exports = require(\"fs\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"path\");","module.exports = require(\"react\");","module.exports = require(\"react-countup\");","module.exports = require(\"react-toastify\");","module.exports = require(\"regenerator-runtime\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AAEA;AAEA;AACA;AAEA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AATA;AAUA;AACA;;;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAOA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;;;;AApHA;AACA;AAsHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxKA;AAEA;AAEA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AACA;AANA;AAOA;AACA;;;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;;;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;;;;AA9FA;AACA;AAgGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjJA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;AAGA;AAEA;AAIA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAIA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAFA;AADA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAIA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AADA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAIA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AADA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AADA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AADA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AADA;AAOA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAIA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AADA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAGA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AADA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAIA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AADA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAGA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AADA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAIA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;AAIA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AADA;AAOA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAIA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AADA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAIA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAUA;;;;AAlfA;AACA;AAofA;;;;;;;;;;;;;;;;;;;;;;;;;;AC3fA;AACA;AACA;AACA;AAEA;AAMA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAkDA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnMA;AAoxBA;;;;;;;;;;;;;ACpfA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AAEA;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AATA;AAUA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AADA;AAMA;AAIA;AAEA;AACA;AACA;AAEA;AAGA;;;;AAlEA;AACA;AAwEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvGA;AACA;AAEA;AACA;AAEA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAmEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAKA;AALA;AAAA;AACA;AADA;AAMA;AANA;AAAA;AACA;AADA;AAOA;AACA;AARA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAYA;AACA;AACA;AACA;AAfA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA/DA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAlBA;AAmBA;AACA;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAnEA;AACA;AA6FA;;;;;;;;;;;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AADA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AADA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AADA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChIA;AAEA;AACA;AAEA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AALA;AAMA;AACA;;;AACA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAFA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAMA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AADA;AAWA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAhGA;AACA;AAqGA;;;;;;;;;;;;AC3GA;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpCA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AAJA;AAKA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAiBA;;;;AArFA;AACA;AAuFA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC5HA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}